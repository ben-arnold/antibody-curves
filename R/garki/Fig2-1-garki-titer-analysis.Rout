
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # Fig2-1-garki-titer-analysis.R
> #
> # Calculate age-adjusted mean
> # IFA antibody titres by
> # intervention group and survey round
> #
> #-------------------------------
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

> library(tmle)
Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.2)

Periodically check for the most current version (github.com/ben-arnold/tmleAb) 
(we have plans for some useful additions)


> 
> #-------------------------------
> # load the serology dataset
> #-------------------------------
> # d <- read.csv("~/dropbox/articles/antibody-curves/data/garki/final/garki-sero.csv")
> d <- garki_sero
> 
> d$mdate <- as.Date(d$mdate,"%d %b %Y")
> 
> 
> # add 2 control village names
> d$vname <- factor(d$vname,levels=c(levels(d$vname),"Nabanawa","Ajura"))
> d$vname[d$village==552] <- "Nabanawa"
> d$vname[d$village==553] <- "Ajura"
> d$vname <- factor(d$vname)
> 
> # for age exactly equal to 0, set it equal to 0.001
> # to prevent the Yman 2016 model from blowing up
> # (model is undefined at age=0)
> d$ageyrs[d$ageyrs<=0] <- 0.001
> 
> # subset to observations with non-missing Ab + age measures
> d <- subset(d,!is.na(d$ifatpftitre) & !is.na(d$ageyrs))
> 
> # subset to ages 0-20
> d <- subset(d,ageyrs<=20)
> 
> #-------------------------------
> # Serological survey timing:
> # 1-2 : pre-intervention
> # 3-5 : intervention period
> # 6-8 : post-intervention
> #-------------------------------
> 
> # subset the data by group and survey round for convenience
> # combine control measures by phase of the study
> d.c12  <- d[d$tr=="Control" & (d$serosvy==1|d$serosvy==2),]
> d.c345 <- d[d$tr=="Control" & (d$serosvy==3|d$serosvy==4|d$serosvy==5),]
> d.c78  <- d[d$tr=="Control" & (d$serosvy==7|d$serosvy==8),]
> 
> d.tr1 <- d[d$tr=="Intervention" & d$serosvy==1,]
> d.tr2 <- d[d$tr=="Intervention" & d$serosvy==2,]
> d.tr3 <- d[d$tr=="Intervention" & d$serosvy==3,]
> d.tr4 <- d[d$tr=="Intervention" & d$serosvy==4,]
> d.tr5 <- d[d$tr=="Intervention" & d$serosvy==5,]
> d.tr6 <- d[d$tr=="Intervention" & d$serosvy==6,]
> d.tr7 <- d[d$tr=="Intervention" & d$serosvy==7,]
> d.tr8 <- d[d$tr=="Intervention" & d$serosvy==8,]
> 
> #-------------------------------
> # Step 1: 
> # Age-specific antibody response
> # curves
> #-------------------------------
> 
> # SL library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> 
> 
> # Pre-intervention period fitted curves
> set.seed(23752)
> p.c12 <- agecurveAb(Y=log10(d.c12$ifatpftitre+1),Age=d.c12$ageyrs,id=d.c12$id,SL.library=SL.library)
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12


Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     0.3369989 0.01529593
SL.glm_All      0.2948169 0.04394021
SL.Yman2016_All 0.3034834 0.00000000
SL.gam.df7_All  0.2587914 0.00000000
SL.loess_All    0.2572127 0.94076386
> p.tr1 <- agecurveAb(Y=log10(d.tr1$ifatpftitre+1),Age=d.tr1$ageyrs,id=d.tr1$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     0.2807134 0.00000000
SL.glm_All      0.2719292 0.00000000
SL.Yman2016_All 0.2725480 0.06386325
SL.gam.df5_All  0.2634917 0.93613675
SL.loess_All    0.2640698 0.00000000
> p.tr2 <- agecurveAb(Y=log10(d.tr2$ifatpftitre+1),Age=d.tr2$ageyrs,id=d.tr2$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.4959944 0.012592618
SL.glm_All      0.4173012 0.005925629
SL.Yman2016_All 0.5424785 0.000000000
SL.gam.df10_All 0.3385613 0.981481753
SL.loess_All    0.3479049 0.000000000
> 
> # Intervention phase fitted curves
> set.seed(2436)
> p.c345 <- agecurveAb(Y=log10(d.c345$ifatpftitre+1),Age=d.c345$ageyrs,id=d.c345$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.7553761 0.001863889
SL.glm_All      0.6310864 0.000000000
SL.Yman2016_All 0.6842681 0.000000000
SL.gam.df10_All 0.5051835 0.998136111
SL.loess_All    0.5277591 0.000000000
> p.tr3 <- agecurveAb(Y=log10(d.tr3$ifatpftitre+1),Age=d.tr3$ageyrs,id=d.tr3$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     0.9005568    0
SL.glm_All      0.6132087    0
SL.Yman2016_All 0.7942347    0
SL.gam.df10_All 0.4388123    1
SL.loess_All    0.5014591    0
> p.tr4 <- agecurveAb(Y=log10(d.tr4$ifatpftitre+1),Age=d.tr4$ageyrs,id=d.tr4$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     1.2820571    0
SL.glm_All      0.7915804    0
SL.Yman2016_All 1.3850542    0
SL.gam.df10_All 0.5093662    1
SL.loess_All    0.6277605    0
> p.tr5 <- agecurveAb(Y=log10(d.tr5$ifatpftitre+1),Age=d.tr5$ageyrs,id=d.tr5$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     1.2487481    0
SL.glm_All      0.7039408    0
SL.Yman2016_All 1.0928159    0
SL.gam.df10_All 0.4718814    1
SL.loess_All    0.5405036    0
> 
> # post intervention period fitted curves
> # note: no control measurement in round 6
> set.seed(45234)
> p.c78 <- agecurveAb(Y=log10(d.c78$ifatpftitre+1),Age=d.c78$ageyrs,id=d.c78$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.5803018 0.017389913
SL.glm_All      0.4846133 0.001080577
SL.Yman2016_All 0.5091101 0.000000000
SL.gam.df10_All 0.3894704 0.957725296
SL.loess_All    0.3946922 0.023804214
> p.tr6 <- agecurveAb(Y=log10(d.tr6$ifatpftitre+1),Age=d.tr6$ageyrs,id=d.tr6$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     1.3531233    0
SL.glm_All      0.6475377    0
SL.Yman2016_All 1.0151440    0
SL.gam.df9_All  0.4511030    1
SL.loess_All    0.4844976    0
> p.tr7 <- agecurveAb(Y=log10(d.tr7$ifatpftitre+1),Age=d.tr7$ageyrs,id=d.tr7$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     1.6194789 0.004991703
SL.glm_All      1.1403740 0.013653294
SL.Yman2016_All 1.2968745 0.000000000
SL.gam.df7_All  0.9920331 0.981355003
SL.loess_All    0.9990254 0.000000000
> p.tr8 <- agecurveAb(Y=log10(d.tr8$ifatpftitre+1),Age=d.tr8$ageyrs,id=d.tr8$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     1.2196331 0.000000000
SL.glm_All      0.9414064 0.006440305
SL.Yman2016_All 1.2945996 0.000000000
SL.gam.df9_All  0.8407500 0.993559695
SL.loess_All    0.8807192 0.000000000
There were 11 warnings (use warnings() to see them)
> 
> 
> #-------------------------------
> # Step 2: 
> # Calculate age-adjusted means
> # and difference in means
> # by treatment group and 
> # survey round
> #-------------------------------
> 
> # create a numeric 0/1 treatment variable
> d$tr01 <- ifelse(d$tr=="Control",0,1)
> 
> 
> set.seed(5463452)
> 
> ## Control Villages 
> # Nabanawa + Ajura
> # (no measurement in survey round 6)
> mu_c <- sapply(c(1:5,7:8),function(x) tmleAb(Y=log10(d$ifatpftitre[d$tr=="Control" & d$serosvy==x]+1),
+                                              W=data.frame(Age=d$ageyrs[d$tr=="Control" & d$serosvy==x]),
+                                              id=d$id[d$tr=="Control" & d$serosvy==x],
+                                              SL.library=SL.library)[c("psi","se","lb","ub","p")] )
 Population Mean
   Parameter Estimate:  3.2068
   Estimated Variance:  0.0013173
              p-value:  <2e-16
    95% Conf Interval: (3.1356, 3.2779) 
 Population Mean
   Parameter Estimate:  3.0684
   Estimated Variance:  0.0014501
              p-value:  <2e-16
    95% Conf Interval: (2.9938, 3.143) 
 Population Mean
   Parameter Estimate:  3.1047
   Estimated Variance:  0.0021665
              p-value:  <2e-16
    95% Conf Interval: (3.0135, 3.1959) 
 Population Mean
   Parameter Estimate:  2.7871
   Estimated Variance:  0.0040448
              p-value:  <2e-16
    95% Conf Interval: (2.6625, 2.9118) 
 Population Mean
   Parameter Estimate:  3.2218
   Estimated Variance:  0.0026335
              p-value:  <2e-16
    95% Conf Interval: (3.1212, 3.3224) 
 Population Mean
   Parameter Estimate:  3.1193
   Estimated Variance:  0.00218
              p-value:  <2e-16
    95% Conf Interval: (3.0278, 3.2108) 
 Population Mean
   Parameter Estimate:  2.8336
   Estimated Variance:  0.0043164
              p-value:  <2e-16
    95% Conf Interval: (2.7049, 2.9624) 
> 
> 
> ### Intervention Villages - Spraying (Propoxur) + MDA
> mu_i <- sapply(c(1:8),function(x) tmleAb(Y=log10(d$ifatpftitre[d$tr=="Intervention" & d$serosvy==x]+1),
+                                              W=data.frame(Age=d$ageyrs[d$tr=="Intervention" & d$serosvy==x]),
+                                              id=d$id[d$tr=="Intervention" & d$serosvy==x],
+                                              SL.library=SL.library)[c("psi","se","lb","ub","p")] )
 Population Mean
   Parameter Estimate:  3.3301
   Estimated Variance:  0.00067833
              p-value:  <2e-16
    95% Conf Interval: (3.2791, 3.3812) 
 Population Mean
   Parameter Estimate:  3.1598
   Estimated Variance:  0.0013722
              p-value:  <2e-16
    95% Conf Interval: (3.0872, 3.2324) 
 Population Mean
   Parameter Estimate:  2.5236
   Estimated Variance:  0.002209
              p-value:  <2e-16
    95% Conf Interval: (2.4314, 2.6157) 
 Population Mean
   Parameter Estimate:  2.0237
   Estimated Variance:  0.003115
              p-value:  <2e-16
    95% Conf Interval: (1.9143, 2.1331) 
 Population Mean
   Parameter Estimate:  1.5612
   Estimated Variance:  0.0028261
              p-value:  <2e-16
    95% Conf Interval: (1.457, 1.6654) 
 Population Mean
   Parameter Estimate:  1.3713
   Estimated Variance:  0.00317
              p-value:  <2e-16
    95% Conf Interval: (1.2609, 1.4816) 
 Population Mean
   Parameter Estimate:  2.2979
   Estimated Variance:  0.0037039
              p-value:  <2e-16
    95% Conf Interval: (2.1786, 2.4172) 
 Population Mean
   Parameter Estimate:  2.3538
   Estimated Variance:  0.0041643
              p-value:  <2e-16
    95% Conf Interval: (2.2273, 2.4803) 
> 
> #-------------------------------
> # Estimate difference between
> # control and intervention villages in
> # IFA P. falciparm
> # titre by survey round
> #-------------------------------
> 
> set.seed(79287234)
> diff_psi <- sapply(c(1:5,7:8),function(x) tmleAb(Y=log10(d$ifatpftitre[d$serosvy==x]+1),
+                                                  X=d$tr01[d$serosvy==x],
+                                                  W=data.frame(Age=d$ageyrs[d$serosvy==x]),
+                                                  id=d$id[d$serosvy==x],
+                                                  SL.library=SL.library)[c("psi","se","lb","ub","p")])
 Additive Effect
   Parameter Estimate:  0.10482
   Estimated Variance:  0.0017798
              p-value:  0.012969
    95% Conf Interval: (0.022132, 0.18751) 
 Additive Effect
   Parameter Estimate:  0.078403
   Estimated Variance:  0.0016658
              p-value:  0.054735
    95% Conf Interval: (-0.0015928, 0.1584) 
 Additive Effect
   Parameter Estimate:  -0.54488
   Estimated Variance:  0.0027778
              p-value:  <2e-16
    95% Conf Interval: (-0.64818, -0.44158) 
 Additive Effect
   Parameter Estimate:  -0.71222
   Estimated Variance:  0.0034793
              p-value:  <2e-16
    95% Conf Interval: (-0.82783, -0.59661) 
 Additive Effect
   Parameter Estimate:  -1.5464
   Estimated Variance:  0.0035532
              p-value:  <2e-16
    95% Conf Interval: (-1.6632, -1.4295) 
 Additive Effect
   Parameter Estimate:  -0.76092
   Estimated Variance:  0.0041308
              p-value:  <2e-16
    95% Conf Interval: (-0.88689, -0.63494) 
 Additive Effect
   Parameter Estimate:  -0.46589
   Estimated Variance:  0.005754
              p-value:  8.1592e-10
    95% Conf Interval: (-0.61456, -0.31721) 
> 
> # P-values for differences in means, with Bonferroni correction for 7 tests
> sprintf("%1.4f",unlist(diff_psi[5,])*7)
[1] "0.0908" "0.3831" "0.0000" "0.0000" "0.0000" "0.0000" "0.0000"
> 
> #-------------------------------
> # save down the results
> #-------------------------------
> save.image("~/dropbox/articles/antibody-curves/results/raw/garki-main-analysis.RData")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 90.065   3.533 102.116 
