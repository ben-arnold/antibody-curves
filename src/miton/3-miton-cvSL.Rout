
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 3-miton-cvSL.R
> #
> # Compute the cross-validated
> # risk for the super leaner
> # and its constituent algorithms
> #
> # in the Miton Haiti survey
> # (low transmission P. falciparum MSP-1)
> #-------------------------------
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.1)

Check github.com/ben-arnold/tmleAb for the most current version
(we have plans for some useful additions)


> 
> 
> # load general plotting functions
> library(ggplot2)
> library(r2weight)
> library(RColorBrewer)
> source("~/slabcurves/src/ab_plot_cvSL.R")
> source("~/slabcurves/src/ab_plot_cvR2.R")
> 
> #-------------------------------
> # load data
> #-------------------------------
> # d <- read.csv("~/dropbox/articles/antibody-curves/data/miton/haiti2-malaria-miton-public.csv")
> d <- miton_malaria
> 
> # for 6 negative MSP_1 values, replace as 0
> d$msp1 <- d$msp13d7
> d$msp1[d$msp1<0] <- 0
> 
> 
> #-------------------------------
> # fit cross-validated SL
> # with age as the only feature
> #-------------------------------
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess","SL.randomForest","SL.polymars")
> 
> set.seed(32423)
> CVmiton <- cvSLAb(Y=log10(d$msp1+1),X=data.frame(Age=d$age),family=gaussian(),V=10,SL.library=SL.library)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: polspline
> 
> summary(CVmiton)

Call:  
SuperLearner::CV.SuperLearner(Y = fitd$Y, X = fitX, V = V, family = family,  
    SL.library = SL.library, id = fitd$id, control = list(saveFitLibrary = TRUE)) 


Risk is based on: Mean Squared Error

All risk estimates are based on V =  10 

                Algorithm    Ave       se     Min    Max
            Super Learner 1.1850 0.070184 0.90689 1.4754
              Discrete SL 1.1760 0.070054 0.90501 1.4854
              SL.mean_All 1.5382 0.072462 1.13992 1.9440
               SL.glm_All 1.3156 0.070874 0.96462 1.6263
          SL.Yman2016_All 1.3475 0.095136 0.95390 2.0662
           SL.gam.df5_All 1.1788 0.069967 0.90501 1.4854
             SL.loess_All 1.1792 0.070124 0.89766 1.5053
 SL.randomForest.ns40_All 1.2038 0.074587 0.91699 1.5479
          SL.polymars_All 1.2092 0.071761 0.89884 1.4607
> 
> 
> #-------------------------------
> # plot the CV MSE estimates
> #-------------------------------
> cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
> cols <- cbPalette[c(1:4,6:8)]
> cols <- c(cols,brewer.pal(8,"Dark2")[3])
> 
> # pdf("~/dropbox/articles/antibody-curves/results/figs/miton-cvSL.pdf")
> # ab_plot_cvSL(CVmiton,col=cols,ylab="10-fold Cross-validated MSE Estimate",title="P. falciparum, low transmission (age only)")
> # dev.off()
> 
> #-------------------------------
> # convert CV MSE into R2
> # using the r2weight package
> # and plot the R2 estimates
> #-------------------------------
> pdf("~/dropbox/articles/antibody-curves/results/figs/miton-cvR2.pdf")
> ab_plot_cvR2(CVmiton,data.frame(Age=d$age),col=cols,ylab="10-fold Cross-validated R-squared",title="P. falciparum, (Miton, Haiti)",ylim=c(0,0.6))
  cvr2$Algorithm     r2  lower  upper
1  Super Learner 0.2296 0.1600 0.2935
2    Simple Mean 0.0000 0.0000 0.0000
3            GLM 0.1447 0.0941 0.1926
4       Yman2016 0.1240 0.0024 0.2308
5            GAM 0.2336 0.1631 0.2983
6          LOESS 0.2334 0.1593 0.3010
7  Random Forest 0.2174 0.1526 0.2772
8           MARS 0.2139 0.1602 0.2642
> dev.off()
null device 
          1 
> 
> 
> 
> proc.time()
   user  system elapsed 
 34.918   0.392  41.220 
