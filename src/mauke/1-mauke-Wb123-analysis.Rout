
R version 3.2.4 (2016-03-10) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> #-------------------------------------------
> # 1-mauke-Wb123-analysis.R
> # Ben Arnold
> #
> # SuperLearner fits of age-specific antibody
> # response on Mauke island before and after
> # MDA, and TMLE estimates of geometric mean
> # (area under the curve) of antibody responses
> #
> #-------------------------------------------
> 
> #-------------------------------------------
> # input files:
> #   mauke1975-public.csv
> #   mauke1992-public.csv
> #
> # output files:
> #   mauke-Wb123-analysis.RData
> #-------------------------------------------
> 
> 
> 
> #-------------------------------------------
> # preamble
> #-------------------------------------------
> 
> rm(list=ls())
> library(tmle)
Loading required package: SuperLearner
Loading required package: nnls
Super Learner
Version: 2.0-15
Package created on 2014-07-16

Use SuperLearnerNews() to see changes from previous versions and latest news

Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(SuperLearner)
> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody (Ab) measurements.
> 
> 
> #-------------------------------------------
> # load the Mauke data from 1974(1975) and 1992
> #-------------------------------------------
> 
> d75 <- read.csv("~/dropbox/articles/antibody-curves/data/mauke/mauke1975-public.csv")
> d92 <- read.csv("~/dropbox/articles/antibody-curves/data/mauke/mauke1992-public.csv")
> 
> a75 <- d75
> a92 <- d92
> 
> # add 0.5 years to age to remove bias (on average) due to rounding to year
> a75$ager <- a75$age+0.5
> a92$ager <- a92$age+0.5
> 
> # create age categories for stratified analyses
> # 5 year age categories (1-20 y)
> a75$agecat <- cut(a75$ager,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))
> a92$agecat <- cut(a92$ager,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))
> 
> # 2 year age categories (1-10 y)
> a75$agecat2 <- cut(a75$ager,breaks=c(0,2,4,6,8,10),labels=c("1-2","3-4","5-6","7-8","9-10"))
> a92$agecat2 <- cut(a92$ager,breaks=c(0,2,4,6,8,10),labels=c("1-2","3-4","5-6","7-8","9-10"))
> 
> # create a standard ID variable before appending
> a75$id <- as.integer(a75$id75)
> a92$id <- ifelse(is.na(a92$id75),a92$id92,a92$id75)
> 
> # identify the pre- vs. post-MDA measurements
> a75$mda <- 0
> a92$mda <- 1
> 
> # append data with common variables
> common.vars <- c("id","ager","agecat","agecat2","wb123","mda")
> a7592 <- rbind(subset(a75,select=common.vars),subset(a92,select=common.vars))
> 
> 
> #--------------------------------------
> # All Ages
> #--------------------------------------
> # SL library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> 
> set.seed(0237234)
> 
> # SuperLearner fits of antibody levels
> mauke75 <- ab_agecurve(Y=log10(a75$wb123),Age=a75$ager,id=a75$id,SL.library=SL.library)
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12


Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk      Coef
SL.mean_All     0.7249176 0.0000000
SL.glm_All      0.6629960 0.0332514
SL.Yman2016_All 0.7455860 0.0000000
SL.gam.df3_All  0.6209314 0.3808696
SL.loess_All    0.6210124 0.5858790
> mauke92 <- ab_agecurve(Y=log10(a92$wb123),Age=a92$ager,id=a92$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     1.0732749 0.01858059
SL.glm_All      0.9411312 0.05558417
SL.Yman2016_All 0.9062421 0.24799798
SL.gam.df6_All  0.8967197 0.67783726
SL.loess_All    0.9014882 0.00000000
> 
> # estimate group means
> EYx.mauke75 <- ab_tmle(Y=log10(a75$wb123),Age=a75$ager,id=a75$id,SL.library=SL.library)
 Population Mean
   Parameter Estimate:  4.925
   Estimated Variance:  0.0019574
              p-value:  <2e-16
    95% Conf Interval: (4.8383, 5.0118) 
> EYx.mauke92 <- ab_tmle(Y=log10(a92$wb123),Age=a92$ager,id=a92$id,SL.library=SL.library)
 Population Mean
   Parameter Estimate:  4.2452
   Estimated Variance:  0.0021474
              p-value:  <2e-16
    95% Conf Interval: (4.1544, 4.336) 
> 
> # estimate difference in means
> diff.mauke  <- ab_tmle(Y=log10(a7592$wb123),Age=a7592$ager,id=a7592$id,X=a7592$mda,SL.library=SL.library,diff=TRUE)
 Additive Effect
   Parameter Estimate:  -0.70356
   Estimated Variance:  0.00099147
              p-value:  <2e-16
    95% Conf Interval: (-0.76528, -0.64185) 
> 
> 
> #--------------------------------------
> # Estimate means and differences between
> # time points in
> # 5 year age bands from ages 1-20
> #--------------------------------------
> agegrps <-c("1-5","6-10","11-15","16-20") 
> EYx.mauke75kids <- sapply(agegrps, function(x) 
+ 	ab_tmle(Y=log10(a75$wb123[a75$agecat==x]),Age=a75$ager[a75$agecat==x],id=a75$id[a75$agecat==x],SL.library=SL.library) 
+ 	)
 Population Mean
   Parameter Estimate:  4.452
   Estimated Variance:  0.024302
              p-value:  <2e-16
    95% Conf Interval: (4.1465, 4.7576) 
 Population Mean
   Parameter Estimate:  4.4649
   Estimated Variance:  0.032006
              p-value:  <2e-16
    95% Conf Interval: (4.1143, 4.8155) 
 Population Mean
   Parameter Estimate:  4.7149
   Estimated Variance:  0.019007
              p-value:  <2e-16
    95% Conf Interval: (4.4447, 4.9851) 
 Population Mean
   Parameter Estimate:  5.0789
   Estimated Variance:  0.01053
              p-value:  <2e-16
    95% Conf Interval: (4.8778, 5.28) 
> EYx.mauke92kids <- sapply(agegrps, function(x) 
+ 	ab_tmle(Y=log10(a92$wb123[a92$agecat==x]),Age=a92$ager[a92$agecat==x],id=a92$id[a92$agecat==x],SL.library=SL.library) 
+ 	)
 Population Mean
   Parameter Estimate:  3.2697
   Estimated Variance:  0.023292
              p-value:  <2e-16
    95% Conf Interval: (2.9706, 3.5689) 
 Population Mean
   Parameter Estimate:  3.7673
   Estimated Variance:  0.017201
              p-value:  <2e-16
    95% Conf Interval: (3.5102, 4.0244) 
 Population Mean
   Parameter Estimate:  3.9324
   Estimated Variance:  0.014278
              p-value:  <2e-16
    95% Conf Interval: (3.6982, 4.1666) 
 Population Mean
   Parameter Estimate:  4.1139
   Estimated Variance:  0.0098785
              p-value:  <2e-16
    95% Conf Interval: (3.9191, 4.3087) 
> diff.maukekids <- sapply(agegrps, function(x) 
+ 	ab_tmle(Y=log10(a7592$wb123[a7592$agecat==x]), Age=a7592$ager[a7592$agecat==x], id=a7592$id[a7592$agecat==x], X=a7592$mda[a7592$agecat==x],SL.library=SL.library, diff=TRUE) 
+ 	)
 Additive Effect
   Parameter Estimate:  -1.9852
   Estimated Variance:  0.012768
              p-value:  <2e-16
    95% Conf Interval: (-2.2066, -1.7637) 
 Additive Effect
   Parameter Estimate:  -2.0787
   Estimated Variance:  0.011862
              p-value:  <2e-16
    95% Conf Interval: (-2.2922, -1.8652) 
 Additive Effect
   Parameter Estimate:  -2.0664
   Estimated Variance:  0.0094274
              p-value:  <2e-16
    95% Conf Interval: (-2.2567, -1.8761) 
 Additive Effect
   Parameter Estimate:  -1.036
   Estimated Variance:  0.0064979
              p-value:  <2e-16
    95% Conf Interval: (-1.194, -0.87797) 
> 
> 
> #--------------------------------------
> # store results for later summary
> # and plotting
> #--------------------------------------
> save.image("~/dropbox/articles/antibody-curves/results/raw/mauke-Wb123-analysis.RData")
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 14.485   0.206  14.865 
