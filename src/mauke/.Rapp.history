#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.5)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext(,side=3,line=0)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34534) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.6),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.5)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(43827) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.6),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.5)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.6),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.5)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
?pch
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.5)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(3,4)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(3,7)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(6,7)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(6,7)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	# segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(6,7)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5))#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (26 mar 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis.pdf",width=14,height=6)#
cols1 <- brewer.pal(8,"Set1")[c(3)]#
cols2 <- brewer.pal(11,"Spectral")[c(11)]#
cols <- c(cols2,cols1)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(6,7)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),") across all ages")),line=1,cex=1.5)#
	# Group labels#
	mtext("Pre-MDA",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("Post-MDA",side=4,line=0.5,adj=0,at=4.7,col=cols[2],cex=1.25,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5),cex=1.5)#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by age")),line=1,cex=1.5)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=1)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
	# add pvalues#
	# mtext(paste("p =",sprintf("%1.3f",w.p)),side=1,line=-0.5,col="gray20",at=c(1.5,3.5,5.5,7.5,9.5),cex=0.8)#
#
par(op)#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurve/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=0.5,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=0.5,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	cols1 <- brewer.pal(8,"Set1")[c(3)]#
	cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	cols <- c(cols1,cols2)#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurve/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=0.5,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=0.5,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	cols1 <- brewer.pal(8,"Set1")[c(3)]#
	cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	cols <- c(cols1,cols2)#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=0.5,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=0.5,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=0.75,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=0.75,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=16,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=16,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(6,7)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=16,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	segments(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1])#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	segments(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2])#
	points(0.5,EY1$psi, pch=16,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	arrows(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1],length=0.05,angle=90,code=3)#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	arrows(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2],length=0.05,angle=90,code=3)#
	points(0.5,EY1$psi, pch=16,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	arrows(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=2,col=cols[1],length=0.05,angle=90,code=3)#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=2,bg="white",col=cols[1])#
	arrows(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=2,col=cols[2],length=0.05,angle=90,code=3)#
	points(0.5,EY1$psi, pch=16,cex=1.75, lwd=2,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
#--------------------------------------#
# 2-haiti2-USA-enterics-figure.R#
##
# ben arnold (benarnold@berkeley.edu)#
##
# plot SL and TMLE estimates#
##
# version 1 (11 oct 2015)#
#--------------------------------------#
#
#--------------------------------------#
# preamble#
#--------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#--------------------------------------#
# load the enterics analysis output#
#--------------------------------------#
load("~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis.RData")#
#-------------------------------#
# Plot schema that will be#
# repeated for each antibody in#
# the composite figure#
#-------------------------------#
SLAb.plotEYax <- function(SLfit0,SLfit1,main,letter,xlabel=FALSE,ylabel=FALSE) {#
	# plot the age-adjusted antibody curve #
	# SLfit0 : SL fit object for group 0 (USA) returned from SLAb.curve()#
	# SLfit1 : SL fit object for group 1 (Haiti) returned from SLAb.curve()#
	# main : plot title#
	# letter: letter for multi-panel plots (e.g., "A")#
	# xlabel: logical. print a label for the X-axis?#
	# ylabel: logical. print a label for the Y-axis#
	# plotting parameters and empty plot#
	op <- par(mar=c(5,6,4,0)+0.1)#
	xtics <- seq(0,6,by=1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(SLfit0$Age, SLfit0$Y,type="n",#
		ylab="",yaxt="n",#
		ylim=c(0,5),#
		xlab="",xlim=range(xtics),xaxt="n",#
		bty="n",las=1#
		)#
	# header#
	mtext(letter,side=3,line=1,font=2,at=-0.7,cex=1.75)#
	mtext(main,cex=1.25,line=1.5)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),side=3,line=0)#
	# axes#
	if (xlabel==TRUE) mtext("Age, years",side=1,line=3,cex=1.5)#
	if (ylabel==TRUE) mtext("Luminex Response (MFI-Background)",side=2,line=3.25,cex=1.25)#
	axis(1,at=xtics,cex.axis=1.5)#
	axis(2,at=0:5,labels=c(#
		# expression(10^-1),#
		expression(10^0),#
		expression(10^1),#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5)#
		), las=1,cex.axis=1.5#
	)#
	# plot data (points and fitted lines)#
	points(SLfit0$Age, SLfit0$Y,col=alpha(cols[1],alpha=0.6), pch=16,cex=0.7)#
	points(SLfit1$Age, SLfit1$Y,col=alpha(cols[2],alpha=0.6), pch=16,cex=0.7)#
	lines(SLfit0$Age,SLfit0$pY,col=cols[1],lwd=2)#
	lines(SLfit1$Age,SLfit1$pY,col=cols[2],lwd=2)#
	# country labels#
	mtext("USA",side=4,line=1,adj=1,at=SLfit0$pY[length(SLfit0$pY)], col=cols[1],cex=1.25,las=1)#
	mtext("Haiti",side=4,line=1,adj=1,at=SLfit1$pY[length(SLfit1$pY)], col=cols[2],cex=1.25,las=2)#
	par(op)#
}#
#
# skinny E(Yx) plot to add next to the age-specific antibody curves#
SLAb.plotEYx <- function(EY0,EY1,Ediff) {#
	# plot the adjusted means#
	# EY0    : Adjusted mean Y for group 0 (USA), returned from SLAb.tmle()#
	# EY1    : Adjusted mean Y for group 1 (Haiti), returned from SLAb.tmle()#
	# Ediff  : Adjusted mean difference for Haiti-USA, returned from SLAb.tmle()#
	# plot parameters and empty plot#
	op <- par(mar=c(5,0,4,0)+0.1)#
	# cols1 <- brewer.pal(8,"Set1")[c(3)]#
	# cols2 <- brewer.pal(11,"Spectral")[c(11)]#
	# cols <- c(cols1,cols2)#
	cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
	cols <- cbPalette[c(7,6)]#
	plot(1,1,type="n",#
		xlim=c(0,1),xaxt="n",xlab="",#
		ylim=c(0,5),ylab="",yaxt="n",#
		las=1,bty="n"#
	)#
	# Y-axis#
	# axis(4,at=0:5,labels=c(#
		# # expression(10^-1),#
		# expression(10^0),#
		# expression(10^1),#
		# expression(10^2),#
		# expression(10^3),#
		# expression(10^4),#
		# expression(10^5)#
		# ), las=1,cex.axis=1.5#
	# )#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# plot data#
	arrows(x0=0.5,y0=EY0$lb, y1=EY0$ub,lwd=1,col=cols[1],length=0.05,angle=90,code=3)#
	points(0.5,EY0$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	arrows(x0=0.5,y0=EY1$lb, y1=EY1$ub,lwd=1,col=cols[2],length=0.05,angle=90,code=3)#
	points(0.5,EY1$psi, pch=16,cex=1.75, lwd=1,bg="white",col=cols[2])#
	# if(Ediff$p<0.01) text(0.5,0.1,"*",cex=2)#
}#
pdf("~/SLAbcurves/results/figs/haiti2-USA-enterics-SL-curves.pdf",height=20,width=10)#
lo <- layout(mat=matrix(1:16,nrow=4,ncol=4,byrow=TRUE),widths=c(1,0.2,1,0.2))#
# lo <- layout(mat=matrix(1:2,nrow=1,ncol=2),widths=c(1,0.2))#
#
SLAb.plotEYax(usa.cp17,haiti.cp17,expression(paste(italic('Cryptosporidium parvum'), " Cp17")),"A",ylabel=T)#
SLAb.plotEYx(EYx.usa.cp17,EYx.haiti.cp17,diff.cp17) #
#
SLAb.plotEYax(usa.cp23,haiti.cp23,expression(paste(italic('Cryptosporidium parvum'), " Cp23")),"B")#
SLAb.plotEYx(EYx.usa.cp23,EYx.haiti.cp23,diff.cp23) #
#
SLAb.plotEYax(usa.giar,haiti.giar,expression(paste(italic('Giardia intestinalis'), " VSP-5")),"C",ylabel=T)#
SLAb.plotEYx(EYx.usa.giar,EYx.haiti.giar,diff.giar) #
#
SLAb.plotEYax(usa.leca,haiti.leca,expression(paste(italic('Entamoeba histolytica'), " LecA")),"D")#
SLAb.plotEYx(EYx.usa.leca,EYx.haiti.leca,diff.leca) #
#
SLAb.plotEYax(usa.etec,haiti.etec,expression(paste("ETEC heat labile toxin ",beta," subunit")),"E",ylabel=T)#
SLAb.plotEYx(EYx.usa.etec,EYx.haiti.etec,diff.etec) #
#
SLAb.plotEYax(usa.salb,haiti.salb,expression(paste(italic('Salmonella sp.'), " LPS Group D")),"F")#
SLAb.plotEYx(EYx.usa.salb,EYx.haiti.salb,diff.salb) #
#
SLAb.plotEYax(usa.norogi,haiti.norogi,"Norovirus Group I","G",ylabel=T,xlabel=T)#
SLAb.plotEYx(EYx.usa.norogi,EYx.haiti.norogi,diff.norogi) #
#
SLAb.plotEYax(usa.norogii,haiti.norogii,"Norovirus Group II","H",xlabel=T)#
SLAb.plotEYx(EYx.usa.norogii,EYx.haiti.norogii,diff.norogii) #
#
dev.off()
rm(list=ls())#
library(foreign)#
library(tmle)#
library(SuperLearner)#
#
# source the base functions for#
# SL fits of age-antibody curves#
# and TMLE estimates of mean differences#
source("~/SLAbcurves/src/SLAb-curve.R")#
source("~/SLAbcurves/src/SLAb-tmle.R")#
create.SL.randomForest <- function(tune = list(mtry = c(1, 5, 10), nodesize = c(1, 5, 10))) {#
	tuneGrid <- expand.grid(tune, stringsAsFactors = FALSE)#
		for(mm in seq(nrow(tuneGrid))) { #
    			eval(parse(file = "", text = paste("SL.randomForest.", mm, "<- function(..., mtry = ", tuneGrid[mm, 1], ", nodesize = ", tuneGrid[mm, 2], ") SL.randomForest(..., mtry = mtry, nodesize = nodesize)", sep = "")), envir = .GlobalEnv)#
  		}#
  	invisible(TRUE)#
}#
create.SL.randomForest()
#-------------------------------------------#
# preamble#
#-------------------------------------------#
#
rm(list=ls())#
library(foreign)#
library(tmle)#
library(SuperLearner)#
#
# source the base functions for#
# SL fits of age-antibody curves#
# and TMLE estimates of mean differences#
source("~/SLAbcurves/src/SLAb-curve.R")#
source("~/SLAbcurves/src/SLAb-tmle.R")#
create.SL.randomForest <- function(tune = list(mtry = c(1, 5, 10), nodesize = c(1, 5, 10))) {#
	tuneGrid <- expand.grid(tune, stringsAsFactors = FALSE)#
		for(mm in seq(nrow(tuneGrid))) { #
    			eval(parse(file = "", text = paste("SL.randomForest.", mm, "<- function(..., mtry = ", tuneGrid[mm, 1], ", nodesize = ", tuneGrid[mm, 2], ") SL.randomForest(..., mtry = mtry, nodesize = nodesize)", sep = "")), envir = .GlobalEnv)#
  		}#
  	invisible(TRUE)#
}#
create.SL.randomForest()#
#-------------------------------------------#
# load the Mauke data from 1974(1975) and 1992#
#-------------------------------------------#
#
d75 <- read.dta("~/dropbox/mauke/data/final/mauke1974.dta")#
d92 <- read.dta("~/dropbox/mauke/data/final/mauke1992.dta")#
#
# drop 7 children aged 0 (all Wb123+) in 1975 due to maternal antibodies#
a75 <- subset(d75,age>0)#
a92 <- d92#
#
# add 0.5 years to age to remove bias (on average) due to rounding to year#
a75$ager <- a75$age+0.5#
a92$ager <- a92$age+0.5#
#
# create age categories for stratified analyses#
# 5 year age categories (1-20 y)#
a75$agecat <- cut(a75$age,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))#
a92$agecat <- cut(a92$age,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))#
#
# 2 year age categories (1-10 y)#
a75$agecat2 <- cut(a75$age,breaks=c(0,2,4,6,8,10),labels=c("1-2","3-4","5-6","7-8","9-10"))#
a92$agecat2 <- cut(a92$age,breaks=c(0,2,4,6,8,10),labels=c("1-2","3-4","5-6","7-8","9-10"))#
#
# create a standard ID variable before appending#
a75$id <- as.integer(a75$id74)#
a92$id <- ifelse(is.na(a92$id74),a92$id92,a92$id74)#
#
# identify the pre- vs. post-MDA measurements#
a75$mda <- 0#
a92$mda <- 1#
#
# append data with common variables#
common.vars <- c("id","ager","agecat","agecat2","wb123","mda")#
a7592 <- rbind(subset(a75,select=common.vars),subset(a92,select=common.vars))#
#
#--------------------------------------#
# All Ages#
#--------------------------------------#
set.seed(0237234)#
#
SL.lib <- c("SL.mean","SL.glm","SL.bayesglm","SL.loess", "SL.gam","SL.gam.3","SL.glmnet","SL.randomForest","SL.randomForest.1","SL.randomForest.2","SL.randomForest.3","SL.randomForest.4","SL.randomForest.5","SL.randomForest.6","SL.randomForest.7","SL.randomForest.8","SL.randomForest.9")#
# SuperLearner fits of antibody levels#
mauke75 <- SLAb.curve(Y=log10(a75$wb123),Age=a75$ager,id=a75$id,SLlib=SL.lib)#
mauke92 <- SLAb.curve(Y=log10(a92$wb123),Age=a92$ager,id=a92$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.mauke75 <- SLAb.tmle(Y=log10(a75$wb123),Age=a75$ager,id=a75$id)#
EYx.mauke92 <- SLAb.tmle(Y=log10(a92$wb123),Age=a92$ager,id=a92$id)#
#
# estimate difference in means#
diff.mauke  <- SLAb.tmle(Y=log10(a7592$wb123),Age=a7592$ager,id=a7592$id,X=a7592$mda,diff=TRUE)#
#--------------------------------------#
# Estimate means and differences between#
# time points in#
# 5 year age bands from ages 1-20#
#--------------------------------------#
# agegrps <-c("1-2","3-4","5-6","7-8","9-10") #
agegrps <-c("1-5","6-10","11-15","16-20") #
EYx.mauke75kids <- sapply(agegrps, function(x) #
	SLAb.tmle(Y=log10(a75$wb123[a75$agecat==x]),Age=a75$ager[a75$agecat==x],id=a75$id[a75$agecat==x],SLlib=SL.lib) #
	)#
EYx.mauke92kids <- sapply(agegrps, function(x) #
	SLAb.tmle(Y=log10(a92$wb123[a92$agecat==x]),Age=a92$ager[a92$agecat==x],id=a92$id[a92$agecat==x],SLlib=SL.lib) #
	)#
diff.maukekids <- sapply(agegrps, function(x) #
	SLAb.tmle(Y=log10(a7592$wb123[a7592$agecat==x]), Age=a7592$ager[a7592$agecat==x], id=a7592$id[a7592$agecat==x], X=a7592$mda[a7592$agecat==x], diff=TRUE,SLlib=SL.lib) #
	)
#--------------------------------------#
# Estimate means and differences between#
# time points in#
# 2 year age bands from ages 1-10#
#-------------------------------------- #
agegrps2 <-c("1-2","3-4","5-6","7-8","9-10")#
EYx.mauke75kids2y <- sapply(agegrps2, function(x) #
	SLAb.tmle(Y=log10(a75$wb123[a75$agecat2==x]),Age=a75$ager[a75$agecat2==x],id=a75$id[a75$agecat2==x]) #
	)#
EYx.mauke92kids2y <- sapply(agegrps2, function(x) #
	SLAb.tmle(Y=log10(a92$wb123[a92$agecat2==x]),Age=a92$ager[a92$agecat2==x],id=a92$id[a92$agecat2==x]) #
	)#
diff.maukekids2y <- sapply(agegrps2, function(x) #
	SLAb.tmle(Y=log10(a7592$wb123[a7592$agecat2==x]), Age=a7592$ager[a7592$agecat2==x], id=a7592$id[a7592$agecat2==x], X=a7592$mda[a7592$agecat2==x], diff=TRUE) #
	)#
#--------------------------------------#
# store results for later summary#
# and plotting#
#--------------------------------------#
save.image("~/SLAbcurves/results/raw/mauke-Wb123-analysis-RF.RData")
#-------------------------------------------#
# 2-mauke-Wb123-figure.R#
# Ben Arnold#
##
# Plot age-specific antibody curves from #
# Mauke and beeswarm plot of age-stratified#
# means#
##
# version 1 (19 oct 2015)#
# #
##
#-------------------------------------------#
#
#-------------------------------------------#
# input files:#
#   mauke-Wb123-analysis.RData#
##
# output files:#
#   mauke-Wb123-analysis.pdf#
#-------------------------------------------#
#-------------------------------------------#
# preamble#
#-------------------------------------------#
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
library(beeswarm)#
#
#-------------------------------------------#
# load the Mauke analysis results#
#-------------------------------------------#
#
load("~/SLAbcurves/results/raw/mauke-Wb123-analysis-RF.RData")#
#-------------------------------------------#
# plot#
#-------------------------------------------#
# cross-tab of groups for sample sizes#
table(a7592$agecat,a7592$mda)#
#
pdf("~/SLAbcurves/results/figs/mauke-Wb123-analysis-RF.pdf",width=14,height=6)#
#
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")#
cols <- cbPalette[c(7,6)]#
#
lo <- layout(mat=matrix(1:2,nrow=1,ncol=2,byrow=TRUE),widths=c(1,1))#
# Panel A age-specific antibody curves E(Y_x,a)#
op <- par(mar=c(5,5,3,4)+0.1)#
ytics <- 2:6#
plot(mauke75$Age,mauke75$pY,type="n",#
	xlab="",xaxt="n",xlim=c(0,70),#
	ylab="",yaxt="n",ylim=range(ytics),#
	main="",#
	las=1,bty="n"#
	)#
	axis(1,at=seq(0,70,by=10),cex.axis=1.5)#
	axis(2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# abline(log(10986),0,lty=2,col="gray60")#
	set.seed(623) # jitter ages (but not actual fits) to better display the data#
	points(jitter(mauke75$Age),mauke75$Y,cex=0.45,pch=16,col=alpha(cols[1],alpha=0.6))#
	points(jitter(mauke92$Age),mauke92$Y,cex=0.45,pch=16,col=alpha(cols[2],alpha=0.6))#
	lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)#
	lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)#
	# Axis labels#
	mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123 (Light Units)")),side=2,line=3,cex=1.25)#
	mtext("Age, years",side=1,line=3,cex=1.5)#
	mtext("A",line=1,at=-10,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x][","][a]),")")),line=1,cex=1.5)#
	# Group labels#
	mtext("1975",side=4,line=0.5,adj=0,at=5.1,col=cols[1],cex=1.25,las=1)#
	mtext("1992",side=4,line=0.5,adj=0,at=4.75,col=cols[2],cex=1.25,las=1)#
	mtext("(5y Post-MDA)",side=4,line=0.5,adj=0,at=4.5,col=cols[2],cex=1,las=1)#
par(op)#
#
# skinny plot of E(Y_x) for all ages (Not used)#
	# op <- par(mar=c(5,0,3,0)+0.1)#
	# plot(1,1,type="n",#
		# xlim=c(0,1),xaxt="n",xlab="",#
		# ylim=range(ytics),ylab="",yaxt="n",#
		# las=1,bty="n"#
	# )#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=1,line=1)#
	# mtext(expression(paste(italic(E),"(",italic(Y[x]),")")),side=3,line=0)#
	# # plot data#
	# segments(x0=0.5,y0=EYx.mauke75$lb, y1=EYx.mauke75$ub,lwd=1,col=cols[1])#
	# points(0.5,EYx.mauke75$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[1])#
	# segments(x0=0.5,y0=EYx.mauke92$lb, y1=EYx.mauke92$ub,lwd=1,col=cols[2])#
	# points(0.5,EYx.mauke92$psi, pch=21,cex=1.75, lwd=1,bg="white",col=cols[2])#
# par(op)#
# dev.off()#
#
# Panel B age category beeswarm plot and E(Y_x)#
op <- par(mar=c(5,5,3,0)+0.1)#
set.seed(34532) # set seed for exact reprodution of beeswarm display#
midpts <- beeswarm(log10(wb123)~mda+agecat,data=a7592,#
	log=FALSE,#
	labels=NA,#
	col=alpha(cols[1:2],alpha=0.5),#
	pch=16,#
	ylab="",yaxt="n",ylim=range(ytics),#
	xlab="",#
	bty="n"#
	)#
	axis(side=2,at=ytics,labels=c(#
		expression(10^2),#
		expression(10^3),#
		expression(10^4),#
		expression(10^5),#
		expression(10^6)#
		), las=1,cex.axis=1.5#
	)#
	# X labels and line segments#
	mtext(levels(a7592$agecat),side=1,line=1,at=c(1.5,3.5,5.5,7.5),cex=1.5)#
	segments(x0=c(2.5,4.5,6.5),y0=min(ytics),y1=max(ytics),col="gray60",lwd=1.5)#
	mtext("Age Category, Years",side=1,line=3,cex=1.5)#
	# Y label#
	mtext("B",line=1,at=-0.5,adj=0,font=2,cex=2)#
	mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by child age")),line=1,cex=1.5)#
	mtext(c("1975","1992"),at=c(1,2),col=cols[1:2],side=3,line=-0.5)#
#
	# add in geometric means#
	# segments(x0=c(1,3,5,7)-0.2,x1=c(1,3,5,7)+0.2,y0=unlist(EYx.mauke75kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(2,4,6,8)-0.2,x1=c(2,4,6,8)+0.2,y0=unlist(EYx.mauke92kids[1,]),col="gray40",lwd=4)#
	# segments(x0=c(1,3,5,7),y0=unlist(EYx.mauke75kids[3,]),y1=unlist(EYx.mauke75kids[4,]),col="gray40",lwd=2)#
	# points(c(1,3,5,7),unlist(EYx.mauke75kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	# segments(x0=c(2,4,6,8),y0=unlist(EYx.mauke92kids[3,]),y1=unlist(EYx.mauke92kids[4,]),col="gray40",lwd=2)#
	# points(c(2,4,6,8),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col="gray40",lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)#
	arrows(x0=c(1.5,3.5,5.5,7.5), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)#
	points(c(1.5,3.5,5.5,7.5),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)#
par(op)#
dev.off()
#-------------------------------#
# 1-haiti2-USA-enterics-SL-curves.R#
##
# fit enterics luminex reponse by#
# age and country#
##
# version 2 (9 oct 2015)#
# cleaned up code#
# separated out plotting script#
##
# version 2 (19 oct 2015)#
# updated pointer to base functions#
##
# version 1 (23 sep 2015)#
#-------------------------------#
#-------------------------------#
# input files:#
#   haiti2-long.dta#
#   milwaukee2011.csv#
##
# output files:#
#   haiti2-USA-enterics-SL-curves.pdf#
#-------------------------------#
#
#-------------------------------#
# preamble#
#-------------------------------#
#
rm(list=ls())#
library(foreign)#
library(SuperLearner)#
library(tmle)#
library(RColorBrewer)#
library(scales)#
#
# source the base functions for#
# SL fits of age-antibody curves#
# and TMLE estimates of mean differences#
source("~/SLAbcurves/src/SLAb-curve.R")#
source("~/SLAbcurves/src/SLAb-tmle.R")#
#
create.SL.randomForest <- function(tune = list(mtry = c(1, 5, 10), nodesize = c(1, 5, 10))) {#
	tuneGrid <- expand.grid(tune, stringsAsFactors = FALSE)#
		for(mm in seq(nrow(tuneGrid))) { #
    			eval(parse(file = "", text = paste("SL.randomForest.", mm, "<- function(..., mtry = ", tuneGrid[mm, 1], ", nodesize = ", tuneGrid[mm, 2], ") SL.randomForest(..., mtry = mtry, nodesize = nodesize)", sep = "")), envir = .GlobalEnv)#
  		}#
  	invisible(TRUE)#
}#
create.SL.randomForest()#
#
SL.lib <- c("SL.mean","SL.glm","SL.bayesglm","SL.loess", "SL.gam","SL.gam.3","SL.glmnet","SL.randomForest","SL.randomForest.1","SL.randomForest.2","SL.randomForest.3","SL.randomForest.4","SL.randomForest.5","SL.randomForest.6","SL.randomForest.7","SL.randomForest.8","SL.randomForest.9")#
#-------------------------------#
# load the datasets for analysis#
#-------------------------------#
#
d.usa <- read.csv("~/dropbox/haiti2/data/final/milwaukee2011.csv")#
d.haiti <- read.dta("~/dropbox/haiti2/data/final/haiti2-long.dta")#
#
# add sequential ids for USA#
d.usa$id2 <- 1:nrow(d.usa)#
#
#-------------------------------#
# recode ages by adding 1/2 year#
# in USA children >1 y to avoid#
# bias#
#-------------------------------#
d.usa$age[d.usa$age>=1] <- d.usa$age[d.usa$age>=1]+0.5#
#-------------------------------#
# Limit the haiti data to children#
# <= 5.5 years old, which is the#
# maximum age for the children#
# in the USA sample#
#-------------------------------#
d.hai  <- subset(d.haiti,agey<=5.5)#
#-------------------------------#
# append the Haiti and USA #
# data to calculate differences #
# in means#
#-------------------------------#
d.usa$id <- d.usa$id2#
d.usa$agey <- d.usa$age#
d.usa$salb <- d.usa$sallpsb#
d.usa$haiti <- 0#
d.hai$haiti <- 1#
common.vars <- c("haiti","id","agey","cp17","cp23","vsp5","leca","etec","salb","norogi","norogii")#
d.all <- rbind(subset(d.hai,select=common.vars),subset(d.usa,select=common.vars)	)#
#-------------------------------#
# crypto Cp17#
#-------------------------------#
set.seed(4634523)#
#
# fit age specific antibody curves#
haiti.cp17 <- SLAb.curve(Y=log10(d.hai$cp17+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.cp17   <- SLAb.curve(Y=log10(d.usa$cp17+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.cp17 <- SLAb.tmle(Y=log10(d.hai$cp17+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.cp17   <- SLAb.tmle(Y=log10(d.usa$cp17+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.cp17      <- SLAb.tmle(Y=log10(d.all$cp17+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# crypto Cp23#
#-------------------------------#
set.seed(6323424)#
#
# fit age specific antibody curves#
haiti.cp23 <- SLAb.curve(Y=log10(d.hai$cp23+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.cp23   <- SLAb.curve(Y=log10(d.usa$cp23+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.cp23 <- SLAb.tmle(Y=log10(d.hai$cp23+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.cp23   <- SLAb.tmle(Y=log10(d.usa$cp23+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.cp23      <- SLAb.tmle(Y=log10(d.all$cp23+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# Giardia VSP-5#
#-------------------------------#
set.seed(54635)#
#
# fit age specific antibody curves#
haiti.giar <- SLAb.curve(Y=log10(d.hai$vsp5+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.giar   <- SLAb.curve(Y=log10(d.usa$vsp5+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.giar <- SLAb.tmle(Y=log10(d.hai$vsp5+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.giar   <- SLAb.tmle(Y=log10(d.usa$vsp5+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.giar      <- SLAb.tmle(Y=log10(d.all$vsp5+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# E. hist LecA#
#-------------------------------#
set.seed(23523412)#
#
# fit age specific antibody curves#
haiti.leca <- SLAb.curve(Y=log10(d.hai$leca+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.leca   <- SLAb.curve(Y=log10(d.usa$leca+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.leca <- SLAb.tmle(Y=log10(d.hai$leca+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.leca   <- SLAb.tmle(Y=log10(d.usa$leca+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.leca      <- SLAb.tmle(Y=log10(d.all$leca+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# ETEC#
#-------------------------------#
set.seed(2967234)#
#
# fit age specific antibody curves#
haiti.etec <- SLAb.curve(Y=log10(d.hai$etec+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.etec   <- SLAb.curve(Y=log10(d.usa$etec+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.etec <- SLAb.tmle(Y=log10(d.hai$etec+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.etec   <- SLAb.tmle(Y=log10(d.usa$etec+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.etec      <- SLAb.tmle(Y=log10(d.all$etec+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# Salmonella LPS B#
#-------------------------------#
set.seed(987234)#
#
# fit age specific antibody curves#
haiti.salb <- SLAb.curve(Y=log10(d.hai$salb+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.salb   <- SLAb.curve(Y=log10(d.usa$salb+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.salb <- SLAb.tmle(Y=log10(d.hai$salb+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.salb   <- SLAb.tmle(Y=log10(d.usa$salb+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.salb      <- SLAb.tmle(Y=log10(d.all$salb+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#
#-------------------------------#
# noro Group I#
#-------------------------------#
set.seed(5234)#
# fit age specific antibody curves#
haiti.norogi <- SLAb.curve(Y=log10(d.hai$norogi+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.norogi   <- SLAb.curve(Y=log10(d.usa$norogi+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.norogi <- SLAb.tmle(Y=log10(d.hai$norogi+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.norogi   <- SLAb.tmle(Y=log10(d.usa$norogi+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.norogi      <- SLAb.tmle(Y=log10(d.all$norogi+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# noro Group II#
#-------------------------------#
set.seed(34534)#
# fit age specific antibody curves#
haiti.norogii <- SLAb.curve(Y=log10(d.hai$norogii+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
usa.norogii   <- SLAb.curve(Y=log10(d.usa$norogii+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate group means#
EYx.haiti.norogii <- SLAb.tmle(Y=log10(d.hai$norogii+1),Age=d.hai$agey,id=d.hai$id,SLlib=SL.lib)#
EYx.usa.norogii   <- SLAb.tmle(Y=log10(d.usa$norogii+1),Age=d.usa$agey,id=d.usa$id,SLlib=SL.lib)#
#
# estimate difference in means#
diff.norogii      <- SLAb.tmle(Y=log10(d.all$norogii+1),Age=d.all$agey,id=d.all$id,X=d.all$haiti,diff=TRUE,SLlib=SL.lib)#
#-------------------------------#
# save down results for later#
# plotting#
#-------------------------------#
save.image(file="~/SLAbcurves/results/raw/haiti2-usa-enterics-analysis-RF.RData")
rm(list=ls())#
library(RColorBrewer)#
library(scales)#
#
# source the base functions#
source("~/dropbox/13beaches/src/aim1/0-aim1-base-functions.R")#
source("~/dropbox/13beaches/src/aim2/0-aim2-base-functions.R")#
#
# --------------------------------------#
# PAF and PAR functions (NOT USED)#
# calculate the PAF given an RR and#
# a proportion exposed#
# --------------------------------------#
#
PAFcalc <- function(Pe,RR) {#
	# calculate the population attributable fraction#
	# under a counterfactual where the exposure is removed#
	# see section 4.7 of Jewell 2004 Statistics for Epidemiology#
	# RR : relative risk associated with exposure#
	# Pe : proportion of the population exposed#
	PAF <- Pe*(RR-1) / (1 + Pe*(RR-1))#
	return(PAF)#
#
}#
#
PARcalc <- function(Pe,p0,p1) {#
	# calculate the population attributable risk#
	# under a counterfactual where the exposure is removed#
	# see section 4.7 of Jewell 2004 Statistics for Epidemiology#
	# p0 : risk in the unexposed#
	# p1 : risk in the exposed#
	# Pe : proportion of the population exposed#
	PAR <- p1*Pe + p0*(1-Pe) - p0#
	return(PAR)#
}#
#
PARcalc2 <- function(Pe,p0,RR) {#
	# calculate the population attributable risk#
	# for an exposure variable with three levels (0, 1, 2)#
	# under a counterfactual where exposure level 2 is re-assigned #
	# to level 0 (leaving level 1 the same)#
	# This is akin to assigning swimmers with Entero >35 CFU to#
	# be non-swimmers#
	# see section 4.7 of Jewell 2004 Statistics for Epidemiology#
	# for the basic sketch of how to solve for this, though this#
	# is a slightly more complicated case#
	# note that PAR = P(obs) - P(counterfactual)#
	# where P(obs) = Pe_0*p0 + Pe_1*p1 + Pe_2*p2#
	# and P(count) = (Pe_0 + Pe_2)*p0 + Pe_1*p1#
	# Thus, PAR = Pe_2(p2-p0) = Pe_2*p0(RR-1)#
	# #
	# Pe   : proportion of the population exposed to level 2#
	# p0   : risk in the unexposed#
	# RR   : CIR for exposure level 2 versus unexposed (level 0)#
	PAR <- Pe*p0*(RR-1)#
	return(PAR)#
}#
#
# --------------------------------------#
# ALL SWIM EXPOSURE, PAR FIGURE#
# --------------------------------------#
#
# --------------------------------------#
# load the swim exposure regression output#
# and PAR output (to get total Ns)#
# --------------------------------------#
load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARswimex-diar.Rdata")#
load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARswimex-gi.Rdata")#
load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARswimex-dailygi.Rdata")#
# --------------------------------------#
# Grab the empirical exposure levels to#
# get actual PARs to plot points#
# --------------------------------------#
#
# empirical levels of exposure in the population#
pe <- N.body[,2]/N.total[,2]#
pe#
#
# --------------------------------------#
# Grab PAR estimates and 95% CIs#
# --------------------------------------#
#
# Diarrhea PAR estimates and bootstrap 95% confidence intervals#
pars.diar <- c(PARswimex.diar.0to4$bootest[1], PARswimex.diar.5to10$bootest[1], PARswimex.diar.11plus$bootest[1])*1000#
pars.diar.lb <- c(PARswimex.diar.0to4$boot95lb[1], PARswimex.diar.5to10$boot95lb[1], PARswimex.diar.11plus$boot95lb[1])*1000#
pars.diar.ub <- c(PARswimex.diar.0to4$boot95ub[1], PARswimex.diar.5to10$boot95ub[1], PARswimex.diar.11plus$boot95ub[1])*1000#
#
# Gi illness PAR estimates and bootstrap 95% confidence intervals#
pars.gi <- c(PARswimex.gi.0to4$bootest[1], PARswimex.gi.5to10$bootest[1], PARswimex.gi.11plus$bootest[1])*1000#
pars.gi.lb <- c(PARswimex.gi.0to4$boot95lb[1], PARswimex.gi.5to10$boot95lb[1], PARswimex.gi.11plus$boot95lb[1])*1000#
pars.gi.ub <- c(PARswimex.gi.0to4$boot95ub[1], PARswimex.gi.5to10$boot95ub[1], PARswimex.gi.11plus$boot95ub[1])*1000#
#
# Days missed of daily activities PAR estimates and bootstrap 95% confidence intervals#
pars.dailygi <- c(PARswimex.dailygi.0to4$bootest[1], PARswimex.dailygi.5to10$bootest[1], PARswimex.dailygi.11plus$bootest[1])*1000#
pars.dailygi.lb <- c(PARswimex.dailygi.0to4$boot95lb[1], PARswimex.dailygi.5to10$boot95lb[1], PARswimex.dailygi.11plus$boot95lb[1])*1000#
pars.dailygi.ub <- c(PARswimex.dailygi.0to4$boot95ub[1], PARswimex.dailygi.5to10$boot95ub[1], PARswimex.dailygi.11plus$boot95ub[1])*1000
# --------------------------------------#
# Extrapolations from the estimates#
# assuming a constant CIR irrespective#
# of Prob(exposure)#
# --------------------------------------#
diar.par100    <- pars.diar/pe[2:4]#
gi.par100      <- pars.gi/pe[2:4]#
dailygi.par100 <- pars.dailygi/pe[2:4]
diar.par100
gi.par100
pars.diar
pe
# --------------------------------------#
# SWIM EXPOSURE >35 CFU, PAR FIGURE#
# --------------------------------------#
#
# --------------------------------------#
# load the swim exposure regression output#
# and PAR output (to get total Ns)#
# --------------------------------------#
load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARentero1600noswim-diar.Rdata")#
load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARentero1600noswim-gi.Rdata")#
load("~/dropbox/13beaches/aim2-results/rawoutput/aim2-PARentero1600noswim-dailygi.Rdata")#
#
# --------------------------------------#
# Grab the empirical exposure levels to#
# get actual PARs to plot points#
# --------------------------------------#
#
# empirical levels of exposure in the population#
pe.noswim <- c(N.age0to4[3,2]/sum(N.age0to4[,2]),N.age5to10[3,2]/sum(N.age5to10[,2]),N.age11plus[3,2]/sum(N.age11plus[,2]))#
pe.noswim#
# --------------------------------------#
# Grab PAR estimates and 95% CIs#
# --------------------------------------#
#
# Diarrhea PAR estimates and bootstrap 95% confidence intervals#
pars.noswim.diar <- c(AR35noswim.diar.0to4$bootest[1], AR35noswim.diar.5to10$bootest[1], AR35noswim.diar.11plus$bootest[1])*1000#
pars.noswim.diar.lb <- c(AR35noswim.diar.0to4$boot95lb[1], AR35noswim.diar.5to10$boot95lb[1], AR35noswim.diar.11plus$boot95lb[1])*1000#
pars.noswim.diar.ub <- c(AR35noswim.diar.0to4$boot95ub[1], AR35noswim.diar.5to10$boot95ub[1], AR35noswim.diar.11plus$boot95ub[1])*1000#
#
# Gi illness PAR estimates and bootstrap 95% confidence intervals#
pars.noswim.gi <- c(AR35noswim.gi.0to4$bootest[1], AR35noswim.gi.5to10$bootest[1], AR35noswim.gi.11plus$bootest[1])*1000#
pars.noswim.gi.lb <- c(AR35noswim.gi.0to4$boot95lb[1], AR35noswim.gi.5to10$boot95lb[1], AR35noswim.gi.11plus$boot95lb[1])*1000#
pars.noswim.gi.ub <- c(AR35noswim.gi.0to4$boot95ub[1], AR35noswim.gi.5to10$boot95ub[1], AR35noswim.gi.11plus$boot95ub[1])*1000#
#
# Days missed of daily activities PAR estimates and bootstrap 95% confidence intervals#
pars.noswim.dailygi <- c(AR35noswim.dailygi.0to4$bootest[1], AR35noswim.dailygi.5to10$bootest[1], AR35noswim.dailygi.11plus$bootest[1])*1000#
pars.noswim.dailygi.lb <- c(AR35noswim.dailygi.0to4$boot95lb[1], AR35noswim.dailygi.5to10$boot95lb[1], AR35noswim.dailygi.11plus$boot95lb[1])*1000#
pars.noswim.dailygi.ub <- c(AR35noswim.dailygi.0to4$boot95ub[1], AR35noswim.dailygi.5to10$boot95ub[1], AR35noswim.dailygi.11plus$boot95ub[1])*1000#
#
# --------------------------------------#
# Extrapolations from the estimates#
# assuming a constant CIR irrespective#
# of Prob(exposure)#
# --------------------------------------#
diar.noswim.par100    <- pars.noswim.diar/pe.noswim#
gi.noswim.par100      <- pars.noswim.gi/pe.noswim #
dailygi.noswim.par100 <- pars.noswim.dailygi/pe.noswim
diar.noswim.par100
pars.noswim.diar
pe.noswim
diar.noswim.par100
diar.noswim.par100/2
gi.noswim.par100/2
gi.noswim.par100
98-43
53-18
