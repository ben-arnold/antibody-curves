
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> #-------------------------------------------
> # 5-mauke-Wb123-long.R
> # Ben Arnold
> #
> # TMLE means of WB123 antibody in Mauke
> # among individuals measured at both time
> # points, stratified by age
> #
> #-------------------------------------------
> 
> #-------------------------------------------
> # input files:
> #   mauke1975-public.csv
> #   mauke1992-public.csv
> #
> # output files:
> #   mauke-Wb123-long.RData
> #-------------------------------------------
> 
> 
> 
> #-------------------------------------------
> # preamble
> #-------------------------------------------
> 
> rm(list=ls())
> library(tmle)
Loading required package: SuperLearner
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(SuperLearner)
> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.2)

Periodically check for the most current version (github.com/ben-arnold/tmleAb) 
(we have plans for some useful additions)


> 
> 
> #-------------------------------------------
> # load the Mauke data from 1974(1975) and 1992
> #-------------------------------------------
> 
> data("mauke_wb123")
> md <- mauke_wb123
> 
> # make an MDA identifier (all obs in 1992 are 5y post MDA)
> # subset to relevant vars
> md$mda <- ifelse(md$year=='1992',1,0)
> md <- subset(md,select=c("id75","age","CAg","wb123","mda"))
> names(md) <- c("id","age","CAg","wb123","mda")
> 
> # create a wide format dataset
> d75 <- subset(md,mda==0)
> d92 <- subset(md,mda==1)
> names(d75) <- c("id","age.75","CAg.75","wb123.75","mda.75")
> names(d92) <- c("id","age.92","CAg.92","wb123.92","mda.92")
> d <- merge(d75,d92,by="id")
> 
> # restrict long format dataset to individuals 
> # with measuremments in both 1975 and 1992
> a7592 <- merge(md,subset(d,select="id"),by="id",all.x=F)
> 
> # create antigen status variables in 1975 and 1992
> d$ab75 <- as.factor(ifelse(d$CAg.75>32,"Pos","Neg"))
> d$ab92 <- as.factor(ifelse(d$CAg.92>32,"Pos","Neg"))
> d$Abstatus <- factor(rep("Neg-Neg",nrow(d)),levels=c("Neg-Neg","Pos-Neg","Pos-Pos","Neg-Pos"))
>   d$Abstatus[d$ab75=="Pos"&d$ab92=="Neg"] <- "Pos-Neg"
>   d$Abstatus[d$ab75=="Pos"&d$ab92=="Pos"] <- "Pos-Pos"
>   d$Abstatus[d$ab75=="Neg"&d$ab92=="Pos"] <- "Neg-Pos"
>   
> # merge antigen status at both time points into the long format data as well
> a7592 <- merge(a7592,subset(d,select=c("id","Abstatus")),by="id",all.x=T)
> 
> 
> #--------------------------------------
> # Estimate means and differences between
> # time points for each antigen+/- 
> # combo
> #--------------------------------------
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> set.seed(2194543)
> Abstatus <- c("Neg-Neg","Pos-Neg","Pos-Pos")
> EYx_75_Abstatus <- sapply(Abstatus, function(x) 
+ 	tmleAb(Y=log10(d$wb123.75[d$Abstatus==x]),
+ 	       W=data.frame(Age=d$age.75[d$Abstatus==x]),
+ 	       id=d$id[d$Abstatus==x],
+ 	       SL.library = SL.library)[c("psi","se","lb","ub","p")]
+ )
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

 Population Mean
   Parameter Estimate:  4.7619
   Estimated Variance:  0.012932
              p-value:  <2e-16
    95% Conf Interval: (4.539, 4.9848) 
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
 Population Mean
   Parameter Estimate:  5.4113
   Estimated Variance:  0.00047719
              p-value:  <2e-16
    95% Conf Interval: (5.3685, 5.4541) 
 Population Mean
   Parameter Estimate:  5.3795
   Estimated Variance:  0.00095143
              p-value:  <2e-16
    95% Conf Interval: (5.319, 5.4399) 
> EYx_92_Abstatus <- sapply(Abstatus, function(x) 
+ 	tmleAb(Y=log10(d$wb123.92[d$Abstatus==x]),
+ 	       W=data.frame(Age=d$age.92[d$Abstatus==x]),
+ 	       id=d$id[d$Abstatus==x],
+ 	       SL.library = SL.library)[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  4.4299
   Estimated Variance:  0.01298
              p-value:  <2e-16
    95% Conf Interval: (4.2066, 4.6532) 
 Population Mean
   Parameter Estimate:  4.6573
   Estimated Variance:  0.011215
              p-value:  <2e-16
    95% Conf Interval: (4.4498, 4.8649) 
 Population Mean
   Parameter Estimate:  5.3775
   Estimated Variance:  0.005641
              p-value:  <2e-16
    95% Conf Interval: (5.2303, 5.5248) 
> diff_Abstatus <- sapply(Abstatus, function(x) 
+ 	tmleAb(Y=log10(a7592$wb123[a7592$Abstatus==x]), 
+ 	       X=a7592$mda[a7592$Abstatus==x],
+ 	       W=data.frame(Age=a7592$age[a7592$Abstatus==x]), 
+ 	       id=a7592$id[a7592$Abstatus==x],
+ 	       SL.library = SL.library)[c("psi","se","lb","ub","p")] 
+ )
 Additive Effect
   Parameter Estimate:  -0.4355
   Estimated Variance:  0.023567
              p-value:  0.004556
    95% Conf Interval: (-0.7364, -0.13461) 
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
Error in optim(c(0.1, 0.01, 1), fn = LL, Age = Age, logAb = logAb) : 
  function cannot be evaluated at initial parameters
 Additive Effect
   Parameter Estimate:  -0.57485
   Estimated Variance:  0.010917
              p-value:  3.7616e-08
    95% Conf Interval: (-0.77964, -0.37006) 
 Additive Effect
   Parameter Estimate:  -0.036496
   Estimated Variance:  0.0061462
              p-value:  0.64156
    95% Conf Interval: (-0.19016, 0.11716) 
> 
> 
> #--------------------------------------
> # store results for later summary
> # and plotting
> #--------------------------------------
> save.image("~/dropbox/articles/antibody-curves/results/raw/mauke-Wb123-long.RData")
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 10.647   0.159  13.038 
