
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> 
> #-------------------------------------------
> # Fig1-1-mauke-Wb123-analysis.R
> # Ben Arnold
> #
> # SuperLearner fits of age-specific antibody
> # response on Mauke island before and after
> # MDA, and TMLE estimates of geometric mean
> # (area under the curve) of antibody responses
> #
> #-------------------------------------------
> 
> #-------------------------------------------
> # input files:
> #   mauke1975-public.csv
> #   mauke1992-public.csv
> #
> # output files:
> #   mauke-Wb123-analysis.RData
> #-------------------------------------------
> 
> 
> 
> #-------------------------------------------
> # preamble
> #-------------------------------------------
> 
> rm(list=ls())
> library(tmle)
Loading required package: SuperLearner
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(SuperLearner)
> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.2)

Periodically check for the most current version (github.com/ben-arnold/tmleAb) 
(we have plans for some useful additions)


> 
> 
> #-------------------------------------------
> # load the Mauke data from 1974(1975) and 1992
> #-------------------------------------------
> 
> # d75 <- read.csv("~/dropbox/articles/antibody-curves/data/mauke/mauke1975-public.csv")
> # d92 <- read.csv("~/dropbox/articles/antibody-curves/data/mauke/mauke1992-public.csv")
> data("mauke_wb123")
> 
> d  <- mauke_wb123
> 
> # add 0.5 years to age to remove bias (on average) due to rounding to year
> d$ager <- d$age+0.5
> 
> # create age categories for stratified analyses
> # 5 year age categories (1-20 y)
> d$agecat <- cut(d$ager,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))
> 
> # identify the pre- vs. post-MDA measurements
> d$mda <- ifelse(d$year=="1992",1,0)
> 
> # make an unique individual id variable
> d$id <- ifelse(!is.na(d$id75),d$id75,d$id92)
> 
> # subset to common variables
> common.vars <- c("id","ager","agecat","wb123","year","mda")
> d <- subset(d,select=common.vars)
> 
> 
> # subset to each year as well, for convenience
> d75 <- subset(d,year=="1975")
> d92 <- subset(d,year=="1992")
> 
> 
> #--------------------------------------
> # All Ages
> #--------------------------------------
> # SL library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> 
> set.seed(0237234)
> 
> # SuperLearner fits of antibody levels
> mauke75 <- agecurveAb(Y=log10(d75$wb123),Age=d75$ager,id=d75$id,SL.library=SL.library)
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12


Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.7229703 0.003689716
SL.glm_All      0.6632430 0.000000000
SL.Yman2016_All 0.7567734 0.000000000
SL.gam.df3_All  0.6217559 0.653781559
SL.loess_All    0.6225374 0.342528725
Warning message:
In log(Aa) : NaNs produced
> mauke92 <- agecurveAb(Y=log10(d92$wb123),Age=d92$ager,id=d92$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk      Coef
SL.mean_All     1.0736609 0.0000000
SL.glm_All      0.9392177 0.2185939
SL.Yman2016_All 0.9050721 0.5187403
SL.gam.df7_All  0.9008200 0.2626658
SL.loess_All    0.9046339 0.0000000
> 
> # estimate group means
> EYx.mauke75 <- tmleAb(Y=log10(d75$wb123),W=data.frame(Age=d75$ager),id=d75$id,SL.library=SL.library)
 Population Mean
   Parameter Estimate:  4.925
   Estimated Variance:  0.0019574
              p-value:  <2e-16
    95% Conf Interval: (4.8383, 5.0118) 
> EYx.mauke92 <- tmleAb(Y=log10(d92$wb123),W=data.frame(Age=d92$ager),id=d92$id,SL.library=SL.library)
 Population Mean
   Parameter Estimate:  4.2452
   Estimated Variance:  0.0021474
              p-value:  <2e-16
    95% Conf Interval: (4.1544, 4.336) 
> 
> # estimate difference in means
> diff.mauke  <- tmleAb(Y=log10(d$wb123),X=d$mda,W=data.frame(Age=d$ager),id=d$id,SL.library=SL.library)
 Additive Effect
   Parameter Estimate:  -0.71457
   Estimated Variance:  0.0034441
              p-value:  <2e-16
    95% Conf Interval: (-0.8296, -0.59955) 
> 
> 
> #--------------------------------------
> # Estimate means and differences between
> # time points in
> # 5 year age bands from ages 1-20
> #--------------------------------------
> 
> EYx75_1 <- tmleAb(Y=log10(d75$wb123[d75$agecat=="1-5"]),
+                   W=data.frame(Age=d75$ager[d75$agecat=="1-5"]),
+                   id=d75$id[d75$agecat=="1-5"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.452
   Estimated Variance:  0.024302
              p-value:  <2e-16
    95% Conf Interval: (4.1465, 4.7576) 
> EYx75_2 <- tmleAb(Y=log10(d75$wb123[d75$agecat=="6-10"]),
+                   W=data.frame(Age=d75$ager[d75$agecat=="6-10"]),
+                   id=d75$id[d75$agecat=="6-10"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.4649
   Estimated Variance:  0.032006
              p-value:  <2e-16
    95% Conf Interval: (4.1143, 4.8155) 
> EYx75_3 <- tmleAb(Y=log10(d75$wb123[d75$agecat=="11-15"]),
+                   W=data.frame(Age=d75$ager[d75$agecat=="11-15"]),
+                   id=d75$id[d75$agecat=="11-15"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.7149
   Estimated Variance:  0.019007
              p-value:  <2e-16
    95% Conf Interval: (4.4447, 4.9851) 
> EYx75_4 <- tmleAb(Y=log10(d75$wb123[d75$agecat=="16-20"]),
+                   W=data.frame(Age=d75$ager[d75$agecat=="16-20"]),
+                   id=d75$id[d75$agecat=="16-20"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  5.0789
   Estimated Variance:  0.01053
              p-value:  <2e-16
    95% Conf Interval: (4.8778, 5.28) 
> 
> EYx92_1 <- tmleAb(Y=log10(d92$wb123[d92$agecat=="1-5"]),
+                   W=data.frame(Age=d92$ager[d92$agecat=="1-5"]),
+                   id=d92$id[d92$agecat=="1-5"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  3.2697
   Estimated Variance:  0.023292
              p-value:  <2e-16
    95% Conf Interval: (2.9706, 3.5689) 
> EYx92_2 <- tmleAb(Y=log10(d92$wb123[d92$agecat=="6-10"]),
+                   W=data.frame(Age=d92$ager[d92$agecat=="6-10"]),
+                   id=d92$id[d92$agecat=="6-10"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  3.7673
   Estimated Variance:  0.017201
              p-value:  <2e-16
    95% Conf Interval: (3.5102, 4.0244) 
> EYx92_3 <- tmleAb(Y=log10(d92$wb123[d92$agecat=="11-15"]),
+                   W=data.frame(Age=d92$ager[d92$agecat=="11-15"]),
+                   id=d92$id[d92$agecat=="11-15"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  3.9324
   Estimated Variance:  0.014278
              p-value:  <2e-16
    95% Conf Interval: (3.6982, 4.1666) 
> EYx92_4 <- tmleAb(Y=log10(d92$wb123[d92$agecat=="16-20"]),
+                   W=data.frame(Age=d92$ager[d92$agecat=="16-20"]),
+                   id=d92$id[d92$agecat=="16-20"],
+                   SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.1139
   Estimated Variance:  0.0098785
              p-value:  <2e-16
    95% Conf Interval: (3.9191, 4.3087) 
> 
> diff_1 <- tmleAb(Y=log10(d$wb123[d$agecat=="1-5"]),W=data.frame(Age=d$ager[d$agecat=="1-5"]),
+                  id=d$id[d$agecat=="1-5"],
+                  SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.0191
   Estimated Variance:  0.01726
              p-value:  <2e-16
    95% Conf Interval: (3.7616, 4.2766) 
> diff_2 <- tmleAb(Y=log10(d$wb123[d$agecat=="6-10"]),
+                  W=data.frame(Age=d$ager[d$agecat=="6-10"]),
+                  id=d$id[d$agecat=="6-10"],
+                  SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.0352
   Estimated Variance:  0.012032
              p-value:  <2e-16
    95% Conf Interval: (3.8202, 4.2502) 
> diff_3 <- tmleAb(Y=log10(d$wb123[d$agecat=="11-15"]),
+                  W=data.frame(Age=d$ager[d$agecat=="11-15"]),
+                  id=d$id[d$agecat=="11-15"],
+                  SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.2338
   Estimated Variance:  0.009472
              p-value:  <2e-16
    95% Conf Interval: (4.043, 4.4245) 
> diff_4 <- tmleAb(Y=log10(d$wb123[d$agecat=="16-20"]),
+                  W=data.frame(Age=d$ager[d$agecat=="16-20"]),
+                  id=d$id[d$agecat=="16-20"],
+                  SL.library=SL.library) 
 Population Mean
   Parameter Estimate:  4.3491
   Estimated Variance:  0.0078989
              p-value:  <2e-16
    95% Conf Interval: (4.1749, 4.5233) 
> 
> # condense results
> getpsi <- function(x) {
+   res <- c(x$psi,x$se,x$lb,x$ub)
+   names(res) <- c("psi","se","lb","ub")
+   return(res)
+ }
> EYx75 <- list(EYx75_1,EYx75_2,EYx75_3,EYx75_4)
> EYx92 <- list(EYx92_1,EYx92_2,EYx92_3,EYx92_4)
> diffs <- list(diff_1,diff_2,diff_3,diff_4)
> EYx_mauke75kids <- sapply(EYx75, getpsi)
> EYx_mauke92kids <- sapply(EYx92, getpsi)
> diff_maukekids <- sapply(diffs, getpsi)
> colnames(EYx_mauke75kids) <- colnames(EYx_mauke92kids) <- colnames(diff_maukekids) <- c("1-5","6-10","11-15","16-20")
> 
> #--------------------------------------
> # store results for later summary
> # and plotting
> #--------------------------------------
> save.image("~/dropbox/articles/antibody-curves/results/raw/mauke-Wb123-analysis.RData")
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 23.754   0.241  26.695 
