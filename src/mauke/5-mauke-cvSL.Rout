
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 5-mauke-cvSL.R
> #
> # Compute the cross-validated
> # risk for the super leaner
> # and its constituent algorithms
> #
> # in the Mauke 1992 survey
> #-------------------------------
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.1)

Check github.com/ben-arnold/tmleAb for the most current version
(we have plans for some useful additions)


> 
> # load general plotting functions
> library(ggplot2)
> library(r2weight)
> library(RColorBrewer)
> source("~/slabcurves/src/ab_plot_cvSL.R")
> source("~/slabcurves/src/ab_plot_cvR2.R")
> 
> 
> #-------------------------------
> # load data
> # restrict to 1975 for illustration
> #-------------------------------
> # d <- read.csv("~/dropbox/articles/antibody-curves/data/mauke/mauke1992-public.csv")
> data("mauke_wb123")
> d <- subset(mauke_wb123,year=='1992' & age<=70)
> 
> # add 0.5 years to age to remove bias (on average) due to rounding to year
> d$age <- d$age+0.5
> 
> 
> #-------------------------------
> # fit cross-validated SL
> # with age as the only feature
> # full library
> #-------------------------------
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess","SL.randomForest","SL.polymars")
> 
> set.seed(0237234)
> maukeCVfull <- cvSLAb(Y=log10(d$wb123),X=data.frame(Age=d$age),family=gaussian(),V=10,SL.library=SL.library,gamdf=2:6)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: polspline
> summary(maukeCVfull)

Call:  
SuperLearner::CV.SuperLearner(Y = fitd$Y, X = fitX, V = V, family = family,  
    SL.library = SL.library, id = fitd$id, control = list(saveFitLibrary = TRUE)) 


Risk is based on: Mean Squared Error

All risk estimates are based on V =  10 

                Algorithm     Ave       se     Min    Max
            Super Learner 0.91418 0.075152 0.73910 1.1609
              Discrete SL 0.91108 0.074807 0.72475 1.1624
              SL.mean_All 1.07775 0.084342 0.84349 1.5376
               SL.glm_All 0.94654 0.075529 0.75456 1.2575
          SL.Yman2016_All 0.91392 0.075926 0.73578 1.1639
           SL.gam.df6_All 0.90313 0.074503 0.72475 1.1624
             SL.loess_All 0.91007 0.074740 0.71815 1.1751
 SL.randomForest.ns35_All 0.92811 0.075650 0.80119 1.1437
          SL.polymars_All 0.91704 0.075376 0.72274 1.1752
> 
> #-------------------------------
> # fit cross-validated SL
> # with age as the only feature
> # restricted library
> #-------------------------------
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> 
> set.seed(0237234)
> maukeCVres <- cvSLAb(Y=log10(d$wb123),X=data.frame(Age=d$age),family=gaussian(),V=10,SL.library=SL.library,gamdf=2:6)
> summary(maukeCVres)

Call:  
SuperLearner::CV.SuperLearner(Y = fitd$Y, X = fitX, V = V, family = family,  
    SL.library = SL.library, id = fitd$id, control = list(saveFitLibrary = TRUE)) 


Risk is based on: Mean Squared Error

All risk estimates are based on V =  10 

       Algorithm     Ave       se     Min    Max
   Super Learner 0.90917 0.075199 0.62465 1.2430
     Discrete SL 0.91208 0.074798 0.62880 1.2395
     SL.mean_All 1.07881 0.084415 0.82033 1.4876
      SL.glm_All 0.94490 0.075221 0.72642 1.2401
 SL.Yman2016_All 0.91157 0.075611 0.60346 1.2618
  SL.gam.df5_All 0.90777 0.074665 0.62880 1.2395
    SL.loess_All 0.91093 0.074849 0.61551 1.2419
> 
> 
> #-------------------------------
> # plot the CV MSE estimates
> #-------------------------------
> cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
> cols <- cbPalette[c(1:4,6:8)]
> cols <- c(cols,brewer.pal(8,"Dark2")[3])
> 
> # pdf("~/dropbox/articles/antibody-curves/results/figs/mauke-cvSL.pdf")
> # ab_plot_cvSL(CVmauke,col=cols,ylab="10-fold Cross-validated MSE Estimate",title="W. bancrofti, Mauke 1992")
> # dev.off()
> 
> #-------------------------------
> # convert CV MSE into R2
> # using the r2weight package
> # and plot the R2 estimates
> #-------------------------------
> pdf("~/dropbox/articles/antibody-curves/results/figs/mauke-cvR2.pdf")
> ab_plot_cvR2(maukeCVfull,data.frame(Age=d$age),ylab="10-fold Cross-validated R-squared",title=expression(paste(italic('Wuchereria bancrofti')," Wb123, Mauke")),col=cols,ylim=c(0,0.6))
  cvr2$Algorithm     r2  lower  upper
1  Super Learner 0.1518 0.1053 0.1958
2    Simple Mean 0.0000 0.0000 0.0000
3            GLM 0.1217 0.0657 0.1744
4       Yman2016 0.1520 0.1095 0.1925
5            GAM 0.1620 0.1172 0.2046
6          LOESS 0.1556 0.1102 0.1986
7  Random Forest 0.1388 0.0795 0.1944
8           MARS 0.1491 0.0979 0.1974
> dev.off()
null device 
          1 
> 
> #-------------------------------
> # plot the age-antibody curves
> # for the full SL and the 
> # restricted SL library to
> # compare EYxa and EYx
> # setting the same seed to
> # get exactly the same splits
> # for cross-validation
> #-------------------------------
> 
> # full library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess","SL.randomForest","SL.polymars")
> set.seed(23423)
> maukeSLfull <- agecurveAb(Y=log10(d$wb123),Age=d$age,id=d$id,SL.library=SL.library,gamdf=2:6)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                           CV-Risk       Coef
SL.mean_All              1.0773725 0.00000000
SL.glm_All               0.9457813 0.20192246
SL.Yman2016_All          0.9113056 0.53268207
SL.gam.df6_All           0.9072137 0.02793631
SL.loess_All             0.9113363 0.00000000
SL.randomForest.ns40_All 0.9322730 0.23745916
SL.polymars_All          0.9286361 0.00000000
> 
> # restricted library
> set.seed(834524)
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> maukeSLres <- agecurveAb(Y=log10(d$wb123),Age=d$age,id=d$id,SL.library=SL.library,gamdf=2:6)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     1.0760459 0.005117888
SL.glm_All      0.9452665 0.064637735
SL.Yman2016_All 0.9120244 0.254202970
SL.gam.df6_All  0.9028075 0.676041407
SL.loess_All    0.9094251 0.000000000
> 
> 
> 
> # plot age-dependent antibody curves and means for two SL libraries
> pdf("~/dropbox/articles/antibody-curves/results/figs/mauke-Wb123-cvSLcurves.pdf",width=5,height=5)
> 
> ytics <- seq(2,6,by=1)
> xtics <- seq(0,70,by=10)
> 
> set.seed(623) # jitter ages (but not actual fits) to better display the data
> op <- par(mar=c(4,5,4,0)+0.1,xpd=T)
> plot(jitter(maukeSLfull$Age),maukeSLfull$Y,col=alpha("black",alpha=0.4),pch=16,cex=0.2,
+      ylim=c(2,6),ylab="",yaxt="n",
+      xlim=c(0,max(xtics)+1),xlab="",xaxt="n",
+      bty="n",las=1
+ )
> mtext(expression(paste(italic('W. bancrofti')," Wb123 light units")),side=2,line=3)
> # mtext("d",adj=1,line=2,at=-3,font=2,cex=1.75)
> # mtext("Intervention Period",adj=0,line=3,at=0,cex=1.5)
> mtext(expression(paste(italic('Wuchereria bancrofti')," Wb123, Mauke")),side=3,line=2)
> mtext("Super learner ensemble prediction",side=3,line=0.5)
> mtext("Age, years",side=1,line=2.5)
> axis(2,at=2:6,labels=c(
+   expression(10^2),
+   expression(10^3),
+   expression(10^4),
+   expression(10^5),
+   expression(10^6)
+ ), las=1,cex.axis=1.25
+ )
> # segments(x0=min(xtics),x1=max(xtics),y0=ytics,lty=2,col="gray70")
> axis(1,at=xtics,cex.axis=1.5)
> lines(maukeSLfull$Age,maukeSLfull$pY,col=cols[1],lwd=1)
> lines(maukeSLres$Age,maukeSLres$pY,col=cols[2],lwd=1)
> 
> legend(x=70,y=2,xjust=1,yjust=0,legend=c("Full library","Restricted library"),lty=c(1,1), lwd=c(2,2),col=cols[1:2],cex=0.8,bty="n")
> par(op)
> 
> dev.off()
null device 
          1 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 83.639   1.138  89.183 
