
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> 
> #-------------------------------------------
> # 4-mauke-Wb123-binary.R
> #
> # estimate age-specific antibody curves
> # after reducing the quantitative Wb123
> # antibody response to a binary pos/neg
> # measurement. the analysis parallels the 
> # main analysis using the quantitative response
> # (see 1-mauke-Wb123-analysis.R)
> #
> # Also, compare the results with
> # a standard parametric model used for such data --
> # the "reversible catalytic model"
> #
> #-------------------------------------------
> 
> #-------------------------------------------
> # input files:
> #   mauke1974.dta
> #   mauke1992.dta
> #
> # output files:
> #   mauke-Wb123-binary.RData
> #   mauke-Wb123-binary.pdf
> #-------------------------------------------
> 
> 
> 
> #-------------------------------------------
> # preamble
> #-------------------------------------------
> 
> rm(list=ls())
> library(RColorBrewer)
> library(foreign)
> library(tmle)
Loading required package: SuperLearner
Loading required package: nnls
Super Learner
Version: 2.0-15
Package created on 2014-07-16

Use SuperLearnerNews() to see changes from previous versions and latest news

Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(SuperLearner)
> 
> # source the base functions for
> # SL fits of age-antibody curves
> # and TMLE estimates of mean differences
> source("~/SLAbcurves/src/SLAb-curve.R")
> source("~/SLAbcurves/src/SLAb-tmle.R")
> source("~/SLAbcurves/src/SLAb-cvRF.R")
> 
> #-------------------------------------------
> # load the Mauke data from 1974(1975) and 1992
> #-------------------------------------------
> 
> d75 <- read.dta("~/dropbox/mauke/data/final/mauke1974.dta")
> d92 <- read.dta("~/dropbox/mauke/data/final/mauke1992.dta")
> 
> # drop 7 children aged 0 (all Wb123+) in 1975 due to maternal antibodies
> a75 <- subset(d75,age>0)
> a92 <- d92
> 
> # add 0.5 years to age to remove bias (on average) due to rounding to year
> a75$ager <- a75$age+0.5
> a92$ager <- a92$age+0.5
> 
> # create age categories for stratified analyses
> # 5 year age categories (1-20 y)
> a75$agecat <- cut(a75$age,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))
> a92$agecat <- cut(a92$age,breaks=c(0,5,10,15,20),labels=c("1-5","6-10","11-15","16-20"))
> 
> # 2 year age categories (1-10 y)
> a75$agecat2 <- cut(a75$age,breaks=c(0,2,4,6,8,10),labels=c("1-2","3-4","5-6","7-8","9-10"))
> a92$agecat2 <- cut(a92$age,breaks=c(0,2,4,6,8,10),labels=c("1-2","3-4","5-6","7-8","9-10"))
> 
> # create a standard ID variable before appending
> a75$id <- as.integer(a75$id74)
> a92$id <- ifelse(is.na(a92$id74),a92$id92,a92$id74)
> 
> # identify the pre- vs. post-MDA measurements
> a75$mda <- 0
> a92$mda <- 1
> 
> # recode the dichotomous Wb123 variable to 0/1
> a75$wb123p <- ifelse(a75$wb123pos=="Positive",1,0)
> a92$wb123p <- ifelse(a92$wb123pos=="Positive",1,0)
> 
> # append data with common variables
> common.vars <- c("id","ager","agecat","agecat2","wb123","wb123p","mda")
> a7592 <- rbind(subset(a75,select=common.vars),subset(a92,select=common.vars))
> 
> # add a variable "n" <- 1 for fitting the reversible catalytic model, below
> a7592$n <- 1
> 
> 
> #--------------------------------------
> # All Ages
> #--------------------------------------
> set.seed(36234)
> 
> # SuperLearner fits of antibody levels
> mauke75 <- SLAb.curve(Y=a75$wb123p,Age=a75$ager,id=a75$id)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.
Loading required package: arm
Loading required package: MASS
Loading required package: Matrix
Loading required package: lme4
Loading required package: Rcpp

arm (Version 1.8-5, built: 2015-05-13)

Working directory is /Users/benarnold/SLAbcurves/src/mauke

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: glmnet
Loaded glmnet 2.0-2


Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                               Risk       Coef
SL.mean_All              0.11970362 0.00000000
SL.glm_All               0.10954127 0.00000000
SL.bayesglm_All          0.10954125 0.00000000
SL.loess_All             0.09951599 0.68339973
SL.gam_All               0.10111948 0.17760999
SL.gam.3_All             0.09958178 0.06500046
SL.glmnet_All            0.10951966 0.00000000
SL.randomForest.ns35_All 0.10466323 0.07398981
There were 50 or more warnings (use warnings() to see the first 50)
> mauke92 <- SLAb.curve(Y=a92$wb123p,Age=a92$ager,id=a92$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk       Coef
SL.mean_All              0.2404370 0.00000000
SL.glm_All               0.2131721 0.00000000
SL.bayesglm_All          0.2131721 0.00000000
SL.loess_All             0.2071672 0.00000000
SL.gam_All               0.2070453 0.00000000
SL.gam.3_All             0.2062111 0.94997929
SL.glmnet_All            0.2131899 0.00000000
SL.randomForest.ns25_All 0.2154318 0.05002071
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # estimate group means
> EYx.mauke75 <- SLAb.tmle(Y=a75$wb123p,Age=a75$ager,id=a75$id)
 Population Mean
   Parameter Estimate:  0.86188
   Estimated Variance:  0.00032976
              p-value:  <2e-16
    95% Conf Interval: (0.82629, 0.89747) 
There were 50 or more warnings (use warnings() to see the first 50)
> EYx.mauke92 <- SLAb.tmle(Y=a92$wb123p,Age=a92$ager,id=a92$id)
 Population Mean
   Parameter Estimate:  0.60398
   Estimated Variance:  0.00043331
              p-value:  <2e-16
    95% Conf Interval: (0.56318, 0.64478) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> # estimate difference in means
> diff.mauke  <- SLAb.tmle(Y=a7592$wb123p,Age=a7592$ager,id=a7592$id,X=a7592$mda,diff=TRUE)
 Additive Effect
   Parameter Estimate:  -0.26198
   Estimated Variance:  0.00072804
              p-value:  <2e-16
    95% Conf Interval: (-0.31487, -0.2091) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> #--------------------------------------
> # Estimate means and differences between
> # time points in
> # 5 year age bands from ages 1-20
> #--------------------------------------
> agegrps <-c("1-5","6-10","11-15","16-20") 
> EYx.mauke75kids <- sapply(agegrps, function(x) 
+   SLAb.tmle(Y=a75$wb123p[a75$agecat==x],Age=a75$ager[a75$agecat==x],id=a75$id[a75$agecat==x]) 
+ )
 Population Mean
   Parameter Estimate:  0.54348
   Estimated Variance:  0.0055135
              p-value:  2.4936e-13
    95% Conf Interval: (0.39794, 0.68901) 
 Population Mean
   Parameter Estimate:  0.75
   Estimated Variance:  0.0034091
              p-value:  <2e-16
    95% Conf Interval: (0.63556, 0.86444) 
 Population Mean
   Parameter Estimate:  0.80851
   Estimated Variance:  0.0033657
              p-value:  <2e-16
    95% Conf Interval: (0.6948, 0.92222) 
Error in lm.fit(x = x.star[good.star, , drop = FALSE] * w.star, y = z.star *  : 
  NA/NaN/Inf in 'x'
In addition: There were 50 or more warnings (use warnings() to see the first 50)
 Population Mean
   Parameter Estimate:  0.96429
   Estimated Variance:  0.0012755
              p-value:  <2e-16
    95% Conf Interval: (0.89429, 1.0343) 
> EYx.mauke92kids <- sapply(agegrps, function(x) 
+   SLAb.tmle(Y=a92$wb123p[a92$agecat==x],Age=a92$ager[a92$agecat==x],id=a92$id[a92$agecat==x]) 
+ )
 Population Mean
   Parameter Estimate:  0.20455
   Estimated Variance:  0.0037839
              p-value:  0.00088346
    95% Conf Interval: (0.08398, 0.32511) 
 Population Mean
   Parameter Estimate:  0.43902
   Estimated Variance:  0.0030405
              p-value:  1.6946e-15
    95% Conf Interval: (0.33095, 0.5471) 
 Population Mean
   Parameter Estimate:  0.44565
   Estimated Variance:  0.0027148
              p-value:  <2e-16
    95% Conf Interval: (0.34353, 0.54778) 
 Population Mean
   Parameter Estimate:  0.5641
   Estimated Variance:  0.0031934
              p-value:  <2e-16
    95% Conf Interval: (0.45334, 0.67486) 
There were 50 or more warnings (use warnings() to see the first 50)
> diff.maukekids <- sapply(agegrps, function(x) 
+   SLAb.tmle(Y=a7592$wb123p[a7592$agecat==x], Age=a7592$ager[a7592$agecat==x], id=a7592$id[a7592$agecat==x], X=a7592$mda[a7592$agecat==x], diff=TRUE) 
+ )
 Additive Effect
   Parameter Estimate:  -0.33841
   Estimated Variance:  0.0099683
              p-value:  0.00070037
    95% Conf Interval: (-0.5341, -0.14272) 
 Additive Effect
   Parameter Estimate:  -0.31487
   Estimated Variance:  0.0061784
              p-value:  6.1806e-05
    95% Conf Interval: (-0.46893, -0.16081) 
 Additive Effect
   Parameter Estimate:  -0.34692
   Estimated Variance:  0.0063078
              p-value:  1.2533e-05
    95% Conf Interval: (-0.50259, -0.19126) 
 Additive Effect
   Parameter Estimate:  -0.40018
   Estimated Variance:  0.0044241
              p-value:  1.7822e-09
    95% Conf Interval: (-0.53055, -0.26982) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> 
> #--------------------------------------
> # Estimate means and differences between
> # time points in
> # 2 year age bands from ages 1-10
> #-------------------------------------- 
> agegrps2 <-c("1-2","3-4","5-6","7-8","9-10")
> EYx.mauke75kids2y <- sapply(agegrps2, function(x) 
+   SLAb.tmle(Y=a75$wb123p[a75$agecat2==x],Age=a75$ager[a75$agecat2==x],id=a75$id[a75$agecat2==x]) 
+ )
 Population Mean
   Parameter Estimate:  0.45
   Estimated Variance:  0.013026
              p-value:  8.0545e-05
    95% Conf Interval: (0.2263, 0.6737) 
Error in intI(j, n = x@Dim[2], dn[[2]], give.dn = FALSE) : 
  'NA' indices are not (yet?) supported for sparse Matrices
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Error in predmat[which, seq(nlami)] = preds : replacement has length zero
Error in predmat[which, seq(nlami)] = preds : replacement has length zero
 Population Mean
   Parameter Estimate:  0.66667
   Estimated Variance:  0.013072
              p-value:  5.5112e-09
    95% Conf Interval: (0.44258, 0.89076) 
 Population Mean
   Parameter Estimate:  0.57143
   Estimated Variance:  0.012245
              p-value:  2.4176e-07
    95% Conf Interval: (0.35454, 0.78832) 
Error in intI(j, n = x@Dim[2], dn[[2]], give.dn = FALSE) : 
  'NA' indices are not (yet?) supported for sparse Matrices
In addition: There were 50 or more warnings (use warnings() to see the first 50)
 Population Mean
   Parameter Estimate:  0.86364
   Estimated Variance:  0.005608
              p-value:  <2e-16
    95% Conf Interval: (0.71686, 1.0104) 
Error in approx(lambda, seq(lambda), sfrac) : 
  need at least two non-NA values to interpolate
In addition: There were 50 or more warnings (use warnings() to see the first 50)
 Population Mean
   Parameter Estimate:  0.71429
   Estimated Variance:  0.010204
              p-value:  1.5375e-12
    95% Conf Interval: (0.5163, 0.91228) 
> EYx.mauke92kids2y <- sapply(agegrps2, function(x) 
+   SLAb.tmle(Y=a92$wb123p[a92$agecat2==x],Age=a92$ager[a92$agecat2==x],id=a92$id[a92$agecat2==x]) 
+ )
Error in approx(lambda, seq(lambda), sfrac) : 
  need at least two non-NA values to interpolate
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Error in intI(j, n = x@Dim[2], dn[[2]], give.dn = FALSE) : 
  'NA' indices are not (yet?) supported for sparse Matrices
 Population Mean
   Parameter Estimate:  0.27273
   Estimated Variance:  0.019835
              p-value:  0.052808
    95% Conf Interval: (-0.0033108, 0.54877) 
Error in predmat[which, seq(nlami)] = preds : replacement has length zero
In addition: There were 50 or more warnings (use warnings() to see the first 50)
Error in predmat[which, seq(nlami)] = preds : replacement has length zero
Error in predmat[which, seq(nlami)] = preds : replacement has length zero
 Population Mean
   Parameter Estimate:  0.26667
   Estimated Variance:  0.013968
              p-value:  0.024052
    95% Conf Interval: (0.035019, 0.49831) 
 Population Mean
   Parameter Estimate:  0.18182
   Estimated Variance:  0.0046488
              p-value:  0.0076608
    95% Conf Interval: (0.048182, 0.31545) 
 Population Mean
   Parameter Estimate:  0.4359
   Estimated Variance:  0.0064708
              p-value:  5.9993e-08
    95% Conf Interval: (0.27823, 0.59356) 
 Population Mean
   Parameter Estimate:  0.53571
   Estimated Variance:  0.009212
              p-value:  2.3837e-08
    95% Conf Interval: (0.34759, 0.72383) 
There were 50 or more warnings (use warnings() to see the first 50)
> diff.maukekids2y <- sapply(agegrps2, function(x) 
+   SLAb.tmle(Y=a7592$wb123p[a7592$agecat2==x], Age=a7592$ager[a7592$agecat2==x], id=a7592$id[a7592$agecat2==x], X=a7592$mda[a7592$agecat2==x], diff=TRUE) 
+ )
 Additive Effect
   Parameter Estimate:  -0.21066
   Estimated Variance:  0.030729
              p-value:  0.22948
    95% Conf Interval: (-0.55424, 0.13293) 
 Additive Effect
   Parameter Estimate:  -0.4
   Estimated Variance:  0.026124
              p-value:  0.013331
    95% Conf Interval: (-0.71679, -0.083206) 
 Additive Effect
   Parameter Estimate:  -0.37152
   Estimated Variance:  0.016443
              p-value:  0.0037639
    95% Conf Interval: (-0.62284, -0.12019) 
 Additive Effect
   Parameter Estimate:  -0.42143
   Estimated Variance:  0.01161
              p-value:  9.1877e-05
    95% Conf Interval: (-0.63262, -0.21023) 
 Additive Effect
   Parameter Estimate:  -0.1782
   Estimated Variance:  0.018866
              p-value:  0.19449
    95% Conf Interval: (-0.44742, 0.091007) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> #-------------------------------------- 
> # save results
> #-------------------------------------- 
> save.image("~/SLAbcurves/results/raw/mauke-Wb123-binary.RData")
> 
> #--------------------------------------
> # make figure
> #--------------------------------------
> 
> pdf("~/SLAbcurves/results/figs/mauke-Wb123-binary.pdf",width=12,height=12)
> 
> cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
> cols <- cbPalette[c(7,6)]
> 
> lo <- layout(mat=matrix(1:4,nrow=2,ncol=2,byrow=TRUE))
> 
> 
> # Panel A age-specific curve E(Y_x,a), 1975
> op <- par(mar=c(5,5,3,4)+0.1)
> ytics <- seq(0,1,by=0.1)
> plot(mauke75$Age,mauke75$pY,type="n",
+      xlab="",xaxt="n",xlim=c(0,70),
+      ylab="",yaxt="n",ylim=range(ytics),
+      main="",
+      las=1,bty="n"
+ )
> axis(1,at=seq(0,70,by=10),cex.axis=1.5)
> axis(2,at=ytics,labels=seq(0,100,by=10), las=1,cex.axis=1.5)
> 
> lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)
> set.seed(623) # jitter ages (but not actual fits) to better display the data in the rug
> rug.low <- ifelse(mauke75$Y[mauke75$Age<=70.5]==0,0,mauke75$Y[mauke75$Age<=70.5]+0.02)
> rug.hgh <- ifelse(mauke75$Y[mauke75$Age<=70.5]==1,1,mauke75$Y[mauke75$Age<=70.5]+0.02)
> segments(x0=jitter(mauke75$Age[mauke75$Age<=70.5],1.5),y0=rug.low,y1=rug.hgh,col=cols[1])
> 
> # Axis labels
> mtext(expression(paste(italic('W. bancrofti')," Wb123 Seroprevalence (%)")),side=2,line=3,cex=1.25)
> # mtext("Age, years",side=1,line=3,cex=1.5)
> mtext("a",line=1,at=-10,adj=0,font=2,cex=2)
> mtext(expression(paste(italic(E),"(",italic(Y[a][","][x]),") in 1975 (pre-MDA)")),line=1,cex=1.5)
> 
> par(op)
> 
> 
> # Panel B age-specific curve E(Y_x,a), 1992
> op <- par(mar=c(5,5,3,0)+0.1)
> ytics <- seq(0,1,by=0.1)
> plot(mauke92$Age,mauke92$pY,type="n",
+      xlab="",xaxt="n",xlim=c(0,70),
+      ylab="",yaxt="n",ylim=range(ytics),
+      main="",
+      las=1,bty="n"
+ )
> axis(1,at=seq(0,70,by=10),cex.axis=1.5)
> axis(2,at=ytics,labels=seq(0,100,by=10), las=1,cex.axis=1.5)
> 
> lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)
> set.seed(623) # jitter ages (but not actual fits) to better display the data in the rug
> rug.low <- ifelse(mauke92$Y[mauke92$Age<=70.5]==0,0,mauke92$Y[mauke92$Age<=70.5]+0.02)
> rug.hgh <- ifelse(mauke92$Y[mauke92$Age<=70.5]==1,1,mauke92$Y[mauke92$Age<=70.5]+0.02)
> segments(x0=jitter(mauke92$Age[mauke92$Age<=70.5],1.5),y0=rug.low,y1=rug.hgh,col=cols[2])
> 
> # Axis labels
> # mtext(expression(paste(italic('W. bancrofti')," Wb123 Seroprevalence (%)")),side=2,line=3,cex=1.25)
> mtext("Age, years",side=1,line=3,cex=1.5)
> mtext("b",line=1,at=-10,adj=0,font=2,cex=2)
> mtext(expression(paste(italic(E),"(",italic(Y[a][","][x]),") in 1992 (post-MDA)")),line=1,cex=1.5)
> 
> par(op)
> 
> # Panel C, overlay
> op <- par(mar=c(5,5,3,4)+0.1)
> ytics <- seq(0,1,by=0.1)
> plot(mauke92$Age,mauke92$pY,type="n",
+      xlab="",xaxt="n",xlim=c(0,70),
+      ylab="",yaxt="n",ylim=range(ytics),
+      main="",
+      las=1,bty="n"
+ )
> axis(1,at=seq(0,70,by=10),cex.axis=1.5)
> axis(2,at=ytics,labels=seq(0,100,by=10), las=1,cex.axis=1.5)
> 
> lines(mauke75$Age,mauke75$pY,col=cols[1],lwd=2)
> lines(mauke92$Age,mauke92$pY,col=cols[2],lwd=2)
> 
> # Axis labels
> mtext(expression(paste(italic('W. bancrofti')," Wb123 Seroprevalence (%)")),side=2,line=3,cex=1.25)
> mtext("Age, years",side=1,line=3,cex=1.5)
> mtext("c",line=1,at=-10,adj=0,font=2,cex=2)
> mtext(expression(paste(italic(E),"(",italic(Y[a][","][x]),")")),line=1,cex=1.5)
> 
> # Group labels
> mtext("1975",side=4,line=0.5,adj=0,at=0.92,col=cols[1],cex=1.25,las=1)
> mtext("1992",side=4,line=0.5,adj=0,at=0.82,col=cols[2],cex=1.25,las=1)
> 
> par(op)
> 
> 
> # Panel D age category E(Y_x) plot
> op <- par(mar=c(5,5,3,0)+0.1)
> 
> plot(1:4,1:4,type="n",
+      ylab="",yaxt="n",ylim=range(ytics),
+      xlab="",xaxt="n",xlim=c(0.5,4.5),
+      bty="n"
+ )
> axis(2,at=ytics,labels=seq(0,100,by=10), las=1,cex.axis=1.5)
> # labels and line segments
> mtext(levels(a7592$agecat),side=1,line=1,at=1:4,cex=1.5)
> mtext("Age Category, Years",side=1,line=3,cex=1.5)
> 
> # Y label
> mtext("d",line=1,at=-0.3,adj=0,font=2,cex=2)
> mtext(expression(paste(italic(E),"(",italic(Y[x]),") stratified by child age")),line=1,cex=1.5)
> # mtext(c("1975","1992"),at=c(1,2),col=cols[1:2],side=3,line=-0.5)
> 
> # add in seroprevalence estimates
> arrows(x0=c(1:4), y0=unlist(EYx.mauke75kids[3,]), y1=unlist(EYx.mauke75kids[4,]), col=cols[1],lwd=2,length=0.05,angle=90,code=3)
> points(c(1:4),unlist(EYx.mauke75kids[1,]),pch=16,cex=1.75,bg="white",col=cols[1],lwd=2)
> 
> arrows(x0=c(1:4), y0=unlist(EYx.mauke92kids[3,]), y1=unlist(EYx.mauke92kids[4,]), col=cols[2],lwd=2,length=0.05,angle=90,code=3)
> points(c(1:4),unlist(EYx.mauke92kids[1,]),pch=21,cex=1.75,bg="white",col=cols[2],lwd=2)
> 
> # label data series
> text(4,EYx.mauke75kids[1,4],"1975",col=cols[1],pos=4)
> text(4,EYx.mauke92kids[1,4],"1992",col=cols[2],pos=4)
> 
> par(op)
> 
> 
> dev.off()
null device 
          1 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 91.138   1.066  94.608 
