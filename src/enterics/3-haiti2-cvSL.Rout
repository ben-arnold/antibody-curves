
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 3-haiti2-cvSL.R
> #
> # Compute the cross-validated
> # risk for the super leaner
> # and its constituent algorithms
> #
> # repeat calculations for multiple
> # enteric pathogens in the Haiti-2
> # cohort
> #-------------------------------
> 
> 
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.1)

Check github.com/ben-arnold/tmleAb for the most current version
(we have plans for some useful additions)


> library(RColorBrewer)
> library(scales)
> 
> # load general plotting functions
> library(ggplot2)
> library(r2weight)
> source("~/slabcurves/src/ab_plot_cvSL.R")
> source("~/slabcurves/src/ab_plot_cvR2.R")
> 
> 
> 
> #-------------------------------
> # load the dataset for analysis
> #-------------------------------
> # d.haiti <- read.csv("~/dropbox/articles/antibody-curves/data/enterics/haiti-enterics-public.csv")
> 
> d <- haiti_enterics
> X <- data.frame(Age=d$agey)
> 
> #-------------------------------
> # fit cross-validated SL
> #-------------------------------
> 
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess","SL.randomForest","SL.polymars")
> 
> # giardia
> set.seed(982375)
> CVvsp5 <- cvSLAb(Y=log10(d$vsp5+1),X=X,id=d$id,family=gaussian(),V=10,SL.library=SL.library,gamdf=2:6)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: polspline
> 
> # noro GI
> set.seed(2359)
> CVnorogi <- cvSLAb(Y=log10(d$norogi+1),X=X,id=d$id,family=gaussian(),V=10,SL.library=SL.library,gamdf=2:6)
> 
> #------------------------------
> # print results to log
> #------------------------------
> 
> # giardia
> summary(CVvsp5)

Call:  
SuperLearner::CV.SuperLearner(Y = fitd$Y, X = fitX, V = V, family = family,  
    SL.library = SL.library, id = fitd$id, control = list(saveFitLibrary = TRUE)) 


Risk is based on: Mean Squared Error

All risk estimates are based on V =  10 

                Algorithm     Ave       se     Min    Max
            Super Learner 0.66457 0.036915 0.46916 1.0748
              Discrete SL 0.68005 0.036722 0.45288 1.1415
              SL.mean_All 0.85484 0.042869 0.51970 1.2819
               SL.glm_All 0.86104 0.042976 0.52920 1.2911
          SL.Yman2016_All 0.76235 0.037982 0.56064 1.0850
           SL.gam.df6_All 0.66379 0.034945 0.45288 1.0304
             SL.loess_All 0.66989 0.034756 0.46484 1.0057
 SL.randomForest.ns40_All 0.67645 0.040639 0.50063 1.1415
          SL.polymars_All 0.67137 0.038651 0.47864 1.0449
> 
> # noro GI
> summary(CVnorogi)

Call:  
SuperLearner::CV.SuperLearner(Y = fitd$Y, X = fitX, V = V, family = family,  
    SL.library = SL.library, id = fitd$id, control = list(saveFitLibrary = TRUE)) 


Risk is based on: Mean Squared Error

All risk estimates are based on V =  10 

                Algorithm     Ave       se     Min    Max
            Super Learner 0.98442 0.045484 0.71990 1.4694
              Discrete SL 0.99516 0.046085 0.73109 1.4760
              SL.mean_All 1.24871 0.046211 0.96976 1.7636
               SL.glm_All 1.07429 0.044726 0.79830 1.5156
          SL.Yman2016_All 1.10590 0.063471 0.74654 1.5090
           SL.gam.df5_All 0.98240 0.045324 0.73109 1.4662
             SL.loess_All 0.98740 0.045635 0.73245 1.4668
 SL.randomForest.ns40_All 1.00323 0.048223 0.71884 1.5513
          SL.polymars_All 0.97898 0.045843 0.71669 1.4760
> 
> #-------------------------------
> # plot the CV Risk estimates
> #-------------------------------
> library(RColorBrewer)
> cbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
> cols <- cbPalette[c(1:4,6:8)]
> cols <- c(cols,brewer.pal(8,"Dark2")[3])
> 
> # pdf("~/dropbox/articles/antibody-curves/results/figs/haiti-cvSL-vsp5.pdf")
> # ab_plot_cvSL(CVvsp5,ylab="10-fold Cross-validated MSE",title="Giardia intestinalis VSP-5, Haiti",col=cols,ylim=c(0.4,1.4))
> # dev.off()
> # 
> # pdf("~/dropbox/articles/antibody-curves/results/figs/haiti-cvSL-ngii.pdf")
> # ab_plot_cvSL(CVnorogi,ylab="10-fold Cross-validated MSE",title="Norovirus GII.4 NO, Haiti",col=cols,ylim=c(0.4,1.4))
> # dev.off()
> 
> 
> #-------------------------------
> # plot the CV R2 estimates
> #-------------------------------
> 
> pdf("~/dropbox/articles/antibody-curves/results/figs/haiti-cvR2-vsp5.pdf")
> ab_plot_cvR2(CVvsp5,X=X,ylab="10-fold Cross-validated R-squared",title=expression(paste(italic('Giardia intestinalis')," VSP-5, Haiti")),col=cols,ylim=c(0,0.6))
  cvr2$Algorithm      r2   lower   upper
1  Super Learner  0.2226  0.1342  0.3019
2    Simple Mean  0.0000  0.0000  0.0000
3            GLM -0.0073 -0.0102 -0.0043
4       Yman2016  0.1082  0.0459  0.1664
5            GAM  0.2235  0.1416  0.2976
6          LOESS  0.2163  0.1415  0.2847
7  Random Forest  0.2087  0.1150  0.2925
8           MARS  0.2146  0.1132  0.3045
> dev.off()
null device 
          1 
> 
> pdf("~/dropbox/articles/antibody-curves/results/figs/haiti-cvR2-norogi.pdf")
> ab_plot_cvR2(CVnorogi,X=X,ylab="10-fold Cross-validated R-squared",title="Norovirus GI.4, Haiti",col=cols,ylim=c(0,0.6))
  cvr2$Algorithm     r2  lower  upper
1  Super Learner 0.2117 0.1637 0.2569
2    Simple Mean 0.0000 0.0000 0.0000
3            GLM 0.1397 0.1047 0.1733
4       Yman2016 0.1144 0.0700 0.1566
5            GAM 0.2133 0.1627 0.2608
6          LOESS 0.2093 0.1591 0.2564
7  Random Forest 0.1966 0.1486 0.2419
8           MARS 0.2160 0.1632 0.2655
> dev.off()
null device 
          1 
> 
> 
> 
> #-------------------------------
> # plot the age-antibody curves
> # for the full SL and the 
> # restricted SL library to
> # compare EYxa and EYx
> # setting the same seed to
> # get exactly the same splits
> # for cross-validation
> #-------------------------------
> 
> #-------------------------------
> # Giardia VSP-5
> #-------------------------------
> # full library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess","SL.randomForest","SL.polymars")
> set.seed(543221)
> SLvsp5full <- agecurveAb(Y=log10(d$vsp5+1),Age=d$agey,id=d$id,SL.library=SL.library,gamdf=2:6)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                           CV-Risk      Coef
SL.mean_All              0.8493298 0.0000000
SL.glm_All               0.8532755 0.0000000
SL.Yman2016_All          0.7547202 0.0000000
SL.gam.df6_All           0.6566628 0.3103219
SL.loess_All             0.6649110 0.0000000
SL.randomForest.ns40_All 0.6625821 0.3426620
SL.polymars_All          0.6562285 0.3470161
> 
> # restricted library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> set.seed(543221)
> SLvsp5res <- agecurveAb(Y=log10(d$vsp5+1),Age=d$agey,id=d$id,SL.library=SL.library,gamdf=2:6)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     0.8480593    0
SL.glm_All      0.8529603    0
SL.Yman2016_All 0.7567930    0
SL.gam.df6_All  0.6558446    1
SL.loess_All    0.6635907    0
> 
> 
> # plot age-dependent antibody curves and means for two SL libraries
> pdf("~/dropbox/articles/antibody-curves/results/figs/haiti2-cvSLcurves-vsp5.pdf",width=5,height=5)
> 
> ytics <- seq(0,5,by=1)
> xtics <- seq(0,12,by=2)
> 
> # EYax
> op <- par(mar=c(4,5,4,0)+0.1,xpd=T)
> plot(SLvsp5full$Age,SLvsp5full$Y,col=alpha("black",alpha=0.4),pch=16,cex=0.3,
+      ylim=c(0,5),ylab="",yaxt="n",
+      xlim=c(0,max(xtics)+1),xlab="",xaxt="n",
+      bty="n",las=1
+ )
> mtext("Luminex response (MFI-background)",side=2,line=3)
> # mtext("d",adj=1,line=2,at=-2,font=2,cex=1.75)
> # mtext("Intervention Period",adj=0,line=3,at=0,cex=1.5)
> mtext(expression(paste(italic('Giardia intestinalis')," VSP-5, Haiti")),side=3,line=2)
> mtext("Super learner ensemble prediction",side=3,line=0.5)
> mtext("Age, years",side=1,line=2.5)
> axis(2,at=0:5,labels=c(
+   expression(10^0),
+   expression(10^1),
+   expression(10^2),
+   expression(10^3),
+   expression(10^4),
+   expression(10^5)
+ ), las=1,cex.axis=1.25
+ )
> # segments(x0=min(xtics),x1=max(xtics),y0=ytics,lty=2,col="gray70")
> axis(1,at=xtics,cex.axis=1.5)
> lines(SLvsp5full$Age,SLvsp5full$pY,col=cols[1],lwd=1)
> lines(SLvsp5res$Age,SLvsp5res$pY,col=cols[2],lwd=1)
> 
> legend(x=12,y=0,xjust=1,yjust=0,legend=c("Full library","Restricted library"),lty=c(1,1), lwd=c(2,2),col=cols[1:2],cex=0.8,bty="n")
> par(op)
> 
> 
> dev.off()
null device 
          1 
> 
> 
> #-------------------------------
> # Noro GI.4
> #-------------------------------
> # full library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess","SL.randomForest","SL.polymars")
> set.seed(543221)
> SLnorofull <- agecurveAb(Y=log10(d$norogi+1),Age=d$agey,id=d$id,SL.library=SL.library,gamdf=2:6)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                          CV-Risk        Coef
SL.mean_All              1.261139 0.009871117
SL.glm_All               1.086722 0.007434244
SL.Yman2016_All          1.123168 0.000000000
SL.gam.df4_All           1.001469 0.602859122
SL.loess_All             1.005103 0.000000000
SL.randomForest.ns35_All 1.030963 0.231042144
SL.polymars_All          1.005450 0.148793374
> 
> # restricted library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> set.seed(543221)
> SLnorores <- agecurveAb(Y=log10(d$norogi+1),Age=d$agey,id=d$id,SL.library=SL.library,gamdf=2:6)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     1.2487555 0.00000000
SL.glm_All      1.0707539 0.02408339
SL.Yman2016_All 1.1074873 0.00000000
SL.gam.df5_All  0.9853065 0.97591661
SL.loess_All    0.9907584 0.00000000
> 
> 
> # plot age-dependent antibody curves and means for two SL libraries
> pdf("~/dropbox/articles/antibody-curves/results/figs/haiti2-cvSLcurves-norogi.pdf",width=5,height=5)
> 
> ytics <- seq(0,5,by=1)
> xtics <- seq(0,12,by=2)
> 
> # EYax
> op <- par(mar=c(4,5,4,0)+0.1,xpd=T)
> plot(SLnorofull$Age,SLnorofull$Y,col=alpha("black",alpha=0.4),pch=16,cex=0.3,
+      ylim=c(0,5),ylab="",yaxt="n",
+      xlim=c(0,max(xtics)+1),xlab="",xaxt="n",
+      bty="n",las=1
+ )
> mtext("Luminex response (MFI-background)",side=2,line=3)
> # mtext("d",adj=1,line=2,at=-2,font=2,cex=1.75)
> # mtext("Intervention Period",adj=0,line=3,at=0,cex=1.5)
> mtext("Norovirus GI.4, Haiti",side=3,line=2)
> mtext("Super learner ensemble prediction",side=3,line=0.5)
> mtext("Age, years",side=1,line=2.5)
> axis(2,at=0:5,labels=c(
+   expression(10^0),
+   expression(10^1),
+   expression(10^2),
+   expression(10^3),
+   expression(10^4),
+   expression(10^5)
+ ), las=1,cex.axis=1.25
+ )
> # segments(x0=min(xtics),x1=max(xtics),y0=ytics,lty=2,col="gray70")
> axis(1,at=xtics,cex.axis=1.5)
> lines(SLnorofull$Age,SLnorofull$pY,col=cols[1],lwd=1)
> lines(SLnorores$Age,SLnorores$pY,col=cols[2],lwd=1)
> 
> legend(x=12,y=0,xjust=1,yjust=0,legend=c("Full library","Restricted library"),lty=c(1,1), lwd=c(2,2),col=cols[1:2],cex=0.8,bty="n")
> par(op)
> 
> 
> dev.off()
null device 
          1 
> 
> 
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
299.690   2.969 312.125 
