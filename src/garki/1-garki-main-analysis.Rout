
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 2-garki-main-analysis.R
> #
> # Calculate age-adjusted mean
> # IFAT antibody titres by
> # treatment group and survey round
> #
> # version 2 (11 oct 2015)
> # drew on common source code for
> # estimation
> # migrated everything to git
> #
> # version 2 (19 oct 2015)
> # update pointer to base functions
> #
> # version 1 (26 sep 2015)
> #-------------------------------
> 
> 
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-15
Package created on 2014-07-16

Use SuperLearnerNews() to see changes from previous versions and latest news

> library(tmle)
Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> 
> # source the base functions for
> # SL fits of age-antibody curves
> # and TMLE estimates of mean differences
> source("~/SLAbcurves/src/SLAb-curve.R")
> source("~/SLAbcurves/src/SLAb-tmle.R")
> source("~/SLAbcurves/src/SLAb-cvRF.R")
> 
> #-------------------------------
> # load the serology dataset
> #-------------------------------
> d <- read.csv("~/dropbox/garki/data/final/garki-sero.csv")
> 
> d$mdate <- as.Date(d$mdate,"%d %b %Y")
> 
> 
> # add 2 control village names
> d$vname <- factor(d$vname,levels=c(levels(d$vname),"Nabanawa","Ajura"))
> d$vname[d$village==552] <- "Nabanawa"
> d$vname[d$village==553] <- "Ajura"
> d$vname <- factor(d$vname)
> 
> #-------------------------------
> # Serological survey timing:
> # 1-2 : pre-intervention
> # 3-5 : intervention period
> # 6-8 : post-intervention
> #-------------------------------
> 
> # subset the data by group and survey round for convenience
> # combine control measures by phase of the study
> d.c12  <- d[d$tr=="Control" & (d$serosvy==1|d$serosvy==2),]
> d.c345 <- d[d$tr=="Control" & (d$serosvy==3|d$serosvy==4|d$serosvy==5),]
> d.c78  <- d[d$tr=="Control" & (d$serosvy==7|d$serosvy==8),]
> 
> d.tr1 <- d[d$tr=="Intervention" & d$serosvy==1,]
> d.tr2 <- d[d$tr=="Intervention" & d$serosvy==2,]
> d.tr3 <- d[d$tr=="Intervention" & d$serosvy==3,]
> d.tr4 <- d[d$tr=="Intervention" & d$serosvy==4,]
> d.tr5 <- d[d$tr=="Intervention" & d$serosvy==5,]
> d.tr6 <- d[d$tr=="Intervention" & d$serosvy==6,]
> d.tr7 <- d[d$tr=="Intervention" & d$serosvy==7,]
> d.tr8 <- d[d$tr=="Intervention" & d$serosvy==8,]
> 
> #-------------------------------
> # Step 1: 
> # Age-specific antibody response
> # curves
> #-------------------------------
> 
> set.seed(2352374)
> 
> # Pre-intervention period fitted curves
> p.c12 <- SLAb.curve(Y=log10(d.c12$ifatpftitre+1),Age=d.c12$ageyrs,id=d.c12$id)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.
Loading required package: arm
Loading required package: MASS
Loading required package: Matrix
Loading required package: lme4
Loading required package: Rcpp

arm (Version 1.8-5, built: 2015-05-13)

Working directory is /Users/benarnold/SLAbcurves/src/garki

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: glmnet
Loaded glmnet 2.0-2


Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk     Coef
SL.mean_All              0.2978141 0.000000
SL.glm_All               0.2842381 0.000000
SL.bayesglm_All          0.2842381 0.000000
SL.loess_All             0.2318962 0.875182
SL.gam_All               0.2630435 0.000000
SL.gam.3_All             0.2507294 0.000000
SL.glmnet_All            0.2842105 0.000000
SL.randomForest.ns25_All 0.2482685 0.124818
There were 33 warnings (use warnings() to see them)
> p.tr1 <- SLAb.curve(Y=log10(d.tr1$ifatpftitre+1),Age=d.tr1$ageyrs,id=d.tr1$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.2502153 0.1239357
SL.glm_All               0.2488674 0.0000000
SL.bayesglm_All          0.2488673 0.0000000
SL.loess_All             0.2420271 0.7701927
SL.gam_All               0.2454747 0.0000000
SL.gam.3_All             0.2439962 0.0000000
SL.glmnet_All            0.2488606 0.0000000
SL.randomForest.ns35_All 0.2433822 0.1058716
There were 33 warnings (use warnings() to see them)
> p.tr2 <- SLAb.curve(Y=log10(d.tr2$ifatpftitre+1),Age=d.tr2$ageyrs,id=d.tr2$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.4167728 0.0000000
SL.glm_All               0.3943801 0.0000000
SL.bayesglm_All          0.3943800 0.0000000
SL.loess_All             0.2986833 0.7914462
SL.gam_All               0.3522498 0.0000000
SL.gam.3_All             0.3283913 0.0000000
SL.glmnet_All            0.3944576 0.0000000
SL.randomForest.ns30_All 0.3225122 0.2085538
There were 33 warnings (use warnings() to see them)
> 
> # Intervention phase fitted curves
> p.c345 <- SLAb.curve(Y=log10(d.c345$ifatpftitre+1),Age=d.c345$ageyrs,id=d.c345$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.6574936 0.0000000
SL.glm_All               0.6171027 0.0000000
SL.bayesglm_All          0.6171026 0.0000000
SL.loess_All             0.4602784 0.6911972
SL.gam_All               0.5449136 0.0000000
SL.gam.3_All             0.5092408 0.0000000
SL.glmnet_All            0.6170733 0.0000000
SL.randomForest.ns15_All 0.4856384 0.3088028
There were 33 warnings (use warnings() to see them)
> p.tr3 <- SLAb.curve(Y=log10(d.tr3$ifatpftitre+1),Age=d.tr3$ageyrs,id=d.tr3$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.8405860 0.0000000
SL.glm_All               0.6731793 0.0000000
SL.bayesglm_All          0.6731792 0.0000000
SL.loess_All             0.4508781 0.7759159
SL.gam_All               0.5467532 0.0000000
SL.gam.3_All             0.4941561 0.0000000
SL.glmnet_All            0.6732689 0.0000000
SL.randomForest.ns15_All 0.5212250 0.2240841
There were 33 warnings (use warnings() to see them)
> p.tr4 <- SLAb.curve(Y=log10(d.tr4$ifatpftitre+1),Age=d.tr4$ageyrs,id=d.tr4$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.2324809 0.0000000
SL.glm_All               0.9280539 0.0000000
SL.bayesglm_All          0.9280538 0.0000000
SL.loess_All             0.5894637 0.7558143
SL.gam_All               0.7145003 0.0000000
SL.gam.3_All             0.6349192 0.0000000
SL.glmnet_All            0.9279418 0.0000000
SL.randomForest.ns30_All 0.7056561 0.2441857
There were 33 warnings (use warnings() to see them)
> p.tr5 <- SLAb.curve(Y=log10(d.tr5$ifatpftitre+1),Age=d.tr5$ageyrs,id=d.tr5$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.3122630 0.0000000
SL.glm_All               0.8819786 0.0000000
SL.bayesglm_All          0.8819786 0.0000000
SL.loess_All             0.5241792 0.8658147
SL.gam_All               0.6452970 0.0000000
SL.gam.3_All             0.5716995 0.0000000
SL.glmnet_All            0.8819378 0.0000000
SL.randomForest.ns15_All 0.7000204 0.1341853
There were 33 warnings (use warnings() to see them)
> 
> # post intervention period fitted curves
> # note: no control measurement in round 6
> p.c78 <- SLAb.curve(Y=log10(d.c78$ifatpftitre+1),Age=d.c78$ageyrs,id=d.c78$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk       Coef
SL.mean_All              0.5157798 0.00000000
SL.glm_All               0.4839900 0.00000000
SL.bayesglm_All          0.4839900 0.00000000
SL.loess_All             0.3558133 0.94522419
SL.gam_All               0.4318337 0.00000000
SL.gam.3_All             0.4073771 0.00000000
SL.glmnet_All            0.4838457 0.00000000
SL.randomForest.ns25_All 0.3961393 0.05477581
There were 33 warnings (use warnings() to see them)
> p.tr6 <- SLAb.curve(Y=log10(d.tr6$ifatpftitre+1),Age=d.tr6$ageyrs,id=d.tr6$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk       Coef
SL.mean_All              1.4414395 0.00000000
SL.glm_All               0.9336630 0.00000000
SL.bayesglm_All          0.9336629 0.00000000
SL.loess_All             0.4760533 0.91187978
SL.gam_All               0.6336506 0.00000000
SL.gam.3_All             0.5380278 0.00000000
SL.glmnet_All            0.9335084 0.00000000
SL.randomForest.ns15_All 0.7019469 0.08812022
There were 33 warnings (use warnings() to see them)
> p.tr7 <- SLAb.curve(Y=log10(d.tr7$ifatpftitre+1),Age=d.tr7$ageyrs,id=d.tr7$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk        Coef
SL.mean_All              1.4822914 0.000000000
SL.glm_All               1.2234453 0.000000000
SL.bayesglm_All          1.2234451 0.000000000
SL.loess_All             0.8424117 0.904712290
SL.gam_All               0.9913538 0.000000000
SL.gam.3_All             0.9037755 0.002535543
SL.glmnet_All            1.2231909 0.000000000
SL.randomForest.ns15_All 1.0042698 0.092752167
There were 33 warnings (use warnings() to see them)
> p.tr8 <- SLAb.curve(Y=log10(d.tr8$ifatpftitre+1),Age=d.tr8$ageyrs,id=d.tr8$id)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk     Coef
SL.mean_All              1.0927350 0.000000
SL.glm_All               0.9625744 0.000000
SL.bayesglm_All          0.9625740 0.000000
SL.loess_All             0.7504636 0.749061
SL.gam_All               0.8341089 0.000000
SL.gam.3_All             0.7878165 0.000000
SL.glmnet_All            0.9621002 0.000000
SL.randomForest.ns40_All 0.8069173 0.250939
There were 33 warnings (use warnings() to see them)
> 
> 
> #-------------------------------
> # Step 2: 
> # Calculate age-adjusted means
> # and difference in means
> # by treatment group and 
> # survey round
> #-------------------------------
> 
> # create a numeric 0/1 treatment variable
> d$tr01 <- ifelse(d$tr=="Control",0,1)
> 
> 
> set.seed(5463452)
> 
> ## Control Villages 
> # Nabanawa + Ajura
> # (no measurement in survey round 6)
> mu.c <- sapply(c(1:5,7:8),function(x) SLAb.tmle(
+ 	Y=log10(d$ifatpftitre[d$tr=="Control" & d$serosvy==x]+1),
+ 	Age=d$ageyrs[d$tr=="Control" & d$serosvy==x],
+ 	id=d$id[d$tr=="Control" & d$serosvy==x]
+ 	)
+ )
 Population Mean
   Parameter Estimate:  3.2516
   Estimated Variance:  0.00091766
              p-value:  <2e-16
    95% Conf Interval: (3.1923, 3.311) 
 Population Mean
   Parameter Estimate:  3.1038
   Estimated Variance:  0.0010076
              p-value:  <2e-16
    95% Conf Interval: (3.0416, 3.166) 
 Population Mean
   Parameter Estimate:  3.151
   Estimated Variance:  0.0015615
              p-value:  <2e-16
    95% Conf Interval: (3.0736, 3.2285) 
 Population Mean
   Parameter Estimate:  2.8615
   Estimated Variance:  0.0028713
              p-value:  <2e-16
    95% Conf Interval: (2.7564, 2.9665) 
 Population Mean
   Parameter Estimate:  3.2875
   Estimated Variance:  0.0018599
              p-value:  <2e-16
    95% Conf Interval: (3.2029, 3.372) 
 Population Mean
   Parameter Estimate:  3.1707
   Estimated Variance:  0.0016207
              p-value:  <2e-16
    95% Conf Interval: (3.0917, 3.2496) 
 Population Mean
   Parameter Estimate:  2.8858
   Estimated Variance:  0.0031013
              p-value:  <2e-16
    95% Conf Interval: (2.7767, 2.995) 
> 
> ### Intervention Villages - Spraying (Propoxur) + MDA
> mu.i <- sapply(1:8,function(x) SLAb.tmle(
+ 	Y=log10(d$ifatpftitre[d$tr=="Intervention" & d$serosvy==x]+1),
+ 	Age=d$ageyrs[d$tr=="Intervention" & d$serosvy==x],
+ 	id=d$id[d$tr=="Intervention" & d$serosvy==x]
+ 	)
+ )
 Population Mean
   Parameter Estimate:  3.3467
   Estimated Variance:  0.00046242
              p-value:  <2e-16
    95% Conf Interval: (3.3045, 3.3888) 
 Population Mean
   Parameter Estimate:  3.2201
   Estimated Variance:  0.00087259
              p-value:  <2e-16
    95% Conf Interval: (3.1622, 3.278) 
 Population Mean
   Parameter Estimate:  2.691
   Estimated Variance:  0.0015959
              p-value:  <2e-16
    95% Conf Interval: (2.6127, 2.7693) 
 Population Mean
   Parameter Estimate:  2.2421
   Estimated Variance:  0.0023573
              p-value:  <2e-16
    95% Conf Interval: (2.147, 2.3373) 
 Population Mean
   Parameter Estimate:  1.8234
   Estimated Variance:  0.0023796
              p-value:  <2e-16
    95% Conf Interval: (1.7278, 1.919) 
 Population Mean
   Parameter Estimate:  1.6485
   Estimated Variance:  0.0027372
              p-value:  <2e-16
    95% Conf Interval: (1.546, 1.7511) 
 Population Mean
   Parameter Estimate:  2.5056
   Estimated Variance:  0.0026892
              p-value:  <2e-16
    95% Conf Interval: (2.4039, 2.6072) 
 Population Mean
   Parameter Estimate:  2.4864
   Estimated Variance:  0.002998
              p-value:  <2e-16
    95% Conf Interval: (2.3791, 2.5938) 
> 
> 
> #-------------------------------
> # Estimate difference between
> # control and intervention villages in
> # IFAT P. falciparm
> # titre by survey round
> #-------------------------------
> 
> set.seed(79287234)
> diff.psi <- sapply(c(1:5,7:8),function(x) SLAb.tmle(
+ 	Y=log10(d$ifatpftitre[d$serosvy==x]+1),
+ 	Age=d$ageyrs[d$serosvy==x],
+ 	id=d$id[d$serosvy==x],
+ 	X=d$tr01[d$serosvy==x],
+ 	diff=TRUE
+ 	)
+ )
 Additive Effect
   Parameter Estimate:  0.081334
   Estimated Variance:  0.0012347
              p-value:  0.020632
    95% Conf Interval: (0.012462, 0.15021) 
 Additive Effect
   Parameter Estimate:  0.10317
   Estimated Variance:  0.0011819
              p-value:  0.0026926
    95% Conf Interval: (0.035783, 0.17055) 
 Additive Effect
   Parameter Estimate:  -0.44862
   Estimated Variance:  0.0020376
              p-value:  <2e-16
    95% Conf Interval: (-0.5371, -0.36015) 
 Additive Effect
   Parameter Estimate:  -0.58993
   Estimated Variance:  0.0026956
              p-value:  <2e-16
    95% Conf Interval: (-0.6917, -0.48817) 
 Additive Effect
   Parameter Estimate:  -1.3934
   Estimated Variance:  0.0025709
              p-value:  <2e-16
    95% Conf Interval: (-1.4928, -1.294) 
 Additive Effect
   Parameter Estimate:  -0.63152
   Estimated Variance:  0.0029162
              p-value:  <2e-16
    95% Conf Interval: (-0.73736, -0.52567) 
 Additive Effect
   Parameter Estimate:  -0.3863
   Estimated Variance:  0.0041153
              p-value:  1.7258e-09
    95% Conf Interval: (-0.51203, -0.26056) 
> 
> 
> # P-values for differences in means, with Bonferroni correction for 7 tests
> sprintf("%1.4f",unlist(diff.psi[5,])*7)
[1] "0.1444" "0.0188" "0.0000" "0.0000" "0.0000" "0.0000" "0.0000"
> 
> #-------------------------------
> # save down the results
> #-------------------------------
> save.image("~/SLAbcurves/results/raw/garki-main-analysis.RData")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
299.463   4.955 306.777 
