
R version 3.2.3 (2015-12-10) -- "Wooden Christmas-Tree"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 6-garki-wet-dry-analysis.R
> #
> # Calculate age-adjusted mean
> # IFA Pf antibody titres by
> # treatment group and wet/dry season
> # in the control villages
> #
> #-------------------------------
> 
> 
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-19
Package created on 2016-02-02

> library(tmle)
Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody measurements.
(Version 0.1.1)

Check github.com/ben-arnold/tmleAb for the most current version
(we have plans for some useful additions)


> 
> 
> #-------------------------------
> # load the serology dataset
> #-------------------------------
> # d <- read.csv("~/dropbox/articles/antibody-curves/data/garki/final/garki-sero.csv")
> 
> d <- garki_sero
> 
> d$mdate <- as.Date(d$mdate,"%d %b %Y")
> 
> # subset to observations with non-missing Ab + age measures
> d <- subset(d,!is.na(d$ifatpftitre) & !is.na(d$ageyrs))
> 
> # add 2 control village names
> d$vname <- factor(d$vname,levels=c(levels(d$vname),"Nabanawa","Ajura"))
> d$vname[d$village==552] <- "Nabanawa"
> d$vname[d$village==553] <- "Ajura"
> d$vname <- factor(d$vname)
> 
> # set sex to factor
> d$sex <- as.factor(d$sex)
> 
> # for age exactly equal to 0, set it equal to 0.001
> # to prevent the Yman 2016 model from blowing up
> # (model is undefined at age=0)
> d$ageyrs[d$ageyrs<=0] <- 0.001
> 
> # factor for child age group categories
> d$agecat <- cut(d$ageyrs,c(-1,5,10,15),labels=c("0-4","5-9","10-14"))
> 
> # create a numeric 0/1 treatment variable
> d$tr01 <- ifelse(d$tr=="Control",0,1)
> 
> # create a numeric 0/1 wet season variable
> d$wet <- ifelse(d$wetseason=="Wet",1,0)
> 
> 
> #-------------------------------
> # subset the data to the pre-
> # intervention period (svy 1-2)
> #-------------------------------
> # subset the data by group and survey round for convenience
> d.c1  <- d[d$tr=="Control" & (d$serosvy==1),]
> d.c2  <- d[d$tr=="Control" & (d$serosvy==2),]
> d.c3  <- d[d$tr=="Control" & (d$serosvy==3),]
> d.c4  <- d[d$tr=="Control" & (d$serosvy==4),]
> d.c5  <- d[d$tr=="Control" & (d$serosvy==5),]
> d.c7  <- d[d$tr=="Control" & (d$serosvy==7),]
> d.c8  <- d[d$tr=="Control" & (d$serosvy==8),]
> 
> d.tr1 <- d[d$tr=="Intervention" & d$serosvy==1,]
> d.tr2 <- d[d$tr=="Intervention" & d$serosvy==2,]
> 
> # all villages combined (pre-intervention)
> d.1 <- d[d$serosvy==1,]
> d.2 <- d[d$serosvy==2,]
> 
> #-------------------------------
> # Step 1:
> # Age-specific antibody response
> # curves
> #-------------------------------
> 
> # model / algorithm library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> 
> set.seed(35234)
> 
> # Pre-intervention period fitted curves
> # stratified by season, averaged over control + intervention
> p.1 <-agecurveAb(Y=log10(d.1$ifatpftitre+1),Age=d.1$ageyrs,id=d.1$id,SL.library=SL.library)
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12


Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     0.2661021 0.00000000
SL.glm_All      0.2615776 0.00000000
SL.Yman2016_All 0.2626006 0.08455109
SL.gam.df8_All  0.2476886 0.66003960
SL.loess_All    0.2479231 0.25540931
There were 31 warnings (use warnings() to see them)
> p.2 <-agecurveAb(Y=log10(d.2$ifatpftitre+1),Age=d.2$ageyrs,id=d.2$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     0.3738469    0
SL.glm_All      0.3516063    0
SL.Yman2016_All 0.3458293    0
SL.gam.df9_All  0.2514997    1
SL.loess_All    0.2547673    0
> 
> # surveys 1-2 stratified by intervention assignment and season
> # doing this extra leg work to confirm that there
> # is no difference between assignment
> p.c1 <- agecurveAb(Y=log10(d.c1$ifatpftitre+1),Age=d.c1$ageyrs,id=d.c1$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.2880887 0.000000000
SL.glm_All      0.2791075 0.005303799
SL.Yman2016_All 0.2891488 0.156002337
SL.gam.df5_All  0.2612722 0.564347965
SL.loess_All    0.2614882 0.274345898
> p.c2 <- agecurveAb(Y=log10(d.c2$ifatpftitre+1),Age=d.c2$ageyrs,id=d.c2$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.2971689 0.000000000
SL.glm_All      0.2794002 0.000000000
SL.Yman2016_All 0.2370187 0.006583361
SL.gam.df9_All  0.1832303 0.993416639
SL.loess_All    0.1865402 0.000000000
> p.tr1 <- agecurveAb(Y=log10(d.tr1$ifatpftitre+1),Age=d.tr1$ageyrs,id=d.tr1$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     0.2494100 0.00000000
SL.glm_All      0.2472787 0.01594004
SL.Yman2016_All 0.2430513 0.30092974
SL.gam.df10_All 0.2405085 0.00000000
SL.loess_All    0.2392694 0.68313022
Warning messages:
1: In log(Aa) : NaNs produced
2: In log(Aa) : NaNs produced
3: In log(Aa) : NaNs produced
> p.tr2 <- agecurveAb(Y=log10(d.tr2$ifatpftitre+1),Age=d.tr2$ageyrs,id=d.tr2$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk        Coef
SL.mean_All     0.4181622 0.005213074
SL.glm_All      0.3950122 0.000000000
SL.Yman2016_All 0.4272955 0.000000000
SL.gam.df10_All 0.2944475 0.988977767
SL.loess_All    0.2972834 0.005809159
> 
> # control village fitted curves for surveys 3,4,5,7,8 (wet, dry, wet, wet, dry)
> p.c3 <- agecurveAb(Y=log10(d.c3$ifatpftitre+1),Age=d.c3$ageyrs,id=d.c3$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk         Coef
SL.mean_All     0.4870776 0.0003704664
SL.glm_All      0.4701449 0.0000000000
SL.Yman2016_All 0.4442702 0.0000000000
SL.gam.df10_All 0.3748794 0.7525856914
SL.loess_All    0.3764414 0.2470438423
> p.c4 <- agecurveAb(Y=log10(d.c4$ifatpftitre+1),Age=d.c4$ageyrs,id=d.c4$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk Coef
SL.mean_All     0.8517778    0
SL.glm_All      0.7862165    0
SL.Yman2016_All 0.6979363    0
SL.gam.df10_All 0.4707409    1
SL.loess_All    0.4760930    0
> p.c5 <- agecurveAb(Y=log10(d.c5$ifatpftitre+1),Age=d.c5$ageyrs,id=d.c5$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     0.5626031 0.03582382
SL.glm_All      0.5274646 0.00000000
SL.Yman2016_All 0.5111659 0.00000000
SL.gam.df10_All 0.4194127 0.78839167
SL.loess_All    0.4219061 0.17578451
> p.c7 <- agecurveAb(Y=log10(d.c7$ifatpftitre+1),Age=d.c7$ageyrs,id=d.c7$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk       Coef
SL.mean_All     0.4471979 0.00000000
SL.glm_All      0.4203040 0.00000000
SL.Yman2016_All 0.3765781 0.00000000
SL.gam.df9_All  0.3098226 0.93239398
SL.loess_All    0.3121482 0.06760602
> p.c8 <- agecurveAb(Y=log10(d.c8$ifatpftitre+1),Age=d.c8$ageyrs,id=d.c8$id,SL.library=SL.library)

Summary of SuperLearner cross validated risk and 
weights for algorithms included in the library:

                  CV-Risk      Coef
SL.mean_All     0.5715095 0.0188026
SL.glm_All      0.5410892 0.0000000
SL.Yman2016_All 0.5484126 0.0000000
SL.gam.df9_All  0.4064500 0.5942174
SL.loess_All    0.4078289 0.3869800
> 
> 
> 
> 
> # temp code to look at curves
> # lo <- layout(mat=matrix(1:3,nrow=3,ncol=1))
> # cols <- rainbow(n=7,v=0.7)
> # plot(p.c1$pYframe$Age,p.c1$pYframe$pY,type="l",bty="n",ylim=c(1,4),xlim=c(0,15),col=cols[1])
> # lines(p.c2$pYframe$Age,p.c2$pYframe$pY,col=cols[2])
> #
> # plot(p.c3$pYframe$Age,p.c3$pYframe$pY,type="l",bty="n",ylim=c(1,4),xlim=c(0,15),col=cols[3])
> # lines(p.c4$pYframe$Age,p.c4$pYframe$pY,col=cols[4])
> # lines(p.c5$pYframe$Age,p.c5$pYframe$pY,col=cols[5])
> #
> # plot(p.c7$pYframe$Age,p.c7$pYframe$pY,type="l",bty="n",ylim=c(1,4),xlim=c(0,15),col=cols[6])
> # lines(p.c8$pYframe$Age,p.c8$pYframe$pY,col=cols[7])
> 
> 
> 
> #-------------------------------
> # Step 2:
> # Calculate age-adjusted means
> # and difference in means
> # by wet/dry season survey
> #-------------------------------
> set.seed(8969754)
> 
> ## All villages, rounds 1-2
> mu12.0to4 <- sapply(c(1:2),function(x) tmleAb(
+ 	Y=log10(d$ifatpftitre[d$agecat=="0-4" & d$serosvy==x]+1),
+ 	W=data.frame(Age=d$ageyrs[d$agecat=="0-4" & d$serosvy==x]),
+ 	id=d$id[d$agecat=="0-4" & d$serosvy==x],
+ 	SL.library=SL.library
+ 	)[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  3.1776
   Estimated Variance:  0.001312
              p-value:  <2e-16
    95% Conf Interval: (3.1066, 3.2486) 
 Population Mean
   Parameter Estimate:  2.8332
   Estimated Variance:  0.0021233
              p-value:  <2e-16
    95% Conf Interval: (2.7428, 2.9235) 
> mu12.5to9 <- sapply(c(1:2),function(x) tmleAb(
+   Y=log10(d$ifatpftitre[d$agecat=="5-9" & d$serosvy==x]+1),
+   W=data.frame(Age=d$ageyrs[d$agecat=="5-9" & d$serosvy==x]),
+   id=d$id[d$agecat=="5-9" & d$serosvy==x],
+   SL.library=SL.library
+   )[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  3.3519
   Estimated Variance:  0.00081663
              p-value:  <2e-16
    95% Conf Interval: (3.2959, 3.4079) 
 Population Mean
   Parameter Estimate:  3.3658
   Estimated Variance:  0.00076147
              p-value:  <2e-16
    95% Conf Interval: (3.3117, 3.4199) 
> mu12.10to14 <- sapply(c(1:2),function(x) tmleAb(
+   Y=log10(d$ifatpftitre[d$agecat=="10-14" & d$serosvy==x]+1),
+   W=data.frame(Age=d$ageyrs[d$agecat=="10-14" & d$serosvy==x]),
+   id=d$id[d$agecat=="10-14" & d$serosvy==x],
+   SL.library=SL.library
+   )[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  3.4451
   Estimated Variance:  0.0030387
              p-value:  <2e-16
    95% Conf Interval: (3.337, 3.5531) 
 Population Mean
   Parameter Estimate:  3.4274
   Estimated Variance:  0.0020051
              p-value:  <2e-16
    95% Conf Interval: (3.3396, 3.5151) 
> 
> 
> # Control villages only, round 3-5,7,8
> mu.0to4 <- sapply(c(1:5,7,8),function(x) tmleAb(
+   Y=log10(d$ifatpftitre[d$agecat=="0-4" & d$tr=="Control" & d$serosvy==x]+1),
+   W=data.frame(Age=d$ageyrs[d$agecat=="0-4" & d$tr=="Control" & d$serosvy==x]),
+   id=d$id[d$agecat=="0-4" & d$tr=="Control" & d$serosvy==x],
+   SL.library=SL.library
+   )[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  3.0752
   Estimated Variance:  0.0033687
              p-value:  <2e-16
    95% Conf Interval: (2.9615, 3.189) 
 Population Mean
   Parameter Estimate:  2.7841
   Estimated Variance:  0.0039992
              p-value:  <2e-16
    95% Conf Interval: (2.6602, 2.9081) 
 Population Mean
   Parameter Estimate:  2.8161
   Estimated Variance:  0.0074587
              p-value:  <2e-16
    95% Conf Interval: (2.6468, 2.9854) 
 Population Mean
   Parameter Estimate:  2.2409
   Estimated Variance:  0.012298
              p-value:  <2e-16
    95% Conf Interval: (2.0235, 2.4583) 
 Population Mean
   Parameter Estimate:  2.9113
   Estimated Variance:  0.0094135
              p-value:  <2e-16
    95% Conf Interval: (2.7211, 3.1015) 
 Population Mean
   Parameter Estimate:  2.836
   Estimated Variance:  0.0069216
              p-value:  <2e-16
    95% Conf Interval: (2.6729, 2.9991) 
 Population Mean
   Parameter Estimate:  2.5146
   Estimated Variance:  0.01234
              p-value:  <2e-16
    95% Conf Interval: (2.2969, 2.7324) 
> mu.5to9 <- sapply(c(1:5,7,8),function(x) tmleAb(
+   Y=log10(d$ifatpftitre[d$agecat=="5-9" & d$tr=="Control" & d$serosvy==x]+1),
+   W=data.frame(Age=d$ageyrs[d$agecat=="5-9" & d$tr=="Control" & d$serosvy==x]),
+   id=d$id[d$agecat=="5-9" & d$tr=="Control" & d$serosvy==x],
+   SL.library=SL.library
+   )[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  3.3008
   Estimated Variance:  0.0025741
              p-value:  <2e-16
    95% Conf Interval: (3.2013, 3.4002) 
 Population Mean
   Parameter Estimate:  3.2921
   Estimated Variance:  0.0015312
              p-value:  <2e-16
    95% Conf Interval: (3.2154, 3.3688) 
 Population Mean
   Parameter Estimate:  3.344
   Estimated Variance:  0.0018292
              p-value:  <2e-16
    95% Conf Interval: (3.2602, 3.4279) 
 Population Mean
   Parameter Estimate:  3.215
   Estimated Variance:  0.0021574
              p-value:  <2e-16
    95% Conf Interval: (3.124, 3.3061) 
 Population Mean
   Parameter Estimate:  3.4433
   Estimated Variance:  0.0017452
              p-value:  <2e-16
    95% Conf Interval: (3.3615, 3.5252) 
 Population Mean
   Parameter Estimate:  3.3498
   Estimated Variance:  0.0024387
              p-value:  <2e-16
    95% Conf Interval: (3.253, 3.4466) 
 Population Mean
   Parameter Estimate:  3.1374
   Estimated Variance:  0.0032847
              p-value:  <2e-16
    95% Conf Interval: (3.0251, 3.2497) 
> mu.10to14 <- sapply(c(1:5,7,8),function(x) tmleAb(
+   Y=log10(d$ifatpftitre[d$agecat=="10-14" & d$serosvy==x]+1),
+   W=data.frame(Age=d$ageyrs[d$agecat=="10-14" & d$serosvy==x]),
+   id=d$id[d$agecat=="10-14" & d$serosvy==x],
+   SL.library=SL.library
+   )[c("psi","se","lb","ub","p")]
+ )
 Population Mean
   Parameter Estimate:  3.4451
   Estimated Variance:  0.0030387
              p-value:  <2e-16
    95% Conf Interval: (3.337, 3.5531) 
 Population Mean
   Parameter Estimate:  3.4274
   Estimated Variance:  0.0020051
              p-value:  <2e-16
    95% Conf Interval: (3.3396, 3.5151) 
 Population Mean
   Parameter Estimate:  3.1955
   Estimated Variance:  0.0027506
              p-value:  <2e-16
    95% Conf Interval: (3.0927, 3.2983) 
 Population Mean
   Parameter Estimate:  3.0909
   Estimated Variance:  0.0032619
              p-value:  <2e-16
    95% Conf Interval: (2.979, 3.2029) 
 Population Mean
   Parameter Estimate:  2.9181
   Estimated Variance:  0.0053038
              p-value:  <2e-16
    95% Conf Interval: (2.7753, 3.0608) 
 Population Mean
   Parameter Estimate:  3.166
   Estimated Variance:  0.0035064
              p-value:  <2e-16
    95% Conf Interval: (3.0499, 3.282) 
 Population Mean
   Parameter Estimate:  3.1131
   Estimated Variance:  0.0027514
              p-value:  <2e-16
    95% Conf Interval: (3.0103, 3.2159) 
> 
> #-------------------------------
> # Estimate difference between
> # control and intervention villages in
> # IFA P. falciparum
> # titre by survey round
> # to ensure it is reasonable to
> # pool them in rounds 1-2
> #-------------------------------
> 
> set.seed(8234234)
> ages <- levels(d$agecat)
> tc.diff.psi1 <- sapply(ages,function(x) tmleAb(
+ 	Y=log10(d$ifatpftitre[d$serosvy==1 & d$agecat==x]+1),
+ 	X=d$tr01[d$serosvy==1 & d$agecat==x],
+ 	W=data.frame(Age=d$ageyrs[d$serosvy==1 & d$agecat==x]),
+ 	id=d$id[d$serosvy==1 & d$agecat==x],
+ 	SL.library=SL.library
+ 	)
+ )
 Additive Effect
   Parameter Estimate:  0.54755
   Estimated Variance:  0.0012978
              p-value:  <2e-16
    95% Conf Interval: (0.47694, 0.61816) 
 Additive Effect
   Parameter Estimate:  0.82052
   Estimated Variance:  0.00096522
              p-value:  <2e-16
    95% Conf Interval: (0.75962, 0.88141) 
 Additive Effect
   Parameter Estimate:  0.19661
   Estimated Variance:  0.0028845
              p-value:  0.00025148
    95% Conf Interval: (0.091343, 0.30188) 
> tc.diff.psi2 <- sapply(ages,function(x) tmleAb(
+   Y=log10(d$ifatpftitre[d$serosvy==2 & d$agecat==x]+1),
+   X=d$tr01[d$serosvy==2 & d$agecat==x],
+   W=data.frame(Age=d$ageyrs[d$serosvy==2 & d$agecat==x]),
+   id=d$id[d$serosvy==2 & d$agecat==x],
+   SL.library=SL.library
+   )
+ )
 Additive Effect
   Parameter Estimate:  0.04365
   Estimated Variance:  0.0013614
              p-value:  0.2368
    95% Conf Interval: (-0.028669, 0.11597) 
 Additive Effect
   Parameter Estimate:  0.89606
   Estimated Variance:  0.00089039
              p-value:  <2e-16
    95% Conf Interval: (0.83757, 0.95454) 
 Additive Effect
   Parameter Estimate:  0.77476
   Estimated Variance:  0.0020362
              p-value:  <2e-16
    95% Conf Interval: (0.68632, 0.86321) 
> 
> # P-values for differences in means, with Bonferroni correction for 6 tests
> sprintf("%1.4f",unlist(tc.diff.psi1[5,])*6)
[1] "0.0000" "0.0000" "0.0015"
> sprintf("%1.4f",unlist(tc.diff.psi2[5,])*6)
[1] "1.4208" "0.0000" "0.0000"
> 
> #-------------------------------
> # Estimate difference between
> # successive wet and dry survey
> # rounds in the 2 control villages
> #-------------------------------
> 
> # small wrapper for the TMLE function
> # to streamline between-round comparisons
> # for wet v. dry, stratified by child age
> tmle.wrap <- function(d) {
+   ages <- levels(d$agecat)
+   diffs <- sapply(ages,function(x) tmleAb(
+     Y=log10(d$ifatpftitre[d$agecat==x]+1),
+     X=d$wet[d$agecat==x],
+     W=data.frame(Age=d$ageyrs[d$agecat==x]),
+     id=d$id[d$agecat==x],
+     SL.library=SL.library
+     )[c("psi","se","lb","ub","p")]
+   )
+   return(diffs)
+ }
> d.12 <- rbind(d.c1,d.c2)
> d.23 <- rbind(d.c2,d.c3)
> d.34 <- rbind(d.c3,d.c4)
> d.45 <- rbind(d.c4,d.c5)
> 
> 
> set.seed(3413)
> wet.diff.12 <- tmle.wrap(d.12)
 Additive Effect
   Parameter Estimate:  0.44521
   Estimated Variance:  0.0019972
              p-value:  <2e-16
    95% Conf Interval: (0.35762, 0.53281) 
 Additive Effect
   Parameter Estimate:  0.11899
   Estimated Variance:  0.0011882
              p-value:  0.00055664
    95% Conf Interval: (0.051427, 0.18655) 
 Additive Effect
   Parameter Estimate:  0.76115
   Estimated Variance:  0.0057537
              p-value:  <2e-16
    95% Conf Interval: (0.61248, 0.90982) 
> wet.diff.23 <- tmle.wrap(d.23)
 Additive Effect
   Parameter Estimate:  0.080784
   Estimated Variance:  0.0024897
              p-value:  0.10544
    95% Conf Interval: (-0.017014, 0.17858) 
 Additive Effect
   Parameter Estimate:  0.78361
   Estimated Variance:  0.00098493
              p-value:  <2e-16
    95% Conf Interval: (0.7221, 0.84512) 
 Additive Effect
   Parameter Estimate:  0.62684
   Estimated Variance:  0.0033617
              p-value:  <2e-16
    95% Conf Interval: (0.5132, 0.74049) 
> wet.diff.34 <- tmle.wrap(d.34)
 Additive Effect
   Parameter Estimate:  0.73593
   Estimated Variance:  0.0034338
              p-value:  <2e-16
    95% Conf Interval: (0.62108, 0.85078) 
 Additive Effect
   Parameter Estimate:  0.66739
   Estimated Variance:  0.00091153
              p-value:  <2e-16
    95% Conf Interval: (0.60821, 0.72656) 
 Additive Effect
   Parameter Estimate:  0.61908
   Estimated Variance:  0.0032249
              p-value:  <2e-16
    95% Conf Interval: (0.50778, 0.73039) 
> wet.diff.45 <- tmle.wrap(d.45)
 Additive Effect
   Parameter Estimate:  0.61766
   Estimated Variance:  0.0038796
              p-value:  <2e-16
    95% Conf Interval: (0.49557, 0.73974) 
 Additive Effect
   Parameter Estimate:  0.62246
   Estimated Variance:  0.00082139
              p-value:  <2e-16
    95% Conf Interval: (0.56628, 0.67863) 
 Additive Effect
   Parameter Estimate:  1.0039
   Estimated Variance:  0.0052843
              p-value:  <2e-16
    95% Conf Interval: (0.86139, 1.1463) 
> # note: 5 v 7 and 7 v 8 are not tested b/c all wet season
> 
> 
> #-------------------------------
> # save down the results
> #-------------------------------
> save.image("~/dropbox/articles/antibody-curves/results/raw/garki-wet-dry-analysis.RData")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 85.135   0.700  86.439 
