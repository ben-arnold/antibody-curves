
R version 3.2.4 (2016-03-10) -- "Very Secure Dishes"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 6-garki-wet-dry-analysis.R
> #
> # Calculate age-adjusted mean
> # IFA Pf antibody titres by
> # treatment group and wet/dry season
> # in the control villages
> #
> #-------------------------------
> 
> 
> 
> #-------------------------------
> # preamble
> #-------------------------------
> rm(list=ls())
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-15
Package created on 2014-07-16

Use SuperLearnerNews() to see changes from previous versions and latest news

> library(tmle)
Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> library(tmleAb)
Welcome to the tmleAb package
Targeted maximum likelihood estimation for antibody (Ab) measurements.
> 
> 
> #-------------------------------
> # load the serology dataset
> #-------------------------------
> # d <- read.csv("~/dropbox/articles/antibody-curves/data/garki/final/garki-sero.csv")
> 
> d <- garki_sero
> 
> d$mdate <- as.Date(d$mdate,"%d %b %Y")
> 
> # subset to observations with non-missing Ab + age measures
> d <- subset(d,!is.na(d$ifatpftitre) & !is.na(d$ageyrs))
> 
> # add 2 control village names
> d$vname <- factor(d$vname,levels=c(levels(d$vname),"Nabanawa","Ajura"))
> d$vname[d$village==552] <- "Nabanawa"
> d$vname[d$village==553] <- "Ajura"
> d$vname <- factor(d$vname)
> 
> # set sex to factor
> d$sex <- as.factor(d$sex)
> 
> # for age exactly equal to 0, set it equal to 0.001
> # to prevent the Yman 2016 model from blowing up
> # (model is undefined at age=0)
> d$ageyrs[d$ageyrs<=0] <- 0.001
> 
> # factor for child age group categories
> d$agecat <- cut(d$ageyrs,c(-1,5,10,15),labels=c("0-4","5-9","10-14"))
> 
> # create a numeric 0/1 treatment variable
> d$tr01 <- ifelse(d$tr=="Control",0,1)
> 
> # create a numeric 0/1 wet season variable
> d$wet <- ifelse(d$wetseason=="Wet",1,0)
> 
> 
> #-------------------------------
> # subset the data to the pre-
> # intervention period (svy 1-2)
> #-------------------------------
> # subset the data by group and survey round for convenience
> d.c1  <- d[d$tr=="Control" & (d$serosvy==1),]
> d.c2  <- d[d$tr=="Control" & (d$serosvy==2),]
> d.c3  <- d[d$tr=="Control" & (d$serosvy==3),]
> d.c4  <- d[d$tr=="Control" & (d$serosvy==4),]
> d.c5  <- d[d$tr=="Control" & (d$serosvy==5),]
> d.c7  <- d[d$tr=="Control" & (d$serosvy==7),]
> d.c8  <- d[d$tr=="Control" & (d$serosvy==8),]
> 
> d.tr1 <- d[d$tr=="Intervention" & d$serosvy==1,]
> d.tr2 <- d[d$tr=="Intervention" & d$serosvy==2,]
> 
> # all villages combined (pre-intervention)
> d.1 <- d[d$serosvy==1,]
> d.2 <- d[d$serosvy==2,]
> 
> #-------------------------------
> # Step 1:
> # Age-specific antibody response
> # curves
> #-------------------------------
> 
> # model / algorithm library
> SL.library <- c("SL.mean","SL.glm","SL.Yman2016","SL.gam","SL.loess")
> 
> set.seed(65452)
> 
> # Pre-intervention period fitted curves
> # stratified by season, averaged over control + intervention
> p.1 <-ab_agecurve(Y=log10(d.1$ifatpftitre+1),Age=d.1$ageyrs,id=d.1$id,SL.library=SL.library)
Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12


Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.2659535 0.00000000
SL.glm_All      0.2612819 0.00000000
SL.Yman2016_All 0.2575016 0.24463962
SL.gam.df6_All  0.2478002 0.03989548
SL.loess_All    0.2473392 0.71546490
Warning messages:
1: In log(Aa) : NaNs produced
2: In log(Aa) : NaNs produced
3: In log(Aa) : NaNs produced
4: In log(Aa) : NaNs produced
5: In log(Aa) : NaNs produced
6: In log(Aa) : NaNs produced
> p.2 <-ab_agecurve(Y=log10(d.2$ifatpftitre+1),Age=d.2$ageyrs,id=d.2$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk Coef
SL.mean_All     0.3738852    0
SL.glm_All      0.3518223    0
SL.Yman2016_All 0.3423502    0
SL.gam.df6_All  0.2577309    0
SL.loess_All    0.2533484    1
> 
> # surveys 1-2 stratified by intervention assignment and season
> # doing this extra leg work to confirm that there
> # is no difference between assignment
> p.c1 <- ab_agecurve(Y=log10(d.c1$ifatpftitre+1),Age=d.c1$ageyrs,id=d.c1$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.2878711 0.00000000
SL.glm_All      0.2801245 0.00000000
SL.Yman2016_All 0.2769781 0.24645614
SL.gam.df6_All  0.2598046 0.73382350
SL.loess_All    0.2603188 0.01972036
> p.c2 <- ab_agecurve(Y=log10(d.c2$ifatpftitre+1),Age=d.c2$ageyrs,id=d.c2$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.2975319 0.00000000
SL.glm_All      0.2800885 0.00000000
SL.Yman2016_All 0.2341830 0.06422785
SL.gam.df5_All  0.1959759 0.00000000
SL.loess_All    0.1857567 0.93577215
> p.tr1 <- ab_agecurve(Y=log10(d.tr1$ifatpftitre+1),Age=d.tr1$ageyrs,id=d.tr1$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk        Coef
SL.mean_All     0.2504750 0.000000000
SL.glm_All      0.2487138 0.006132537
SL.Yman2016_All 0.2426135 0.431917716
SL.gam.df6_All  0.2417297 0.000000000
SL.loess_All    0.2413616 0.561949747
Warning messages:
1: In log(Aa) : NaNs produced
2: In log(Aa) : NaNs produced
3: In log(Aa) : NaNs produced
> p.tr2 <- ab_agecurve(Y=log10(d.tr2$ifatpftitre+1),Age=d.tr2$ageyrs,id=d.tr2$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.4163857 0.01336414
SL.glm_All      0.3932918 0.00000000
SL.Yman2016_All 0.4191410 0.00000000
SL.gam.df6_All  0.2993004 0.00000000
SL.loess_All    0.2957471 0.98663586
Warning messages:
1: In log(Aa) : NaNs produced
2: In log(Aa) : NaNs produced
> 
> # control village fitted curves for surveys 3,4,5,7,8 (wet, dry, wet, wet, dry)
> p.c3 <- ab_agecurve(Y=log10(d.c3$ifatpftitre+1),Age=d.c3$ageyrs,id=d.c3$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.4839453 0.03042335
SL.glm_All      0.4667032 0.00000000
SL.Yman2016_All 0.4489987 0.00000000
SL.gam.df6_All  0.3819157 0.00000000
SL.loess_All    0.3746019 0.96957665
> p.c4 <- ab_agecurve(Y=log10(d.c4$ifatpftitre+1),Age=d.c4$ageyrs,id=d.c4$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.8488352 0.03774566
SL.glm_All      0.7822167 0.00000000
SL.Yman2016_All 0.6978117 0.00000000
SL.gam.df6_All  0.4940271 0.00000000
SL.loess_All    0.4828502 0.96225434
> p.c5 <- ab_agecurve(Y=log10(d.c5$ifatpftitre+1),Age=d.c5$ageyrs,id=d.c5$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.5606526 0.03422347
SL.glm_All      0.5224705 0.00000000
SL.Yman2016_All 0.5019369 0.00000000
SL.gam.df6_All  0.4181790 0.00000000
SL.loess_All    0.4135546 0.96577653
> p.c7 <- ab_agecurve(Y=log10(d.c7$ifatpftitre+1),Age=d.c7$ageyrs,id=d.c7$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk        Coef
SL.mean_All     0.4475901 0.002538706
SL.glm_All      0.4218199 0.000000000
SL.Yman2016_All 0.3754796 0.000000000
SL.gam.df6_All  0.3274579 0.000000000
SL.loess_All    0.3137734 0.997461294
> p.c8 <- ab_agecurve(Y=log10(d.c8$ifatpftitre+1),Age=d.c8$ageyrs,id=d.c8$id,SL.library=SL.library)

Call:  
SuperLearner::SuperLearner(Y = fitd$Y, X = X, family = family, SL.library = SL.library,  
    method = "method.NNLS", id = fitd$id) 


                     Risk       Coef
SL.mean_All     0.5773833 0.03988527
SL.glm_All      0.5435117 0.00000000
SL.Yman2016_All 0.5393170 0.00000000
SL.gam.df6_All  0.4237156 0.03561864
SL.loess_All    0.4108334 0.92449609
> 
> 
> 
> 
> # temp code to look at curves
> # lo <- layout(mat=matrix(1:3,nrow=3,ncol=1))
> # cols <- rainbow(n=7,v=0.7)
> # plot(p.c1$pYframe$Age,p.c1$pYframe$pY,type="l",bty="n",ylim=c(1,4),xlim=c(0,15),col=cols[1])
> # lines(p.c2$pYframe$Age,p.c2$pYframe$pY,col=cols[2])
> #
> # plot(p.c3$pYframe$Age,p.c3$pYframe$pY,type="l",bty="n",ylim=c(1,4),xlim=c(0,15),col=cols[3])
> # lines(p.c4$pYframe$Age,p.c4$pYframe$pY,col=cols[4])
> # lines(p.c5$pYframe$Age,p.c5$pYframe$pY,col=cols[5])
> #
> # plot(p.c7$pYframe$Age,p.c7$pYframe$pY,type="l",bty="n",ylim=c(1,4),xlim=c(0,15),col=cols[6])
> # lines(p.c8$pYframe$Age,p.c8$pYframe$pY,col=cols[7])
> 
> 
> 
> #-------------------------------
> # Step 2:
> # Calculate age-adjusted means
> # and difference in means
> # by wet/dry season survey
> #-------------------------------
> set.seed(8969754)
> 
> ## All villages, rounds 1-2
> mu12.0to4 <- sapply(c(1:2),function(x) ab_tmle(
+ 	Y=log10(d$ifatpftitre[d$agecat=="0-4" & d$serosvy==x]+1),
+ 	Age=d$ageyrs[d$agecat=="0-4" & d$serosvy==x],
+ 	id=d$id[d$agecat=="0-4" & d$serosvy==x],
+ 	SL.library=SL.library
+ 	)
+ )
 Population Mean
   Parameter Estimate:  3.1776
   Estimated Variance:  0.001312
              p-value:  <2e-16
    95% Conf Interval: (3.1066, 3.2486) 
 Population Mean
   Parameter Estimate:  2.8332
   Estimated Variance:  0.0021233
              p-value:  <2e-16
    95% Conf Interval: (2.7428, 2.9235) 
> mu12.5to9 <- sapply(c(1:2),function(x) ab_tmle(
+   Y=log10(d$ifatpftitre[d$agecat=="5-9" & d$serosvy==x]+1),
+   Age=d$ageyrs[d$agecat=="5-9" & d$serosvy==x],
+   id=d$id[d$agecat=="5-9" & d$serosvy==x],
+   SL.library=SL.library
+   )
+ )
 Population Mean
   Parameter Estimate:  3.3519
   Estimated Variance:  0.00081663
              p-value:  <2e-16
    95% Conf Interval: (3.2959, 3.4079) 
 Population Mean
   Parameter Estimate:  3.3658
   Estimated Variance:  0.00076147
              p-value:  <2e-16
    95% Conf Interval: (3.3117, 3.4199) 
> mu12.10to14 <- sapply(c(1:2),function(x) ab_tmle(
+   Y=log10(d$ifatpftitre[d$agecat=="10-14" & d$serosvy==x]+1),
+   Age=d$ageyrs[d$agecat=="10-14" & d$serosvy==x],
+   id=d$id[d$agecat=="10-14" & d$serosvy==x],
+   SL.library=SL.library
+   )
+ )
 Population Mean
   Parameter Estimate:  3.4451
   Estimated Variance:  0.0030387
              p-value:  <2e-16
    95% Conf Interval: (3.337, 3.5531) 
 Population Mean
   Parameter Estimate:  3.4274
   Estimated Variance:  0.0020051
              p-value:  <2e-16
    95% Conf Interval: (3.3396, 3.5151) 
> 
> 
> # Control villages only, round 3-5,7,8
> mu.0to4 <- sapply(c(1:5,7,8),function(x) ab_tmle(
+   Y=log10(d$ifatpftitre[d$agecat=="0-4" & d$tr=="Control" & d$serosvy==x]+1),
+   Age=d$ageyrs[d$agecat=="0-4" & d$tr=="Control" & d$serosvy==x],
+   id=d$id[d$agecat=="0-4" & d$tr=="Control" & d$serosvy==x],
+   SL.library=SL.library
+   )
+ )
 Population Mean
   Parameter Estimate:  3.0752
   Estimated Variance:  0.0033687
              p-value:  <2e-16
    95% Conf Interval: (2.9615, 3.189) 
 Population Mean
   Parameter Estimate:  2.7841
   Estimated Variance:  0.0039992
              p-value:  <2e-16
    95% Conf Interval: (2.6602, 2.9081) 
 Population Mean
   Parameter Estimate:  2.8161
   Estimated Variance:  0.0074587
              p-value:  <2e-16
    95% Conf Interval: (2.6468, 2.9854) 
 Population Mean
   Parameter Estimate:  2.2409
   Estimated Variance:  0.012298
              p-value:  <2e-16
    95% Conf Interval: (2.0235, 2.4583) 
 Population Mean
   Parameter Estimate:  2.9113
   Estimated Variance:  0.0094135
              p-value:  <2e-16
    95% Conf Interval: (2.7211, 3.1015) 
 Population Mean
   Parameter Estimate:  2.836
   Estimated Variance:  0.0069216
              p-value:  <2e-16
    95% Conf Interval: (2.6729, 2.9991) 
 Population Mean
   Parameter Estimate:  2.5146
   Estimated Variance:  0.01234
              p-value:  <2e-16
    95% Conf Interval: (2.2969, 2.7324) 
> mu.5to9 <- sapply(c(1:5,7,8),function(x) ab_tmle(
+   Y=log10(d$ifatpftitre[d$agecat=="5-9" & d$tr=="Control" & d$serosvy==x]+1),
+   Age=d$ageyrs[d$agecat=="5-9" & d$tr=="Control" & d$serosvy==x],
+   id=d$id[d$agecat=="5-9" & d$tr=="Control" & d$serosvy==x],
+   SL.library=SL.library
+   )
+ )
 Population Mean
   Parameter Estimate:  3.3008
   Estimated Variance:  0.0025741
              p-value:  <2e-16
    95% Conf Interval: (3.2013, 3.4002) 
 Population Mean
   Parameter Estimate:  3.2921
   Estimated Variance:  0.0015312
              p-value:  <2e-16
    95% Conf Interval: (3.2154, 3.3688) 
 Population Mean
   Parameter Estimate:  3.344
   Estimated Variance:  0.0018292
              p-value:  <2e-16
    95% Conf Interval: (3.2602, 3.4279) 
 Population Mean
   Parameter Estimate:  3.215
   Estimated Variance:  0.0021574
              p-value:  <2e-16
    95% Conf Interval: (3.124, 3.3061) 
 Population Mean
   Parameter Estimate:  3.4433
   Estimated Variance:  0.0017452
              p-value:  <2e-16
    95% Conf Interval: (3.3615, 3.5252) 
 Population Mean
   Parameter Estimate:  3.3498
   Estimated Variance:  0.0024387
              p-value:  <2e-16
    95% Conf Interval: (3.253, 3.4466) 
 Population Mean
   Parameter Estimate:  3.1374
   Estimated Variance:  0.0032847
              p-value:  <2e-16
    95% Conf Interval: (3.0251, 3.2497) 
> mu.10to14 <- sapply(c(1:5,7,8),function(x) ab_tmle(
+   Y=log10(d$ifatpftitre[d$agecat=="10-14" & d$serosvy==x]+1),
+   Age=d$ageyrs[d$agecat=="10-14" & d$serosvy==x],
+   id=d$id[d$agecat=="10-14" & d$serosvy==x],
+   SL.library=SL.library
+   )
+ )
 Population Mean
   Parameter Estimate:  3.4451
   Estimated Variance:  0.0030387
              p-value:  <2e-16
    95% Conf Interval: (3.337, 3.5531) 
 Population Mean
   Parameter Estimate:  3.4274
   Estimated Variance:  0.0020051
              p-value:  <2e-16
    95% Conf Interval: (3.3396, 3.5151) 
 Population Mean
   Parameter Estimate:  3.1955
   Estimated Variance:  0.0027506
              p-value:  <2e-16
    95% Conf Interval: (3.0927, 3.2983) 
 Population Mean
   Parameter Estimate:  3.0909
   Estimated Variance:  0.0032619
              p-value:  <2e-16
    95% Conf Interval: (2.979, 3.2029) 
 Population Mean
   Parameter Estimate:  2.9181
   Estimated Variance:  0.0053038
              p-value:  <2e-16
    95% Conf Interval: (2.7753, 3.0608) 
 Population Mean
   Parameter Estimate:  3.166
   Estimated Variance:  0.0035064
              p-value:  <2e-16
    95% Conf Interval: (3.0499, 3.282) 
 Population Mean
   Parameter Estimate:  3.1131
   Estimated Variance:  0.0027514
              p-value:  <2e-16
    95% Conf Interval: (3.0103, 3.2159) 
> 
> #-------------------------------
> # Estimate difference between
> # control and intervention villages in
> # IFA P. falciparum
> # titre by survey round
> # to ensure it is reasonable to
> # pool them in rounds 1-2
> #-------------------------------
> 
> set.seed(8234234)
> ages <- levels(d$agecat)
> tc.diff.psi1 <- sapply(ages,function(x) ab_tmle(
+ 	Y=log10(d$ifatpftitre[d$serosvy==1 & d$agecat==x]+1),
+ 	Age=d$ageyrs[d$serosvy==1 & d$agecat==x],
+ 	id=d$id[d$serosvy==1 & d$agecat==x],
+ 	X=d$tr01[d$serosvy==1 & d$agecat==x],
+ 	SL.library=SL.library,
+ 	diff=TRUE
+ 	)
+ )
 Additive Effect
   Parameter Estimate:  0.36836
   Estimated Variance:  0.0012607
              p-value:  <2e-16
    95% Conf Interval: (0.29877, 0.43795) 
 Additive Effect
   Parameter Estimate:  0.81729
   Estimated Variance:  0.0009669
              p-value:  <2e-16
    95% Conf Interval: (0.75634, 0.87823) 
 Additive Effect
   Parameter Estimate:  0.18883
   Estimated Variance:  0.0030658
              p-value:  0.00064889
    95% Conf Interval: (0.080303, 0.29735) 
> tc.diff.psi2 <- sapply(ages,function(x) ab_tmle(
+   Y=log10(d$ifatpftitre[d$serosvy==2 & d$agecat==x]+1),
+   Age=d$ageyrs[d$serosvy==2 & d$agecat==x],
+   id=d$id[d$serosvy==2 & d$agecat==x],
+   X=d$tr01[d$serosvy==2 & d$agecat==x],
+   SL.library=SL.library,
+   diff=TRUE
+   )
+ )
 Additive Effect
   Parameter Estimate:  0.044139
   Estimated Variance:  0.0014091
              p-value:  0.23965
    95% Conf Interval: (-0.029436, 0.11771) 
 Additive Effect
   Parameter Estimate:  1.0218
   Estimated Variance:  0.000889
              p-value:  <2e-16
    95% Conf Interval: (0.96337, 1.0803) 
 Additive Effect
   Parameter Estimate:  0.7724
   Estimated Variance:  0.0020324
              p-value:  <2e-16
    95% Conf Interval: (0.68404, 0.86076) 
> 
> # P-values for differences in means, with Bonferroni correction for 6 tests
> sprintf("%1.4f",unlist(tc.diff.psi1[5,])*6)
[1] "0.0000" "0.0000" "0.0039"
> sprintf("%1.4f",unlist(tc.diff.psi2[5,])*6)
[1] "1.4379" "0.0000" "0.0000"
> 
> #-------------------------------
> # Estimate difference between
> # successive wet and dry survey
> # rounds in the 2 control villages
> #-------------------------------
> 
> # small wrapper for the TMLE function
> # to streamline between-round comparisons
> # for wet v. dry, stratified by child age
> tmle.wrap <- function(d) {
+   ages <- levels(d$agecat)
+   diffs <- sapply(ages,function(x) ab_tmle(
+     Y=log10(d$ifatpftitre[d$agecat==x]+1),
+     Age=d$ageyrs[d$agecat==x],
+     id=d$id[d$agecat==x],
+     X=d$wet[d$agecat==x],
+     SL.library=SL.library,
+     diff=TRUE
+     )
+   )
+   return(diffs)
+ }
> d.12 <- rbind(d.c1,d.c2)
> d.23 <- rbind(d.c2,d.c3)
> d.34 <- rbind(d.c3,d.c4)
> d.45 <- rbind(d.c4,d.c5)
> 
> 
> set.seed(3413)
> wet.diff.12 <- tmle.wrap(d.12)
 Additive Effect
   Parameter Estimate:  0.5026
   Estimated Variance:  0.0020064
              p-value:  <2e-16
    95% Conf Interval: (0.41481, 0.59039) 
 Additive Effect
   Parameter Estimate:  0.17133
   Estimated Variance:  0.001203
              p-value:  7.8226e-07
    95% Conf Interval: (0.10335, 0.23932) 
 Additive Effect
   Parameter Estimate:  0.76115
   Estimated Variance:  0.0057537
              p-value:  <2e-16
    95% Conf Interval: (0.61248, 0.90982) 
> wet.diff.23 <- tmle.wrap(d.23)
 Additive Effect
   Parameter Estimate:  0.095025
   Estimated Variance:  0.0024742
              p-value:  0.056084
    95% Conf Interval: (-0.0024681, 0.19252) 
 Additive Effect
   Parameter Estimate:  0.78361
   Estimated Variance:  0.00098493
              p-value:  <2e-16
    95% Conf Interval: (0.7221, 0.84512) 
 Additive Effect
   Parameter Estimate:  0.62684
   Estimated Variance:  0.0033617
              p-value:  <2e-16
    95% Conf Interval: (0.5132, 0.74049) 
> wet.diff.34 <- tmle.wrap(d.34)
 Additive Effect
   Parameter Estimate:  0.81423
   Estimated Variance:  0.0035673
              p-value:  <2e-16
    95% Conf Interval: (0.69716, 0.93129) 
 Additive Effect
   Parameter Estimate:  0.66919
   Estimated Variance:  0.00091129
              p-value:  <2e-16
    95% Conf Interval: (0.61002, 0.72835) 
 Additive Effect
   Parameter Estimate:  0.85203
   Estimated Variance:  0.0032693
              p-value:  <2e-16
    95% Conf Interval: (0.73997, 0.9641) 
> wet.diff.45 <- tmle.wrap(d.45)
 Additive Effect
   Parameter Estimate:  0.62587
   Estimated Variance:  0.003881
              p-value:  <2e-16
    95% Conf Interval: (0.50376, 0.74797) 
 Additive Effect
   Parameter Estimate:  0.68605
   Estimated Variance:  0.0008354
              p-value:  <2e-16
    95% Conf Interval: (0.6294, 0.74271) 
 Additive Effect
   Parameter Estimate:  1.082
   Estimated Variance:  0.0053991
              p-value:  <2e-16
    95% Conf Interval: (0.93798, 1.226) 
> # note: 5 v 7 and 7 v 8 are not tested b/c all wet season
> 
> 
> #-------------------------------
> # save down the results
> #-------------------------------
> save.image("~/dropbox/articles/antibody-curves/results/raw/garki-wet-dry-analysis.RData")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 44.834   0.503  45.787 
