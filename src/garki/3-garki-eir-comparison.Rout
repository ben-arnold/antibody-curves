
R version 3.2.0 (2015-04-16) -- "Full of Ingredients"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 3-garki-eir-comparison.R
> #
> # Compare IFA titre 
> # age-adjusted mean values
> # with EIR estimates from
> # the original Garki Project
> # (Molineaux 1980, Table 4, p 65)
> # for the 3 villages with both
> # serological and entomological
> # analyses at multiple wet season
> # time points
> #
> #-------------------------------
> 
> 
> 
> #-------------------------------
> # preamble
> #-------------------------------
> 
> rm(list=ls())
> library(RColorBrewer)
> library(scales)
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-15
Package created on 2014-07-16

Use SuperLearnerNews() to see changes from previous versions and latest news

> library(tmle)
Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> 
> 
> # source the base functions for
> # SL fits of age-antibody curves
> # and TMLE estimates of mean differences
> source("~/SLAbcurves/src/SLAb-curve.R")
> source("~/SLAbcurves/src/SLAb-tmle.R")
> source("~/SLAbcurves/src/SLAb-cvRF.R")
> 
> 
> 
> #-------------------------------
> # input EIR values from 
> # Table 4 (p 65) of Molineaux 1980
> # for villages:
> # Ajura(553), Rafin-Marke(154), Nasakar(218)
> #-------------------------------
> eir <- c( 37,25,28,NA,NA,
+ 		  18, 5, 2, 4, 6,
+ 		 129, 0, 4,16,24)
> village <- rep(c(553,154,218),c(5,5,5))
> vname <- rep(c("Ajura","Rafin Marke","Nasakar"),c(5,5,5))
> eirdates <- rep(c("1971-06-21 to 1971-11-07","1972-05-22 to 1972-10-22","1973-06-18 to 1973-11-04","1974-07-29 to 1974-12-15","1975-07-14 to 1975-11-30"),3)
> wetseason <- rep(1971:1975,3)
> deir <- data.frame(village,vname,wetseason,eirdates,eir)
> 
> 
> #-------------------------------
> # load the serology dataset
> #-------------------------------
> d <- read.csv("~/dropbox/garki/data/final/garki-sero.csv")
> 
> d$mdate <- as.Date(d$mdate,"%d %b %Y")
> 
> #-------------------------------
> # subset the dataset to
> # the 3 villages with EIR ests
> #-------------------------------
> ad <- subset(d,village==553|village==154|village==218)
> ad$vname <- factor(ad$vname)
> ad$vname <- factor(ad$vname,levels=c("Ajura","Nasakar","Rafin Marke"))
> ad$vname[ad$village==553] <- "Ajura"
> 
> #-------------------------------
> # Identify observations in the
> # wet seasons
> #-------------------------------
> ad$wetseason <- NA
> ad$wetseason[ad$mdate>="1971-06-21" & ad$mdate<="1971-11-07" ] <- 1971
> ad$wetseason[ad$mdate>="1972-05-22" & ad$mdate<="1972-10-22" ] <- 1972
> ad$wetseason[ad$mdate>="1973-06-18" & ad$mdate<="1973-11-04" ] <- 1973
> ad$wetseason[ad$mdate>="1974-07-29" & ad$mdate<="1974-12-15" ] <- 1974
> ad$wetseason[ad$mdate>="1975-07-14" & ad$mdate<="1975-11-30" ] <- 1975
> 
> table(ad$vname,ad$wetseason)
             
              1971 1972 1973 1974 1975
  Ajura        427  390  405  354  375
  Nasakar      345  738  358  361  318
  Rafin Marke  304  374  340  336  330
> 
> 
> #-------------------------------
> # IFAT-Pf
> # SuperLearner curve fits
> #-------------------------------
> 
> set.seed(2343242)
> ajura.1971.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==1971]+1),
+ 		Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==1971],
+ 		id=ad$id[ad$vname=="Ajura" & ad$wetseason==1971]
+ 	)
Loading required package: randomForest
randomForest 4.6-12
Type rfNews() to see new features/changes/bug fixes.
Loading required package: arm
Loading required package: MASS
Loading required package: Matrix
Loading required package: lme4
Loading required package: Rcpp

arm (Version 1.8-5, built: 2015-05-13)

Working directory is /Users/benarnold/SLAbcurves/src/garki


Attaching package: ‘arm’

The following object is masked from ‘package:scales’:

    rescale

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: glmnet
Loaded glmnet 2.0-2


Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.2279627 0.2201150
SL.glm_All               0.2283473 0.0000000
SL.bayesglm_All          0.2283470 0.0000000
SL.loess_All             0.2168183 0.5627506
SL.gam_All               0.2200255 0.0000000
SL.gam.3_All             0.2158762 0.2171343
SL.glmnet_All            0.2279649 0.0000000
SL.randomForest.ns20_All 0.2169086 0.0000000
There were 50 or more warnings (use warnings() to see the first 50)
> ajura.1972.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==1972]+1),
+ 		Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==1972],
+ 		id=ad$id[ad$vname=="Ajura" & ad$wetseason==1972]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk     Coef
SL.mean_All              0.2399329 0.000000
SL.glm_All               0.2311575 0.000000
SL.bayesglm_All          0.2311574 0.000000
SL.loess_All             0.1925939 0.798444
SL.gam_All               0.2183602 0.000000
SL.gam.3_All             0.2099040 0.000000
SL.glmnet_All            0.2305363 0.000000
SL.randomForest.ns15_All 0.2020835 0.201556
There were 33 warnings (use warnings() to see them)
> ajura.1973.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==1973]+1),
+ 		Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==1973],
+ 		id=ad$id[ad$vname=="Ajura" & ad$wetseason==1973]
+ 	)	

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.5514594 0.0000000
SL.glm_All               0.5183646 0.0000000
SL.bayesglm_All          0.5183643 0.0000000
SL.loess_All             0.4301416 0.7957406
SL.gam_All               0.4794780 0.0000000
SL.gam.3_All             0.4589849 0.0000000
SL.glmnet_All            0.5182693 0.0000000
SL.randomForest.ns25_All 0.4526901 0.2042594
There were 33 warnings (use warnings() to see them)
> 
> rafin.1971.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1971]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1971],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1971]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk       Coef
SL.mean_All              0.3035823 0.09690102
SL.glm_All               0.2982547 0.00000000
SL.bayesglm_All          0.2982544 0.00000000
SL.loess_All             0.2916403 0.12246941
SL.gam_All               0.2916690 0.00000000
SL.gam.3_All             0.2871317 0.59551042
SL.glmnet_All            0.3018425 0.00000000
SL.randomForest.ns25_All 0.2961301 0.18511914
There were 47 warnings (use warnings() to see them)
> rafin.1972.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1972]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1972],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1972]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.8836136 0.0000000
SL.glm_All               0.7332261 0.0000000
SL.bayesglm_All          0.7332255 0.0000000
SL.loess_All             0.5011731 0.7119454
SL.gam_All               0.5755195 0.0000000
SL.gam.3_All             0.5231555 0.0000000
SL.glmnet_All            0.7313778 0.0000000
SL.randomForest.ns35_All 0.5559496 0.2880546
There were 33 warnings (use warnings() to see them)
> rafin.1973.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1973]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1973],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1973]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.2974400 0.0000000
SL.glm_All               0.8730414 0.0000000
SL.bayesglm_All          0.8730382 0.0000000
SL.loess_All             0.5093747 0.7649578
SL.gam_All               0.6227206 0.0000000
SL.gam.3_All             0.5477061 0.0000000
SL.glmnet_All            0.8719266 0.0000000
SL.randomForest.ns25_All 0.6520482 0.2350422
There were 33 warnings (use warnings() to see them)
> rafin.1974.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1974]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1974],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1974]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                             Risk      Coef
SL.mean_All              1.627961 0.0000000
SL.glm_All               1.397168 0.0000000
SL.bayesglm_All          1.397164 0.0000000
SL.loess_All             1.043738 0.6786387
SL.gam_All               1.129722 0.0000000
SL.gam.3_All             1.055530 0.2730129
SL.glmnet_All            1.401274 0.0000000
SL.randomForest.ns40_All 1.179608 0.0483484
There were 33 warnings (use warnings() to see them)
> rafin.1975.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1975]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1975],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1975]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.2877315 0.0000000
SL.glm_All               1.1030339 0.0000000
SL.bayesglm_All          1.1030286 0.0000000
SL.loess_All             0.8793277 0.5038764
SL.gam_All               0.9231482 0.0000000
SL.gam.3_All             0.8797494 0.3619257
SL.glmnet_All            1.1047737 0.0000000
SL.randomForest.ns25_All 0.9617499 0.1341979
There were 33 warnings (use warnings() to see them)
> 
> nasak.1971.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1971]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1971],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1971]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.1537280 0.6949251
SL.glm_All               0.1546724 0.0000000
SL.bayesglm_All          0.1546723 0.3050749
SL.loess_All             0.1665940 0.0000000
SL.gam_All               0.1569585 0.0000000
SL.gam.3_All             0.1603825 0.0000000
SL.glmnet_All            0.1584786 0.0000000
SL.randomForest.ns25_All 0.1559327 0.0000000
There were 50 or more warnings (use warnings() to see the first 50)
> nasak.1972.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1972]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1972],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1972]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.5144350 0.0000000
SL.glm_All               0.4470798 0.0000000
SL.bayesglm_All          0.4470796 0.0000000
SL.loess_All             0.3457201 0.8117175
SL.gam_All               0.4073323 0.0000000
SL.gam.3_All             0.3811867 0.0000000
SL.glmnet_All            0.4463882 0.0000000
SL.randomForest.ns15_All 0.3800475 0.1882825
There were 33 warnings (use warnings() to see them)
> nasak.1973.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1973]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1973],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1973]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.3183045 0.0000000
SL.glm_All               0.8660367 0.0000000
SL.bayesglm_All          0.8660342 0.0000000
SL.loess_All             0.5388362 0.8711797
SL.gam_All               0.6802262 0.0000000
SL.gam.3_All             0.6105870 0.0000000
SL.glmnet_All            0.8657205 0.0000000
SL.randomForest.ns15_All 0.7166712 0.1288203
There were 33 warnings (use warnings() to see them)
> nasak.1974.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1974]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1974],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1974]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk       Coef
SL.mean_All              1.6901923 0.00000000
SL.glm_All               1.3364495 0.00000000
SL.bayesglm_All          1.3364479 0.00000000
SL.loess_All             0.9014905 0.80486853
SL.gam_All               1.0903506 0.00000000
SL.gam.3_All             0.9672436 0.14321624
SL.glmnet_All            1.3340251 0.05191523
SL.randomForest.ns15_All 1.1026566 0.00000000
There were 33 warnings (use warnings() to see them)
> nasak.1975.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1975]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1975],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1975]
+ 	)

Call:  
SuperLearner(Y = fitd$Y, X = data.frame(fitd$Age, rep(1, nrow(fitd))), SL.library = SLlib,  
    id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.0930019 0.0000000
SL.glm_All               0.9188623 0.0000000
SL.bayesglm_All          0.9188567 0.0000000
SL.loess_All             0.5955882 0.8004145
SL.gam_All               0.7646734 0.0000000
SL.gam.3_All             0.7059109 0.0000000
SL.glmnet_All            0.9162755 0.0000000
SL.randomForest.ns25_All 0.6831127 0.1995855
There were 33 warnings (use warnings() to see them)
> 
> #-------------------------------
> # TMLE estimates of age-adjusted
> # mean antibody titres in each
> # year (wet season only)
> #-------------------------------
> 
> set.seed(5463452)
> ajura.tmle <- sapply(c(1971,1972,1973),function(x) SLAb.tmle(
+   Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==x]+1),
+   Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==x],
+   id=ad$id[ad$vname=="Ajura" & ad$wetseason==x])
+   )
 Population Mean
   Parameter Estimate:  3.4214
   Estimated Variance:  0.0019832
              p-value:  <2e-16
    95% Conf Interval: (3.3341, 3.5087) 
 Population Mean
   Parameter Estimate:  3.2896
   Estimated Variance:  0.0021101
              p-value:  <2e-16
    95% Conf Interval: (3.1995, 3.3796) 
 Population Mean
   Parameter Estimate:  3.3859
   Estimated Variance:  0.0043371
              p-value:  <2e-16
    95% Conf Interval: (3.2568, 3.515) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> rafin.tmle <- sapply(c(1971,1972,1973,1974,1975),function(x) SLAb.tmle(
+   Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==x]+1),
+   Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==x],
+   id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==x])
+ )
 Population Mean
   Parameter Estimate:  3.3026
   Estimated Variance:  0.0031928
              p-value:  <2e-16
    95% Conf Interval: (3.1918, 3.4133) 
 Population Mean
   Parameter Estimate:  2.6727
   Estimated Variance:  0.010161
              p-value:  <2e-16
    95% Conf Interval: (2.4751, 2.8703) 
 Population Mean
   Parameter Estimate:  1.6749
   Estimated Variance:  0.012576
              p-value:  <2e-16
    95% Conf Interval: (1.4551, 1.8947) 
 Population Mean
   Parameter Estimate:  2.5026
   Estimated Variance:  0.015052
              p-value:  <2e-16
    95% Conf Interval: (2.2621, 2.7431) 
 Population Mean
   Parameter Estimate:  2.2584
   Estimated Variance:  0.016591
              p-value:  <2e-16
    95% Conf Interval: (2.0059, 2.5108) 
Warning messages:
1: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
2: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
3: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
4: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
5: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
6: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
7: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
8: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
9: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
10: In randomForest.default(m, y, ...) :
  The response has five or fewer unique values.  Are you sure you want to do regression?
> 
> nasak.tmle <- sapply(c(1971,1972,1973,1974,1975),function(x) SLAb.tmle(
+   Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==x]+1),
+   Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==x],
+   id=ad$id[ad$vname=="Nasakar" & ad$wetseason==x])
+ )
 Population Mean
   Parameter Estimate:  3.4111
   Estimated Variance:  0.0014016
              p-value:  <2e-16
    95% Conf Interval: (3.3378, 3.4845) 
 Population Mean
   Parameter Estimate:  3.0592
   Estimated Variance:  0.0035201
              p-value:  <2e-16
    95% Conf Interval: (2.9429, 3.1755) 
 Population Mean
   Parameter Estimate:  1.861
   Estimated Variance:  0.012498
              p-value:  <2e-16
    95% Conf Interval: (1.6418, 2.0801) 
 Population Mean
   Parameter Estimate:  2.3353
   Estimated Variance:  0.016935
              p-value:  <2e-16
    95% Conf Interval: (2.0803, 2.5904) 
 Population Mean
   Parameter Estimate:  2.5548
   Estimated Variance:  0.017457
              p-value:  <2e-16
    95% Conf Interval: (2.2958, 2.8137) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> #-------------------------------
> # summarize the means + 95% CIs
> #-------------------------------
> ajura.mus <- matrix(unlist(ajura.tmle[c(1,3,4),]),nrow=3,ncol=3,byrow=T)
> rafin.mus <- matrix(unlist(rafin.tmle[c(1,3,4),]),nrow=5,ncol=3,byrow=T)
> nasak.mus <- matrix(unlist(nasak.tmle[c(1,3,4),]),nrow=5,ncol=3,byrow=T)
> colnames(ajura.mus) <- colnames(rafin.mus) <- colnames(nasak.mus) <- c("mu","lb","ub")
> all.mus <- rbind(ajura.mus,rep(NA,3),rep(NA,3),rafin.mus,nasak.mus)
> dmus <- data.frame(
+ 		vname=rep(c("Ajura","Rafin Marke","Nasakar"),c(5,5,5)),
+ 		wetseason=rep(1971:1975,3),
+ 		all.mus
+ )
> 
> #-------------------------------
> # merge the means to the EIR data
> #-------------------------------
> md <- merge(deir,dmus,by=c("vname","wetseason"))
> md <- subset(md,!is.na(eir))
> 
> # calculate log_10 eir.  add 1 to eir=0
> md$log10eir <- log10(md$eir)
> md$log10eir[md$eir==0] <- log10(1)
> 
> #-------------------------------
> # calculate spearman's rank 
> # correlation test statistic
> #-------------------------------
> 
> sp.rho <- cor.test(md$log10eir,md$mu,method="spearman")
Warning message:
In cor.test.default(md$log10eir, md$mu, method = "spearman") :
  Cannot compute exact p-value with ties
> sp.rho

	Spearman's rank correlation rho

data:  md$log10eir and md$mu
S = 92.627, p-value = 0.003441
alternative hypothesis: true rho is not equal to 0
sample estimates:
      rho 
0.7455303 

> rho.text <- substitute(paste("Spearman's ",rho," = ",rho.txt ),list(rho.txt=sprintf("%1.2f",sp.rho$estimate)))
> 
> #-------------------------------
> # plot the values
> #-------------------------------
> 
> pdf("~/SLAbcurves/results/figs/garki-IFAPf-EIR.pdf",width=15,height=5)
> op <- par(mar=c(6,5,3,2)+0.1)
> # cols <- c(brewer.pal(8,"Dark2")[c(8,4)],brewer.pal(8,"Set1")[2])
> cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
> cols <- c(cbPalette[c(7,6,1)])
> 
> lo <- layout(mat=matrix(1:3,nrow=1,ncol=3))
> plot(1,type="n",bty="n",xlab="",ylab="",xaxt="n",yaxt="n")
> plot(1,type="n",bty="n",xlab="",ylab="",xaxt="n",yaxt="n")
> 
> 
> i.cols <- rep(cbPalette[6],8)
> ytics <- seq(1,4,by=1)
> xtics <- seq(0,2,by=1)
> plot(1,1,type="n",bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,2.2),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=xtics,labels=c(1,10,100),cex.axis=1.25)
> 	axis(2,at=ytics,labels=c(
+ 		expression(10^1),
+ 		expression(10^2),
+ 		expression(10^3),
+ 		expression(10^4)),
+ 		las=1,cex.axis=1.25
+ 	)
>   mtext("d",adj=1,line=1,at=-0.2,font=2,cex=1.75)
> 	mtext("Wet Season Village Geometric Mean",side=2,line=4)
>   mtext(expression(paste(italic('P. falciparum')," IFA antibody titre, ", italic(E(Y[x])) )) ,side=2,line=2.5)
> 	mtext("Entomological Inoculation Rate\n(Cumulative Wet Season Infectious Bites per Person)",side=1,line=4)
> 	text(2,1,rho.text,adj=1,cex=1.25)
> 	
> 	# Ajura
> 	points(md$log10eir[md$vname=="Ajura"],md$mu[md$vname=="Ajura"], pch=16,cex=2,col=cols[1])
> 
> 	# Rafin Marke
> 	points(md$log10eir[md$vname=="Rafin Marke"],md$mu[md$vname=="Rafin Marke"], pch=16, cex=2,col=cols[2])
> 
> 	# Nasakar, exclude 1972 b/c it is out of the scale
> 	points(md$log10eir[md$vname=="Nasakar" & md$wetseason!=1972],md$mu[md$vname=="Nasakar" & md$wetseason!=1972], pch=16,cex=2,col=cols[3])
> 
> 	# circle pre-intervention measures
> 	points(md$log10eir[md$wetseason==1971],md$mu[md$wetseason==1971],cex=2)
> 	
> 	# label the villages
> 	ajura.x <- md$log10eir[md$vname=="Ajura" & md$wetseason==1971]
> 	ajura.y <- md$mu[md$vname=="Ajura" & md$wetseason==1971]
> 	segments(x0=ajura.x,y0=ajura.y+0.1,y1=ajura.y+0.2,col="gray40")
> 	text(ajura.x,ajura.y+0.2,"Ajura (control)",col=cols[1],pos=3,cex=1)
> 	
> 	rafin.x <- md$log10eir[md$vname=="Rafin Marke" & md$wetseason==1971]
> 	rafin.y <- md$mu[md$vname=="Rafin Marke" & md$wetseason==1971]
> 	segments(x0=rafin.x-0.07,x1=rafin.x-0.3,y0=rafin.y+0.07,y1=rafin.y+0.25,col="gray40")
> 	text(rafin.x-0.3,rafin.y+0.3,"Rafin Marke",col=cols[2],pos=2,cex=1)
> 	
> 	nasak.x <- md$log10eir[md$vname=="Nasakar" & md$wetseason==1971]
> 	nasak.y <- md$mu[md$vname=="Nasakar" & md$wetseason==1971]
>   segments(x0= nasak.x,y0= nasak.y +0.1,y1= nasak.y +0.4,col="gray40") 
>   text(nasak.x, nasak.y +0.4,"Nasakar",col=cols[3],pos=3,cex=1)
> 	
> par(op)
> dev.off()
null device 
          1 
> 
> 
> 
> 
> #-------------------------------
> # save the output
> #-------------------------------
> rm(d)
> save.image("~/SLAbcurves/results/raw/garki-eir-comparison.RData")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 75.693   0.597  78.186 
