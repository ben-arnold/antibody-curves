
R version 3.2.1 (2015-06-18) -- "World-Famous Astronaut"
Copyright (C) 2015 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin13.4.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> 
> #-------------------------------
> # 3-garki-eir-comparison.R
> #
> # Compare IFA titre 
> # age-adjusted mean values
> # with EIR estimates from
> # the original Garki Project
> # (Molineaux 1980, Table 4, p 65)
> # for the 3 villages with both
> # serological and entomological
> # analyses at multiple wet season
> # time points
> #
> #-------------------------------
> 
> 
> 
> #-------------------------------
> # preamble
> #-------------------------------
> 
> rm(list=ls())
> library(RColorBrewer)
> library(scales)
> library(SuperLearner)
Loading required package: nnls
Super Learner
Version: 2.0-15
Package created on 2014-07-16

Use SuperLearnerNews() to see changes from previous versions and latest news

> library(tmle)
Welcome to the tmle package, version 1.2.0-2

Use tmleNews() to see details on changes and bug fixes

Attaching package: ‘tmle’

The following object is masked from ‘package:SuperLearner’:

    SL.glm.interaction

> 
> 
> # source the base functions for
> # SL fits of age-antibody curves
> # and TMLE estimates of mean differences
> source("~/SLAbcurves/src/SLAb-curve.R")
> source("~/SLAbcurves/src/SLAb-tmle.R")
> source("~/SLAbcurves/src/SLAb-cvRF.R")
> 
> 
> 
> #-------------------------------
> # input EIR values from 
> # Table 4 (p 65) of Molineaux 1980
> # for villages:
> # Ajura(553), Rafin-Marke(154), Nasakar(218)
> #-------------------------------
> eir <- c( 37,25,28,NA,NA,
+ 		  18, 5, 2, 4, 6,
+ 		 129, 0, 4,16,24)
> village <- rep(c(553,154,218),c(5,5,5))
> vname <- rep(c("Ajura","Rafin Marke","Nasakar"),c(5,5,5))
> eirdates <- rep(c("1971-06-21 to 1971-11-07","1972-05-22 to 1972-10-22","1973-06-18 to 1973-11-04","1974-07-29 to 1974-12-15","1975-07-14 to 1975-11-30"),3)
> wetseason <- rep(1971:1975,3)
> deir <- data.frame(village,vname,wetseason,eirdates,eir)
> 
> 
> #-------------------------------
> # load the serology dataset
> #-------------------------------
> d <- read.csv("~/dropbox/articles/antibody-curves/data/garki/final/garki-sero.csv")
> 
> d$mdate <- as.Date(d$mdate,"%d %b %Y")
> 
> #-------------------------------
> # subset the dataset to
> # the 3 villages with EIR ests
> #-------------------------------
> ad <- subset(d,village==553|village==154|village==218)
> ad$vname <- factor(ad$vname)
> ad$vname <- factor(ad$vname,levels=c("Ajura","Nasakar","Rafin Marke"))
> ad$vname[ad$village==553] <- "Ajura"
> 
> #-------------------------------
> # Identify observations in the
> # wet seasons
> #-------------------------------
> ad$wetseason <- NA
> ad$wetseason[ad$mdate>="1971-06-21" & ad$mdate<="1971-11-07" ] <- 1971
> ad$wetseason[ad$mdate>="1972-05-22" & ad$mdate<="1972-10-22" ] <- 1972
> ad$wetseason[ad$mdate>="1973-06-18" & ad$mdate<="1973-11-04" ] <- 1973
> ad$wetseason[ad$mdate>="1974-07-29" & ad$mdate<="1974-12-15" ] <- 1974
> ad$wetseason[ad$mdate>="1975-07-14" & ad$mdate<="1975-11-30" ] <- 1975
> 
> table(ad$vname,ad$wetseason)
             
              1971 1972 1973 1974 1975
  Ajura        427  390  405  354  375
  Nasakar      345  738  358  361  318
  Rafin Marke  304  374  340  336  330
> 
> 
> #-------------------------------
> # IFAT-Pf
> # SuperLearner curve fits
> #-------------------------------
> 
> set.seed(2343242)
> ajura.1971.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==1971]+1),
+ 		Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==1971],
+ 		id=ad$id[ad$vname=="Ajura" & ad$wetseason==1971]
+ 	)
Loading required package: randomForest
randomForest 4.6-10
Type rfNews() to see new features/changes/bug fixes.
Loading required package: arm
Loading required package: MASS
Loading required package: Matrix
Loading required package: lme4

arm (Version 1.8-6, built: 2015-7-7)

Working directory is /Users/benarnold/SLAbcurves/src/garki


Attaching package: ‘arm’

The following object is masked from ‘package:scales’:

    rescale

Loading required package: gam
Loading required package: splines
Loading required package: foreach
Loaded gam 1.12

Loading required package: glmnet
Loaded glmnet 2.0-2


Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.2301414 0.0000000
SL.glm_All               0.2295111 0.0000000
SL.bayesglm_All          0.2295101 0.0000000
SL.loess_All             0.2139743 0.6354216
SL.gam_All               0.2222486 0.0000000
SL.gam.3_All             0.2176895 0.0000000
SL.glmnet_All            0.2319802 0.0000000
SL.randomForest.ns30_All 0.2166683 0.3645784
There were 50 or more warnings (use warnings() to see the first 50)
> ajura.1972.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==1972]+1),
+ 		Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==1972],
+ 		id=ad$id[ad$vname=="Ajura" & ad$wetseason==1972]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.2441052 0.0000000
SL.glm_All               0.2340155 0.0000000
SL.bayesglm_All          0.2340160 0.0000000
SL.loess_All             0.2008997 0.7088613
SL.gam_All               0.2227311 0.0000000
SL.gam.3_All             0.2155626 0.0000000
SL.glmnet_All            0.2338542 0.0000000
SL.randomForest.ns40_All 0.2080620 0.2911387
> ajura.1973.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==1973]+1),
+ 		Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==1973],
+ 		id=ad$id[ad$vname=="Ajura" & ad$wetseason==1973]
+ 	)	

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.5556666 0.0000000
SL.glm_All               0.5341850 0.0000000
SL.bayesglm_All          0.5341844 0.0000000
SL.loess_All             0.4461395 0.7064957
SL.gam_All               0.4971858 0.0000000
SL.gam.3_All             0.4768319 0.0000000
SL.glmnet_All            0.5328718 0.0000000
SL.randomForest.ns25_All 0.4620004 0.2935043
> 
> rafin.1971.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1971]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1971],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1971]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.3024786 0.0000000
SL.glm_All               0.2946094 0.0000000
SL.bayesglm_All          0.2946076 0.0000000
SL.loess_All             0.2831391 0.3387519
SL.gam_All               0.2887001 0.0000000
SL.gam.3_All             0.2831751 0.0000000
SL.glmnet_All            0.2990314 0.0000000
SL.randomForest.ns30_All 0.2758485 0.6612481
There were 14 warnings (use warnings() to see them)
> rafin.1972.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1972]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1972],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1972]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.8879689 0.0000000
SL.glm_All               0.7322316 0.0000000
SL.bayesglm_All          0.7322304 0.0000000
SL.loess_All             0.4979686 0.6625622
SL.gam_All               0.5755170 0.0000000
SL.gam.3_All             0.5234774 0.0000000
SL.glmnet_All            0.7334838 0.0000000
SL.randomForest.ns20_All 0.5443500 0.3374378
> rafin.1973.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1973]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1973],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1973]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.2945635 0.0000000
SL.glm_All               0.8628188 0.0000000
SL.bayesglm_All          0.8628168 0.0000000
SL.loess_All             0.4902831 0.7767946
SL.gam_All               0.6062409 0.0000000
SL.gam.3_All             0.5275745 0.0000000
SL.glmnet_All            0.8625702 0.0000000
SL.randomForest.ns20_All 0.6385411 0.2232054
> rafin.1974.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1974]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1974],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1974]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                             Risk      Coef
SL.mean_All              1.627967 0.0000000
SL.glm_All               1.393562 0.0000000
SL.bayesglm_All          1.393559 0.0000000
SL.loess_All             1.080864 0.4308148
SL.gam_All               1.134822 0.0000000
SL.gam.3_All             1.072488 0.3547515
SL.glmnet_All            1.397347 0.0000000
SL.randomForest.ns20_All 1.161897 0.2144337
> rafin.1975.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==1975]+1),
+ 		Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==1975],
+ 		id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==1975]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.2945624 0.0000000
SL.glm_All               1.1467757 0.0000000
SL.bayesglm_All          1.1467648 0.0000000
SL.loess_All             0.9681819 0.0000000
SL.gam_All               0.9620393 0.0000000
SL.gam.3_All             0.9342499 0.7806071
SL.glmnet_All            1.1468326 0.0000000
SL.randomForest.ns20_All 1.0145988 0.2193929
> 
> nasak.1971.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1971]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1971],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1971]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.1537679 0.6441938
SL.glm_All               0.1545321 0.3558062
SL.bayesglm_All          0.1545322 0.0000000
SL.loess_All             0.1670293 0.0000000
SL.gam_All               0.1564497 0.0000000
SL.gam.3_All             0.1601086 0.0000000
SL.glmnet_All            0.1570246 0.0000000
SL.randomForest.ns20_All 0.1562139 0.0000000
There were 50 or more warnings (use warnings() to see the first 50)
> nasak.1972.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1972]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1972],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1972]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              0.5118781 0.0000000
SL.glm_All               0.4441788 0.0000000
SL.bayesglm_All          0.4441788 0.0000000
SL.loess_All             0.3469323 0.7856866
SL.gam_All               0.4068165 0.0000000
SL.gam.3_All             0.3819198 0.0000000
SL.glmnet_All            0.4441444 0.0000000
SL.randomForest.ns15_All 0.3776159 0.2143134
> nasak.1973.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1973]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1973],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1973]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk       Coef
SL.mean_All              1.2912469 0.00000000
SL.glm_All               0.8474301 0.00000000
SL.bayesglm_All          0.8474288 0.00000000
SL.loess_All             0.5034072 0.91333568
SL.gam_All               0.6632551 0.00000000
SL.gam.3_All             0.5942188 0.00000000
SL.glmnet_All            0.8456123 0.00000000
SL.randomForest.ns15_All 0.6961504 0.08666432
> nasak.1974.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1974]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1974],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1974]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.7353316 0.0000000
SL.glm_All               1.3694075 0.0000000
SL.bayesglm_All          1.3694045 0.0280395
SL.loess_All             0.9575108 0.7478980
SL.gam_All               1.1317252 0.0000000
SL.gam.3_All             1.0119146 0.2240625
SL.glmnet_All            1.3724079 0.0000000
SL.randomForest.ns15_All 1.1389550 0.0000000
> nasak.1975.SL <- SLAb.curve(
+ 		Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==1975]+1),
+ 		Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==1975],
+ 		id=ad$id[ad$vname=="Nasakar" & ad$wetseason==1975]
+ 	)

Call:  SuperLearner(Y = fitd$Y, X = X, SL.library = SLlib, id = fitd$id) 


                              Risk      Coef
SL.mean_All              1.0872511 0.0000000
SL.glm_All               0.9117336 0.0000000
SL.bayesglm_All          0.9117280 0.0000000
SL.loess_All             0.5814585 0.7507575
SL.gam_All               0.7548246 0.0000000
SL.gam.3_All             0.6892388 0.0000000
SL.glmnet_All            0.9118886 0.0000000
SL.randomForest.ns40_All 0.6594417 0.2492425
> 
> #-------------------------------
> # TMLE estimates of age-adjusted
> # mean antibody titres in each
> # year (wet season only)
> #-------------------------------
> 
> set.seed(5463452)
> ajura.tmle <- sapply(c(1971,1972,1973),function(x) SLAb.tmle(
+   Y=log10(ad$ifatpftitre[ad$vname=="Ajura" & ad$wetseason==x]+1),
+   Age=ad$ageyrs[ad$vname=="Ajura" & ad$wetseason==x],
+   id=ad$id[ad$vname=="Ajura" & ad$wetseason==x])
+   )
 Population Mean
   Parameter Estimate:  3.4214
   Estimated Variance:  0.0019832
              p-value:  <2e-16
    95% Conf Interval: (3.3341, 3.5087) 
 Population Mean
   Parameter Estimate:  3.2896
   Estimated Variance:  0.0021101
              p-value:  <2e-16
    95% Conf Interval: (3.1995, 3.3796) 
 Population Mean
   Parameter Estimate:  3.3859
   Estimated Variance:  0.0043371
              p-value:  <2e-16
    95% Conf Interval: (3.2568, 3.515) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> rafin.tmle <- sapply(c(1971,1972,1973,1974,1975),function(x) SLAb.tmle(
+   Y=log10(ad$ifatpftitre[ad$vname=="Rafin Marke" & ad$wetseason==x]+1),
+   Age=ad$ageyrs[ad$vname=="Rafin Marke" & ad$wetseason==x],
+   id=ad$id[ad$vname=="Rafin Marke" & ad$wetseason==x])
+ )
 Population Mean
   Parameter Estimate:  3.3026
   Estimated Variance:  0.0031928
              p-value:  <2e-16
    95% Conf Interval: (3.1918, 3.4133) 
 Population Mean
   Parameter Estimate:  2.6727
   Estimated Variance:  0.010161
              p-value:  <2e-16
    95% Conf Interval: (2.4751, 2.8703) 
 Population Mean
   Parameter Estimate:  1.6749
   Estimated Variance:  0.012576
              p-value:  <2e-16
    95% Conf Interval: (1.4551, 1.8947) 
 Population Mean
   Parameter Estimate:  2.5026
   Estimated Variance:  0.015052
              p-value:  <2e-16
    95% Conf Interval: (2.2621, 2.7431) 
 Population Mean
   Parameter Estimate:  2.2584
   Estimated Variance:  0.016591
              p-value:  <2e-16
    95% Conf Interval: (2.0059, 2.5108) 
There were 11 warnings (use warnings() to see them)
> 
> nasak.tmle <- sapply(c(1971,1972,1973,1974,1975),function(x) SLAb.tmle(
+   Y=log10(ad$ifatpftitre[ad$vname=="Nasakar" & ad$wetseason==x]+1),
+   Age=ad$ageyrs[ad$vname=="Nasakar" & ad$wetseason==x],
+   id=ad$id[ad$vname=="Nasakar" & ad$wetseason==x])
+ )
 Population Mean
   Parameter Estimate:  3.4111
   Estimated Variance:  0.0014016
              p-value:  <2e-16
    95% Conf Interval: (3.3378, 3.4845) 
 Population Mean
   Parameter Estimate:  3.0592
   Estimated Variance:  0.0035201
              p-value:  <2e-16
    95% Conf Interval: (2.9429, 3.1755) 
 Population Mean
   Parameter Estimate:  1.861
   Estimated Variance:  0.012498
              p-value:  <2e-16
    95% Conf Interval: (1.6418, 2.0801) 
 Population Mean
   Parameter Estimate:  2.3353
   Estimated Variance:  0.016935
              p-value:  <2e-16
    95% Conf Interval: (2.0803, 2.5904) 
 Population Mean
   Parameter Estimate:  2.5548
   Estimated Variance:  0.017457
              p-value:  <2e-16
    95% Conf Interval: (2.2958, 2.8137) 
There were 50 or more warnings (use warnings() to see the first 50)
> 
> #-------------------------------
> # summarize the means + 95% CIs
> #-------------------------------
> ajura.mus <- matrix(unlist(ajura.tmle[c(1,3,4),]),nrow=3,ncol=3,byrow=T)
> rafin.mus <- matrix(unlist(rafin.tmle[c(1,3,4),]),nrow=5,ncol=3,byrow=T)
> nasak.mus <- matrix(unlist(nasak.tmle[c(1,3,4),]),nrow=5,ncol=3,byrow=T)
> colnames(ajura.mus) <- colnames(rafin.mus) <- colnames(nasak.mus) <- c("mu","lb","ub")
> all.mus <- rbind(ajura.mus,rep(NA,3),rep(NA,3),rafin.mus,nasak.mus)
> dmus <- data.frame(
+ 		vname=rep(c("Ajura","Rafin Marke","Nasakar"),c(5,5,5)),
+ 		wetseason=rep(1971:1975,3),
+ 		all.mus
+ )
> 
> #-------------------------------
> # merge the means to the EIR data
> #-------------------------------
> md <- merge(deir,dmus,by=c("vname","wetseason"))
> md <- subset(md,!is.na(eir))
> 
> # calculate log_10 eir.  add 1 to eir=0
> md$log10eir <- log10(md$eir)
> md$log10eir[md$eir==0] <- log10(1)
> 
> #-------------------------------
> # calculate spearman's rank 
> # correlation test statistic
> #-------------------------------
> 
> sp.rho <- cor.test(md$log10eir,md$mu,method="spearman")
Warning message:
In cor.test.default(md$log10eir, md$mu, method = "spearman") :
  Cannot compute exact p-value with ties
> sp.rho

	Spearman's rank correlation rho

data:  md$log10eir and md$mu
S = 92.627, p-value = 0.003441
alternative hypothesis: true rho is not equal to 0
sample estimates:
      rho 
0.7455303 

> rho.text <- substitute(paste("Spearman's ",rho," = ",rho.txt ),list(rho.txt=sprintf("%1.2f",sp.rho$estimate)))
> 
> #-------------------------------
> # plot the values
> #-------------------------------
> 
> pdf("~/dropbox/articles/antibody-curves/results/figs/garki-IFAPf-EIR.pdf",width=6,height=6)
> op <- par(mar=c(5,5,3,2)+0.1)
> # cols <- c(brewer.pal(8,"Dark2")[c(8,4)],brewer.pal(8,"Set1")[2])
> cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
> cols <- c(cbPalette[c(7,6,1)])
> 
> # lo <- layout(mat=matrix(1:3,nrow=1,ncol=3))
> # plot(1,type="n",bty="n",xlab="",ylab="",xaxt="n",yaxt="n")
> # plot(1,type="n",bty="n",xlab="",ylab="",xaxt="n",yaxt="n")
> 
> 
> i.cols <- rep(cbPalette[6],8)
> ytics <- seq(1,4,by=1)
> xtics <- seq(0,2,by=1)
> plot(1,1,type="n",bty="n",
+ 	xaxt="n",xlab="",xlim=c(0,2.2),
+ 	yaxt="n",ylab="",ylim=range(ytics),
+ 	las=1
+ 	)
> 	axis(1,at=xtics,labels=c(1,10,100),cex.axis=1.25)
> 	axis(2,at=ytics,labels=c(
+ 		expression(10^1),
+ 		expression(10^2),
+ 		expression(10^3),
+ 		expression(10^4)),
+ 		las=1,cex.axis=1.25
+ 	)
>   mtext("d",adj=1,line=0.5,at=-0.4,font=2,cex=2)
> 	mtext("Wet Season Village Geometric Mean",side=2,line=4,cex=1.25)
>   mtext(expression(paste(italic('P. falciparum')," IFA antibody titre, ", italic(E(Y[x])) )) ,side=2,line=2.5,cex=1.25)
> 	mtext("Entomological Inoculation Rate\n(Cumulative Wet Season Infectious Bites per Person)",side=1,line=3.5,cex=1.25)
> 	text(2,1,rho.text,adj=1,cex=1.25)
> 	
> 	# Ajura
> 	points(md$log10eir[md$vname=="Ajura"],md$mu[md$vname=="Ajura"], pch=16,cex=2,col=cols[1])
> 
> 	# Rafin Marke
> 	points(md$log10eir[md$vname=="Rafin Marke"],md$mu[md$vname=="Rafin Marke"], pch=16, cex=2,col=cols[2])
> 
> 	# Nasakar, exclude 1972 b/c it is out of the scale
> 	points(md$log10eir[md$vname=="Nasakar" & md$wetseason!=1972],md$mu[md$vname=="Nasakar" & md$wetseason!=1972], pch=16,cex=2,col=cols[3])
> 
> 	# circle pre-intervention measures
> 	points(md$log10eir[md$wetseason==1971],md$mu[md$wetseason==1971],cex=2)
> 	
> 	# label the villages
> 	ajura.x <- md$log10eir[md$vname=="Ajura" & md$wetseason==1971]
> 	ajura.y <- md$mu[md$vname=="Ajura" & md$wetseason==1971]
> 	segments(x0=ajura.x,y0=ajura.y+0.1,y1=ajura.y+0.2,col="gray40")
> 	text(ajura.x,ajura.y+0.2,"Ajura (control)",col=cols[1],pos=3,cex=1)
> 	
> 	rafin.x <- md$log10eir[md$vname=="Rafin Marke" & md$wetseason==1971]
> 	rafin.y <- md$mu[md$vname=="Rafin Marke" & md$wetseason==1971]
> 	segments(x0=rafin.x-0.07,x1=rafin.x-0.3,y0=rafin.y+0.07,y1=rafin.y+0.25,col="gray40")
> 	text(rafin.x-0.3,rafin.y+0.3,"Rafin Marke",col=cols[2],pos=2,cex=1)
> 	
> 	nasak.x <- md$log10eir[md$vname=="Nasakar" & md$wetseason==1971]
> 	nasak.y <- md$mu[md$vname=="Nasakar" & md$wetseason==1971]
>   segments(x0= nasak.x,y0= nasak.y +0.1,y1= nasak.y +0.4,col="gray40") 
>   text(nasak.x, nasak.y +0.4,"Nasakar",col=cols[3],pos=3,cex=1)
> 	
> par(op)
> dev.off()
null device 
          1 
> 
> 
> 
> 
> #-------------------------------
> # save the output
> #-------------------------------
> rm(d)
> save.image("~/dropbox/articles/antibody-curves/results/raw/garki-eir-comparison.RData")
> 
> 
> 
> 
> proc.time()
   user  system elapsed 
 88.913   1.415  92.286 
